@model Jurassic.CommonModels.Organization.DepartmentModel
@{
    Layout = "~/Views/Shared/_FormLayout.cshtml";
    ViewBag.ShowSearchBox = false;
}

<style>
    /*表单页面调整legend标签样式*/
    .frame-form legend {
        width: auto;
        font-size: 14px;
        margin-left: 15px;
        border-width: 0px;
    }

    .frame-form fieldset {
        border: solid 1px #d5d5d5;
        position: relative;
    }

</style>

<div class="mini-splitter frame-fit" style="width: 100%;">
    <div size="300" showcollapsebutton="true">
        <ul id="treeData" class="mini-tree" style="height:100%" url="@Url.Action("GetTreeData")" 
            showtreeicon="true" 
            textfield="Name" 
            idfield="Id"
            parentfield="ParentId" ,
            onnodeselect="nodeselect" 
            expandOnLoad ="true"
            resultastree="false"
            >
        </ul>
    </div> 
    <div showcollapsebutton="false">
        <div class="frame-fit" id="formData" style="overflow:scroll;">
        
            <table border="0" cellpadding="1" cellspacing="2" style="width: 428px; table-layout: fixed;">
                <tr>
                    <td class="col-md-10">
                        <input id="Id" name="Id" class="mini-hidden" value="@Model.Id" />
                        <input id="ParentId" name="ParentId" class="mini-hidden" value="@Model.ParentId" />
                        <input id="OrgNode" name="OrgNode" class="mini-hidden" value="@Model.OrgNode" />
                        <input id="ParentOrgNode" name="ParentOrgNode" class="mini-hidden" value="@Model.ParentOrgNode" />
                        <input id="ExamineType" name="ExamineType" class="mini-hidden" value="@Model.ExamineType" />
                        <input id="IsActive" name="IsActive" class="mini-hidden" value="@Model.IsActive" />
                        <input id="IsDeleted" name="IsDeleted" class="mini-hidden" value="@Model.IsDeleted" />
                        <input id="CreateDatetime" name="CreateDatetime" class="mini-hidden" value="@Model.CreateDatetime" />
                        <input id="ModifiedDateTime" name="ModifiedDateTime" class="mini-hidden" value="@Model.ModifiedDateTime" />

                        <input labelfield="true" label="@Html.Str("上级组织机构")" id="ParentOrg" name="ParentOrg" class="mini-textbox" style="width: 400px;" enabled="false" />
                    </td>
                </tr>
                <tr>
                    <td class="col-md-10">
                        <input labelfield="true" label="@Html.Str("组织机构名称")" name="Name" value="@Model.Name" required="true" class="mini-textbox" maxlength="50" style="width:400px;" />
                    </td>
                </tr>
                <tr>
                    <td class="col-md-10">
                        <input labelfield="true" label="@Html.Str("组织机构编码")" id="DepHID" name="DepHID" value="@Model.DepHID" required="true" onvalidation="onEnglishAndNumberValidation" class="mini-textbox" maxlength="20" style="width:400px;" />
                    </td>
                </tr>
                <tr>
                    <td class="col-md-10">
                        <div labelfield="true" label="@Html.Str("机构类型")" id="DepType" name="DepType"  class="mini-radiobuttonlist" repeatitems="1" repeatlayout="table" repeatdirection="vertical"
                            textfield="text" valuefield="id" value="@Model.DepType"
                            data="[{id: '1', text: '(1)@Html.Str("单位")'}, {id: '2', text: '(2)@Html.Str("部门")'}] ">
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="col-md-10">
                        <input labelfield="true" label="@Html.Str("排序")" name="Ord" id="Ord" class="mini-textbox" maxlength="5" value="@Model.Ord" />
                    </td>
                </tr>
                <tr>
                    <td class="col-md-10">
                        <input labelfield="true" label="@Html.Str("状态")" name="IsDisabled"  class="mini-radiobuttonlist"  value="@Model.IsDisabled" data="[{id: 0, text: '@Html.Str("启用")'}, {id: 1, text: '@Html.Str("禁用")'}]" style="width:400px;"/>
                    </td>
                </tr>
                <tr>
                    <td class="col-md-10">
                        <input labelfield="true" label="@Html.Str("备注")" value="@Model.Remark" name="Remark" maxlength="255" style="width:400px;height:100px" class="mini-textarea" />
                    </td>
                </tr>
            </table>

            <div class="frame-form" style="padding-top: 3px;width: 90%;">
                <fieldset style="height: 25px; border-width: 0px; border-top-width: 1px;">
                    <legend>
                        <label>
                            @Html.Str("部门相关岗位")
                        </label>
                    </legend>
                </fieldset>

                <div id="dataGridPost" class="mini-datagrid " style="width: 100%; height: auto;" multiselect="true"
                url="@Url.Action("GetDepPostData")"
                showpager="false"
                sortmode="client"
                allowcelledit="true"
                editnextrowcell="true"
                editnextonenterkey="true"
                allowcellselect="true"
                allowcellvalid="true">
                    <div property="columns">
                        <div field="Id" headeralign="center" allowsort="true" visible="false">主键ID</div>
                        <div field="DepId" headeralign="center" allowsort="true" visible="false">组织机构主键ID</div>
                        <div field="Name" headeralign="center" allowsort="true" visible="false">Name</div>
                        <div field="ExamineType" headeralign="center" allowsort="true" visible="false">ExamineType</div>
                        <div field="IsActive" headeralign="center" allowsort="true" visible="false">IsActive</div>
                        <div field="IsDisabled" headeralign="center" allowsort="true" visible="false">IsDisabled</div>
                        <div field="IsDeleted" headeralign="center" allowsort="true" visible="false">IsDeleted</div>
                        <div field="CreateDatetime" headeralign="center" allowsort="true" visible="false">创建日期</div>

                        <div field="handel" headeralign="center" align="center" width="40" renderer="onActionRenderer"><span class='glyphicon glyphicon-minus'></span></div>
                        <div type="comboboxcolumn" name="PostId" field="PostId" vtype="required" headeralign="center">
                            @Html.Str("岗位名称")
                            <input property="editor" class="mini-combobox" id="MainPost" url="@Url.Action("GetPostDataInfo")" textfield="PostName" valuefield="Id" onitemclick="onitemclick" />
                        </div>
                        <div field="PlanNumber" headeralign="center" allowsort="true" vtype="required" datatype="int" width="60">
                            @Html.Str("岗位人数")
                            <input property="editor" class="mini-spinner" minvalue="0" maxvalue="9999" format="n" />
                        </div>
                        <div field="Describe" headeralign="center" allowsort="true" width="70">
                            @Html.Str("岗位描述")
                            <input property="editor" class="mini-textbox" minwidth="1" maxlength="100" />
                        </div>
                        <div field="Duty" headeralign="center" allowsort="true" width="70">
                            @Html.Str("岗位责任")
                            <input property="editor" class="mini-textbox" />
                        </div>
                        <div field="Requirement" headeralign="center" allowsort="true" width="70">
                            @Html.Str("岗位要求")
                            <input property="editor" class="mini-textbox" />
                        </div>
                    </div>
                </div>

                <div style="padding-top: 2px; width: 100%;">
                    <div id="toolbar1" class="mini-toolbar">
                        <table cellpadding="0" cellspacing="0">
                            <tr>
                                <td>
                                    <a class="mini-button" iconcls="icon-new-add" plain="true" onclick="add('dataGridPost')">新增岗位</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <div class="frame-form" style="padding-top: 3px;width: 90%;">
                <fieldset style="height: 25px; border-width: 0px; border-top-width: 1px;">
                    <legend>
                        <label>
                            @Html.Str("部门相关人员")
                        </label>
                    </legend>
                </fieldset>

                <div id="dataGridUser" class="mini-datagrid " style="width: 100%; height: 200px;" multiselect="true"
                url="@Url.Action("GetDepUserData")"
                showpager="false"
                sortmode="client"
                allowcelledit="true"
                editnextrowcell="true"
                editnextonenterkey="true"
                allowcellselect="true"
                allowcellvalid="true"
                 
                oncellendedit="oncellendedit"
                @*oncellvalidation="onCellValidation"*@
                onupdate="onupdate"
                oncellclick="oncellclick"
                >
                    <div property="columns">
                        <div type="checkcolumn" headeralign="center" align="center"></div>
                        <div field="UserId" headeralign="center" allowsort="true" visible="false">用户ID</div>
                        <div field="Id" headeralign="center" allowsort="true" visible="false">主键ID</div>
                        <div field="DepId" headeralign="center" allowsort="true" visible="false">组织机构主键ID</div>
                        <div field="ExamineType" headeralign="center" allowsort="true" visible="false">ExamineType</div>
                        <div field="CreateDatetime" headeralign="center" allowsort="true" visible="false">创建日期</div>
                        <div field="IsDeleted" headeralign="center" allowsort="true" visible="false">IsDeleted</div>

                        <div field="handel" headeralign="center" align="center" width="40" renderer="onActionRenderer"><span class='glyphicon glyphicon-minus'></span></div>
                        <div field="UserName" headeralign="center" vtype="required" allowsort="true" width="70">
                            @Html.Str("用户名称")
                            @*<input property="editor" class="mini-textbox" minwidth="1" maxlength="10" />*@
                        </div>
                        <div type="comboboxcolumn" name="PostId" field="PostId" headeralign="center">
                            @Html.Str("岗位名称")
                        <input property="editor" class="mini-combobox" id="cboPost" url="@Url.Action("GetPostDataInfo")" textfield="PostName" valuefield="Id" />
                        </div>
                        <div type="comboboxcolumn" name="ContractType" field="ContractType" headeralign="center">
                            @Html.Str("合同类型")
                            <input property="editor" class="mini-combobox" url="@Url.Action("GetDictDataHT")" textfield="text" valuefield="id" />
                        </div>
                        <div field="ContractLenght" headeralign="center" allowsort="true" datatype="int" width="60">
                            @Html.Str("合同期限(年)")
                        <input property="editor" class="mini-spinner" minvalue="0" maxvalue="9999" format="n" />
                        </div>
                        @*<div field="JoinDateTime" headeralign="center" allowsort="true" dateformat="yyyy-MM-dd" width="60">
                            入职日期
                            <input property="editor" class="mini-datepicker" minwidth="1" maxlength="100" />
                        </div>
                        <div field="OutDateTime" headeralign="center" allowsort="true" dateformat="yyyy-MM-dd" width="60">
                            离职日期
                            <input property="editor" class="mini-datepicker" minwidth="1" maxlength="100" />
                        </div>*@
                        <div type="checkboxcolumn" field="IsLeader" trueValue="1" falseValue="0" width="60" headerAlign="center">
                            @Html.Str("是否主管")
                        </div>     
                        <div type="checkboxcolumn" name="IsMain" field="IsMain"  trueValue="1" falseValue="0" width="60" headerAlign="center">
                            @Html.Str("是否主部门")
                        </div> 
                    </div>
                </div>

                <div style="padding-top: 2px; width: 100%;">
                    <div id="toolbar1" class="mini-toolbar">
                        <table cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="width:100px;"> 
                                  <a class="mini-button glyphicon glyphicon-minus" onclick="javaScript:remove('dataGridUser');">@Html.Str("删除")</a>
                                </td>
                                <td>
                                    <input id="UserCode" name="UserCode" class="mini-lookup" labelfield="false" label="添加用户到部门" style="width: 250px;"
                                        textfield="UserName" valuefield="UserName" popupwidth="auto" allowinput="false"
                                        popup="#gridPanel" grid="#gridPanelSub" multiselect="true" text="@Html.Str("选择添加该部门用户")" />
                                    <div id="gridPanel" class="mini-panel" title="header" iconcls="icon-add" style="width: 550px; height: 300px;"
                                        showtoolbar="true" showclosebutton="true" showheader="false" bodystyle="padding:0" borderstyle="border:0">
                                        <div property="toolbar" style="padding: 5px; padding-left: 8px; text-align: center;">
                                            <div style="float: left; padding-bottom: 2px;">
                                                <span>@Html.Str("用户账号筛选")</span>
                                                <input id="keyText" class="mini-textbox" style="width: 160px;" onenter="onSearchClick" />
                                                <a class="mini-button" onclick="onSearchClick">@Html.Str("查询")</a>
                                                <a class="mini-button" onclick="gridPartyData = null;mini.get('gridPanelSub').reload();">@Html.Str("刷新")</a>
                                            </div>
                                            <div style="float: left; padding-bottom: 2px;">
                                                <a class="mini-button" onclick="javascript: addDep();">@Html.Str("加入部门")</a>
                                            </div>
                                            <div style="float: right; padding-bottom: 2px;">
                                                <a class="mini-button" onclick="javascript: mini.get('UserCode').hidePopup();">@Html.Str("关闭")</a>
                                            </div>
                                            <div style="clear: both;"></div>
                                        </div>
                                        <div id="gridPanelSub" class="mini-datagrid" style="width: 100%; height: 100%;"
                                         borderstyle="border:0"
                                         showpager="false"
                                         sortmode="client"
                                         url="@Url.Action("GetUserList")">
                                            <div property="columns">
                                                <div type="checkcolumn" headeralign="center" align="center"></div>
                                                @*取消掉单选*@
                                                @*<div field="handel" headeralign="center" align="center" width="40" renderer="onUserRenderer"><span class='glyphicon glyphicon-plus' title="添加到部门"></span></div>*@
                                                <div field="UserId" headeralign="center" allowsort="true" visible="false">用户主键ID</div>

                                                <div field="UserName" width="100" headeralign="center" align="left" allowsort="true">@Html.Str("用户账号")</div>
                                                <div field="DepName" headeralign="center" align="center" allowsort="true">@Html.Str("当前所属主部门")</div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>

            </div>

            <div style="height:100px;">

            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    mini.parse();

    var dataGridUser = mini.get('#dataGridUser')
    var dataGridPost = mini.get('#dataGridPost')
    //左侧树组件 
    var treeData = mini.get('#treeData')
    var form = new mini.Form("formData");
    //机构编码文本组件
    var txtOrgCode = new mini.Form("DepHID");
    //父节点Id组件
    var txtParentId = mini.get('#ParentId')
    //父节点名称组件
    var txtParentOrg = mini.get('#ParentOrg')
    //表单内嵌Grid
    var gridPanelSub = mini.get('gridPanelSub')
    //表单内嵌查询框
    var keyText = mini.get("keyText");
    gridPanelSub.load();

    $(function () {
        //打开页面默认选中根节点
        var nodes = treeData.getList().length;
        if (nodes > 0)
            treeData.selectNode(treeData.getList()[0]);

    });

    //判断是否重复添加岗位到部门关系
    function onitemclick(e) {
        //一个部门只允许出现一个岗位信息
        var cbo = e.sender;
        var gridData = dataGridPost.getData();
        for (i = 0; i < gridData.length; i++) {
            var postId = gridData[i]["PostId"]; 
            if (postId == cbo.getValue()) {
                alert('@ResHelper.GetStr("你所选择的岗位已经添加!")');
                cbo.setValue('');
                return;
            }
        }
    }

    //组织结构与人员关系表单元格点击事件
    function oncellclick(e) {
        //只对岗位列进行设置
        if (e.column.field == "PostId") {
            //部门与员工表格内部的的岗位下拉框
            var cboPost = mini.get('cboPost')
            //部门与岗位表格内部的的岗位下拉框
            var cboMainPost = mini.get('MainPost')
            //部门与岗位表格数据
            var gData = dataGridPost.getData()
            //部门与岗位表格内部的的岗位下拉框数据
            var cData = []
            if (cboMainPost) {
                cData = cboMainPost.getData()
            }
            //进行过滤只有该部门关联的岗位才允许作为员工与岗位设置关系.
            var arr = [];
            for (var i = 0; i < cData.length; i++) {
                for (var j = 0; j < gData.length; j++) {
                    if (gData[j].PostId == cData[i].Id) {
                        arr.push(cData[i]);
                        break;
                    }
                }
            }
            cboPost.setData(arr);
        }

        
    }

    //添加单元格内部删除图标以及删除行事件
    function onActionRenderer(e) {
        var grid = e.sender;
        var s = "<a href='javaScript:remove(" + grid.id + ")'><span class='glyphicon glyphicon-minus' title='@Html.Str("删除")'></span></a>"
        return s;
    }

    //部门与人员下拉框内部grid的添加事件以及图标
    //取消掉单选
    //function onUserRenderer(e) {
    //    var s = "<a href='javaScript:addDep()'><span class='glyphicon glyphicon-plus' title='添加到部门'></span></a>"
    //    return s;
    //}

     
    //添加人员到组织机构,并且判断不允许重复添加人员到同一个组织机构
    function addDep() {
        //var node = treeData.getSelectedNode()
        //
        var rows = gridPanelSub.getSelecteds();
        var rowIndex = dataGridUser.getData().length;
        var newRow = {};
        if (rows.length == 0)
            return;

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i]
            //取消重复
            var resRow = dataGridUser.findRow(function (subRow) {
                if (subRow["UserId"] == row["UserId"])
                    return true;
                return false;
            });
            if (resRow) {
                continue;
            }
            //判断如果是该用户已经设置了主要部门的情况下,该用户再次设置部门时候默认不作为主要部门
            var ism = row["DepName"]
            if (ism) {
                ism = 0;
            } else {
                ism = 1;
            }
            //
            newRow = {
                UserName: row["UserName"],
                UserId: row["UserId"],
                IsLeader: 0,
                IsMain: ism
            };
            dataGridUser.addRow(newRow, rowIndex);
        }
    }

    //树节点选中事件,刷新明细数据
    function nodeselect(e) {
        var node = treeData.getSelectedNode()
        if (node == null || node["Id"] == '') {
            form.reset();
            return;
        }
        var dataID = node["Id"];
        //添加树组件加载遮罩,避免频繁点击树节点造成卡死
        treeData.mask();

        $.ajax({
            url: "@Url.Action("GetDataInfo")" + "?id=" + dataID,
            success: function (text) {
                var o = mini.decode(text);
                form.setData(o);
            },
            complete: function () {
                //form.unmask();
                //设置机构编码不允许编辑
                txtOrgCode.el.disabled = true;
                //刷新岗位明细信息
                dataGridPost.load({ id: dataID });
                //刷新人员明细信息
                dataGridUser.load({ id: dataID });

                //选择部门的过程中,把所选择的部门上级名称显示出来
                if (!treeData.getParentNode(node))
                    return;
                if (!treeData.getParentNode(node)["Id"]) 
                    return;
                txtParentOrg.setValue(
                    treeData.getParentNode(node)["Name"] + "(" + treeData.getParentNode(node)["DepHID"] + ")");
            }
        });
    }
    //添加表格加载完成事件避免频繁点击树节点造成卡死
    function onupdate()
    {
        treeData.unmask();
    }

    //新增主节点按钮事件
    function addNew() {
        form.reset();
        dataGridPost.clearRows();
        dataGridUser.clearRows();
        var node = treeData.getSelectedNode()
        if (node != null) {
            //添加上级节点id、上级节点名称、上级节点的住址结构节点Node值
            txtParentId.setValue(node["Id"]);
            txtParentOrg.setValue(node["Name"] + "(" + node["DepHID"] + ")");
            mini.get('#ParentOrgNode').setValue(node["OrgNode"]);
        }
        //设置机构编码在新增状态允许输入
        txtOrgCode.el.disabled = false;;
    }
    
    //添加自定义验证组织机构的编码文本组件验证
    function onEnglishAndNumberValidation(e) {
        if (!e.isValid)
            return;
        if (isEnglishAndNumber(e.value) == false) {
            e.errorText = "@ResHelper.GetStr("只允许输入英文或数字!")";
            e.isValid = false;
        }
    }

    //是否英文或数字,添加自定义验证组织机构的编码文本组件验证
    function isEnglishAndNumber(v) {
        var re = new RegExp("^[0-9a-zA-Z\_]+$");
        if (re.test(v)) return true;
        return false;
    }

    //验证人员与部门关系表字段
    function oncellendedit(e, record,c) {
        if (e.field == "IsLeader") {
            var data = dataGridUser.getData(null, false);
            for (i = 0; i < data.length; i++) {
                //如果当前行选择了是,其他行设置为否
                if (data[i]._uid != e.row._uid && e.row["IsLeader"] == 1) {
                    if (dataGridUser.getRow(i)["_state"]!="added") {
                        dataGridUser.getRow(i)["_state"] = "modified";
                    }
                    dataGridUser.getRow(i)["IsLeader"] = 0;
                }
            }
            //非要重新加载数据才能刷新页面数据
            dataGridUser.setData(data);
        }
       
        //检查该用户是否已经设置了主部门
        if (e.field == "IsMain") {
            if (e.row["IsMain"] != 1)
                return;
            //获取当前行用户账号
            var did = e.row["DepId"];
            var uname = e.row["UserName"];
            //查询是否存在其他主部门
            $.ajax({
                url: "@Url.Action("VerifyUserIsMainOrg")",
                type: "Post",
                data: { name: uname, id: did },
                dataType: "json",
                //success: OnSuccess,
                complete: function (data) {
                    //debugger;
                    if (data.statusText != "ok" && data.responseJSON["DepName"]) {
                        var dname= data.responseJSON["DepName"]
                        if (!confirm("@Html.Str("该用户已设置主部门")" + dname + ",@Html.Str("是否调整为当前所设置的部门")" + "\r\n" + "@Html.Str("是=以当前部门做主部门")" + "\r\n" + "@Html.Str("否=不调整主部门")")) {
                            var data = dataGridUser.getData(null, false);
                            e.row["IsMain"] = "0";
                            //非要重新加载数据才能刷新页面数据
                            dataGridUser.setData(data);
                            return ;
                        }
                    }
                }
            });
        }
    }
    
    $.regButton({
        id: "021106003",
        beforeSubmit: function (ajax) {
            var node = treeData.getSelectedNode()
            if (node == null || node["Id"] == '') {
                alert("@ResHelper.GetStr("请选择一个组织机构!")");
                return false;
            }
            if (!treeData.isLeaf(node)) {
                alert("@ResHelper.GetStr("请先删该组织机构所对应的子节点!")");
                return false;
            }
            if (!confirm("@ResHelper.GetStr("确定删除所选择组织机构以及相关岗位人员信息?")")) {
                return false;
            }
            ajax.data = { id: node["Id"] } 
        },
        afterSubmit: function (data) {
            var node = treeData.getSelectedNode()
            if (data.Type == "success" && node) { 
                treeData.removeNode(node);
                dataGridPost.clearRows();
                dataGridUser.clearRows();
                form.reset();
                //设置机构编码在新增状态允许输入
                txtOrgCode.el.disabled = false;
            }
        }
    });

    function postInfo() {
        mini.open({
            url: "@Url.Action("PostInfo")",
            title: "@Html.Str("岗位基础信息")",
            width: 600,
            height: 500,
            allowResize: false
        });
    }

    $.regButton({
        id: "021106004",
        noSubmit: postInfo
    });

    $.regButton({
        id: "021106001",
        noSubmit: addNew
    });

    $.regButton({
        id: "021106002",
        beforeSubmit: function (ajax) {
            //获取所选择的上级部门节点值,并设置到表单的ParentOrgNode字段
            var node = treeData.getSelectedNode();
            mini.get('#ParentOrgNode').setValue("");
            if (node != null) {
                mini.get('#ParentOrgNode').setValue(node["OrgNode"]);
            }
            //验证grid数据
            if (!gridValid(dataGridPost, "@Html.Str("岗位信息")")) {
                return false;
            }
            //验证grid数据
            if (!gridValid(dataGridUser, "@Html.Str("部门人员")")) {
                return false;
            }
            //验证表单数据
            if (form.isValid() == false) {
                return false;
            }
            var data1 = dataGridPost.getChanges(null, false);
            var json1 = mini.encode(data1);
             
            var data2 = dataGridUser.getChanges(null, false);
            var json2 = mini.encode(data2);

            //获取表单的数据
            var data = form.getData();
            var formJson = mini.encode(data);

            //打包提交数据
            ajax.data = {
                formData: formJson,
                grid1: json1,
                grid2: json2
            };
        },
        afterSubmit: function (data) {
            data = data.ReturnValue;
            if (!data) {
                return;
            }
            //刷新并选中节点
            var newNode = data.Data.data
            if (newNode) {
                //设置选择为空节点,并刷新树节点
                treeData.selectNode({});
                treeData.load("@Url.Action("GetTreeData")")
                treeData.selectNode(newNode); 
            }
        }
    });

   
    //新增部门岗位信息
    //新增一个行对象 新增行是在数据列表最后
    //参数g = grid组件ID
    function add(g) {
        var grid = mini.get(g)
        var rowIndex = grid.getData().length;
        //设置默认值
        var newRow = {PlanNumber: 1};
        grid.addRow(newRow, rowIndex);
    }

    //删除一个行对象(支持多选删除)
    //参数g = grid组件ID
    function remove(g) {
        var grid = mini.get(g)
        var rows = grid.getSelecteds();
        if (rows.length > 0) {
            grid.removeRows(rows, true);
        }
    }
   
    //验证Grid表单
    //参数grid = grid组件对象
    //参数msg = 验证消息前缀描述(通常是grid表格业务名称)
    function gridValid(grid, msg) {
        //提交Grid编辑的数据
        grid.commitEdit();
        //开始验证Grid表单
        grid.validate();
        //判断验证Grid数据填写是否完整
        if (grid.isValid() == false) {
            var error = grid.getCellErrors()[0];
            //去空格以及/r/n
            var columnName = $.trim(error.column.header.replace(/[\r\n]/g, ""));
            alert(msg + " " + columnName + ":" + error.errorText);
            grid.beginEditCell(error.record, error.column);
            return false;
        }
        return true;
    }

    //人员选择LookUpGrid内部筛选
    var gridPartyData = null;
    function onSearchClick(e) {
        //保存所有的值
        if (gridPartyData == null)
            gridPartyData = gridPanelSub.getData();
        //客户端本地过滤
        var arr = [];
        for (i = 0; i < gridPartyData.length; i++) {
            var userName = gridPartyData[i]["UserName"].toLowerCase();
            //排除当前正在编辑的行
            //keyText.value.indexOf(vCn)
            if (userName.indexOf(keyText.value.toLowerCase()) >= 0) {
                arr.push(gridPartyData[i]);
            }
        }
        gridPanelSub.setData(arr);
    }


    function reloadMainData() {
        var MainPost = mini.get('MainPost')
        if (MainPost) {
            //重新加载发票归类下拉框数据
            MainPost.load(MainPost.url);
        }
    }

</script>
