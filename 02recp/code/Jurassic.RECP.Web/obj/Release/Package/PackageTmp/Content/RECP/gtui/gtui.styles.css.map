{"version":3,"sources":["webpack:///webpack:///client/SoUI/Src/Js/Components/SoDropdown/SoDropDown.vue","webpack:///webpack:///client/SoUI/src/js/components/SoFilter/SoFilter.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDropdown/SoDropDown.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDataList/SoDataList.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDataList/SoDataList2.0.vue","webpack:///webpack:///client/SoUI/src/js/components/SoPage/SoPage.vue","webpack:///webpack:///client/SoUI/src/js/components/SoImage/SoImage.vue","webpack:///webpack:///client/SoUI/src/js/components/SoTree/SoTree.vue","webpack:///webpack:///client/SoUI/src/js/components/SoForm/SoForm.vue","webpack:///webpack:///client/SoUI/src/js/components/SoForm/FormInput.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDetail/SoDetail.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDetail/SoDetail2.vue","webpack:///webpack:///client/SoUI/src/js/components/SoTop/SoTop.vue","webpack:///webpack:///client/SoUI/src/js/components/SoRemark/SoRemark.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDataGrid/SoDataGrid.vue","webpack:///webpack:///client/SoUI/src/js/components/SoPageTemplate/SoPageTemplate.vue","webpack:///webpack:///client/SoUI/src/js/components/SoDropDownTemplate/SoDropDownTemplate.vue","webpack:///webpack:///client/components/cellRender/GtPTRender2.0.vue","webpack:///webpack:///client/components/cellRender/GtPTRender.vue","webpack:///webpack:///client/components/cellRender/GTPTListRender.vue","webpack:///webpack:///client/components/PTList/ptlist.vue","webpack:///webpack:///client/components/PTList/ptlist2.0.vue","webpack:///webpack:///client/components/ptsubmit/ptsubmit.vue","webpack:///webpack:///client/components/cellRender/gtPTRenderForDetail.vue","webpack:///webpack:///client/components/CellRender/GtPTRender.vue","webpack:///webpack:///client/components/gtrecommend/gtrcmdtabs.vue","webpack:///webpack:///client/components/gtrecommend/gtRcmdSemantics.vue","webpack:///webpack:///client/components/GtRecommend/gtRcmdBONear.vue","webpack:///webpack:///client/components/GtRecommend/gtRcmdBOSimilar.vue","webpack:///webpack:///client/components/GtRecommend/gtRcmdBOAssociate.vue"],"names":[],"mappings":";AAwIA;QACA;CACA;AAEA;QACA;CACA;AAEA;QACA;CACA;AAEA;QACA;CACA;AAEA;QACA;QACA;CACA;IACA;;;IAGA;AAEA;QACA;QACA;CACA;AAEA;QACA;QACA;QACA;QACA;CACA;IACA;;;;IAIA;;ACxFA;IACA;IACA;IACA;CACA;;AC4CA;QACA;CACA;AAEA;QACA;CACA;AAEA;QACA;CACA;AAEA;QACA;CACA;AAEA;QACA;QACA;CACA;IACA;;;IAGA;AAEA;QACA;QACA;CACA;AAEA;QACA;QACA;QACA;QACA;CACA;IACA;;;;IAIA;;ACnEA;IACA;IACA;IACA;CACA;AAEA;;;;IAIA;CACA;AAEA;;;IAGA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;IACA;CACA;AAEA;;IAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;CACA;;ACjEA;IACA;IACA;IACA;CACA;AAEA;;;;IAIA;CACA;AAEA;;;IAGA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;IACA;CACA;AAEA;;IAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;CACA;;ACgEA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECpHA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;;;;KAIA;AAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;CACA;AAEA;MACA;MACA;CACA;AAEA;MACA;CACA;AAEA;MACA;MACA;CACA;;;ACyEA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAEA;IACA;CACA;;AChKA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4JA;;;;;;;;;;OAUA;AACA;OACA;OACA;CACA;AACA;QACA;CACA;AAEA;QACA;QACA;CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjNA;IACA;CACA;AACA;CAAA;AACA;CAAA;;ACxBA;IACA;CACA;AACA;CAAA;AACA;CAAA;AACA;IACA;CACA;;ACRA;IACA;IACA;IACA;CACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AACA;IACA;IACA;CACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AACA;IACA;IACA;IACA;CACA;AACA;IACA;CACA;AACA;IACA;IACA;IACA;IACA;IACA;CACA;AACA;IACA;CACA;AACA;IACA;IACA;IACA;IACA;CACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AACA;IACA;CACA;AACA;IACA;CACA;AACA;IACA;CACA;;ACwFA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;IACA;CAEA;AAEA;IACA;CAEA;AAEA;IACA;CACA;;;;;;;;;;;;;;;;;ACiGA;IACA;IACA;CACA;AAEA;IACA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;;IAEA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;;;IAGA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;;IAEA;CACA;;ACrUA;IACA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;IACA;CACA;;AC3GA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;CACA;AAEA;IACA;IACA;CACA;AAEA;IACA;CACA;;ACmUA;IACA;IACA;;;cAGA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;CACA;;ACmFA;IACA;AACA;;;kBAGA;IACA;IACA;IACA;CACA;;AC9YA;IACA;IACA;;;cAGA;IACA;;IAEA;IACA;IACA;IACA;IACA;CACA;;ACiIA;IACA;IACA;CACA;;ACgEA;IACA;IACA;CACA;;ACaA;IACA;CACA;AAEA;IACA;CACA;;AAEA;AACA;IACA;CACA;;ACoJA;IACA;AACA;;;kBAGA;IACA;IACA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;CACA;;ACXA;IACA;AACA;;;kBAGA;IACA;IACA;IACA;CACA;;ACvXA;EACA;CACA;;ACuEA;EACA;CACA;AAEA;EACA;EACA;EACA;EACA;CACA;;ACxCA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;CACA;AAEA;IACA;IACA;CACA;;ACsMA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;CACA;AAEA;IACA;CACA;;ACjQA;IACA;CACA;AAEA;IACA;IACA;IACA;IACA;CACA","file":"gtui.styles.css","sourcesContent":["<template>\r\n    <div class=\"dropdown\">\r\n        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\"> {{listitle}}\r\n            <span class=\"caret\"></span></a>\r\n        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li role=\"presentation\" v-for=\"(item,index) in data\">\r\n                <!--<a v-if=\"checkbox\">-->\r\n                <a v-if=\"checkbox\" v-on:click=\"checkClick(index)\" v-on:click.stop>\r\n                    <input type=\"checkbox\" v-bind:value=\"index\" v-model=\"checkeds[index]\" />\r\n                    <span> {{item.text}} </span><span style=\"color:green\" v-if=\"item.count!=0\"> {{item.count}}</span>\r\n                </a>\r\n                <a v-else v-on:click=\"textClick(index)\">\r\n                    {{item.text}}\r\n                </a>\r\n            </li>\r\n            <template v-if=\"selectall\">\r\n                <li role=\"presentation\" class=\"divider\"></li>\r\n                <li role=\"presentation\" class=\"bottom-link\">\r\n                    <a role=\"menuitem\" href=\"#\" v-on:click=\"filterAll\">所有{{title}}</a>\r\n                    <a role=\"menuitem\" href=\"#\" v-on:click=\"filterfun\" v-show=\"checkbox\">\r\n                        <span class=\"glyphicon glyphicon-search\"></span>搜索\r\n                    </a>\r\n                </li>\r\n            </template>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        props: {\r\n            filter: {\r\n                type: String,\r\n                default: \"\"\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: \"\"\r\n            },\r\n            checkbox: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            selectall: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            onclick: Function\r\n        },\r\n        data: function () {\r\n            let cks = [];\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                cks[i] = false;\r\n            }\r\n            return {\r\n                checkeds: cks,\r\n                listitle: this.title\r\n            }\r\n        },\r\n        methods: {\r\n            //返回筛选条件\r\n            filterBack: function () {\r\n                this.onclick && this.onclick();\r\n                this.filterstr = [];\r\n            },\r\n            initDrop: function () {\r\n                this.listitle = this.title;\r\n                for (var i = 0; i < this.data.length; i++) {\r\n                    this.$set(this.checkeds, i, false);\r\n                }\r\n            },\r\n            //获得下拉列表选中的项\r\n            getCheckeds: function () {\r\n                var arrays = [];\r\n                for (var i = 0; i < this.checkeds.length; i++) {\r\n                    if (this.checkeds[i]) {\r\n                        arrays.push({ text: this.data[i].text, value: this.data[i].value, index: i });\r\n                    }\r\n                }\r\n                return {\r\n                    filter: this.filter,\r\n                    data: arrays\r\n                };\r\n            },\r\n            checkAllDrop: function () {\r\n                this.listitle = \"所有\" + this.title;\r\n                for (var i = 0; i < this.data.length; i++) {\r\n                    this.$set(this.checkeds, i, true);\r\n                }\r\n            },\r\n            //Text点击事件\r\n            textClick: function (index) {\r\n                this.listitle = this.data[index].text;  \r\n                this.filterBack();\r\n            },\r\n\r\n            //设置checkbox的状态\r\n            checkClick: function (index) {\r\n                var ischek = this.checkeds[index]\r\n                this.$set(this.checkeds, index, ischek);\r\n            },\r\n            //搜索所有\r\n            filterAll: function () {\r\n                this.checkAllDrop();\r\n                this.filterBack();\r\n            },\r\n            //搜索\r\n            filterfun: function () {\r\n                var arrays = [];\r\n                for (var i = 0; i < this.checkeds.length; i++) {\r\n                    if (this.checkeds[i]) {\r\n                        arrays.push( this.data[i].text);\r\n                    }\r\n                }\r\n                var n = arrays.length;\r\n                if (n == 0) {\r\n                    this.filterAll();\r\n                    return;\r\n                }\r\n                else {\r\n                    if (n == 1)\r\n                        this.listitle = arrays[0];\r\n                    else\r\n                        this.listitle = \"选中\" + n + \"个\";\r\n                }\r\n                this.filterBack();\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    a {\r\n        cursor: pointer;\r\n    }\r\n    \r\n    input {\r\n        cursor: pointer;\r\n    }\r\n    \r\n    .dropdown {\r\n        left: 20px;\r\n    }\r\n    \r\n    .dropdown-toggle {\r\n        color: #898989;\r\n    }\r\n    \r\n    .dropdown .caret {\r\n        color: #898989;\r\n        margin: 0;\r\n    }\r\n    /* .bottom-link > a:nth-child(1) {\r\n    display: inline-block;\r\n    width: 57%;\r\n} */\r\n    \r\n    .bottom-link > a > span {\r\n        color: #ccc;\r\n        padding: 2px;\r\n    }\r\n    \r\n    .dropdown-menu .divider {\r\n        height: 1px;\r\n        margin: 5px 0;\r\n        overflow: hidden;\r\n        background-color: #e5e5e5;\r\n    }\r\n    /* .bottom-link > a:nth-child(2) {\r\n    display: inline-block;\r\n    width: 40%;\r\n    padding: 3px 1px;\r\n} */\r\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/Src/Js/Components/SoDropdown/SoDropDown.vue?11cc5a46","<template>\n    <div>\n        <div class=\"filter-head\">\n            <span>{{tip}} </span>\n            <div class=\"pull-right\" style=\"cursor: pointer;\" @click=\"showList\">\n                <span class=\"glyphicon glyphicon-filter\"></span>筛选\n            </div>\n        </div>\n        <div class=\"filter-filtrate\">\n            <span style=\"font-weight: bold; color: #3385ff;\">{{title}}</span>\n            <template v-for=\"item in data\">\n                <sodropdown class=\"filter-dropdown\" :data=\"item.droplist\" :filter=\"item.filter\" :title=\"item.title\" :checkbox=\"item.checkbox\"\n                    :onclick=\"txtclick\" ref=\"sodropdown\">\n                    </sodropdown>\n            </template>\n            <div class=\"pull-right\" style=\"cursor: pointer\" @click=\"hideList\">\n                <span v-bind:class=\"{ 'glyphicon glyphicon-chevron-up': isup, 'glyphicon glyphicon-remove':isdel }\"> </span>                {{clickTitle}}\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import sodropdown from '../SoDropdown/SoDropDown.vue';\n    export default {\n        data: function () {\n            return {\n                isup: true,\n                isdel: false,\n                clickTitle: \"收起\",\n            }\n        },\n        mounted: function () {\n            $(\".filter-filtrate\").hide();\n        },\n        props: {\n            data: Array,\n            tip: String,\n            title: {\n                type: String,\n                default: \"筛选条件\"\n            },\n            onclean: Function,\n            onclick: Function\n        },\n\n        methods: {\n            txtclick: function () {\n                this.isup = false;\n                this.isdel = true;\n                this.clickTitle = \"清除\";\n                let chechedValues = [];\n                var models = this.$refs.sodropdown;\n                for (let i = 0; i < models.length; i++) {\n                    chechedValues.push(models[i].getCheckeds());\n                }\n                // this.onclick && this.onclick(value);\n                this.onclick && this.onclick(chechedValues);\n            },\n            showList: function () {\n                $(\".filter-head\").hide(500);\n                $(\".filter-filtrate\").show(500);\n                this.isup = true;\n            },\n\n            hideList: function () {\n                if (this.isup == true) {\n                    $(\".filter-head\").show(500);\n                    $(\".filter-filtrate\").hide(500);\n                } else {\n                    this.isup = true;\n                    this.isdel = false;\n                    this.clickTitle = \"收起\";\n                    var models = this.$refs.sodropdown;\n                    for (let i = 0; i < models.length; i++) {\n                        models[i].initDrop();\n                    }\n                }\n                this.onclean && this.onclean(null);\n            }\n        },\n        components: {\n            sodropdown: sodropdown\n        }\n    }\n\n</script>\n\n<style scoped>\n    .filter-dropdown {\n        display: inline;\n        margin-right: 50px;\n        margin-bottom: 15px;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoFilter/SoFilter.vue?493f1e4a","<template>\r\n    <div class=\"dropdown\">\r\n        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\"> {{listitle}}\r\n            <span class=\"caret\"></span></a>\r\n        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li role=\"presentation\" v-for=\"(item,index) in data\">\r\n                <!--<a v-if=\"checkbox\">-->\r\n                <a v-if=\"checkbox\" v-on:click=\"checkClick(index)\" v-on:click.stop>\r\n                    <input type=\"checkbox\" v-bind:value=\"index\" v-model=\"checkeds[index]\" />\r\n                    <span> {{item.text}} </span><span style=\"color:green\" v-if=\"item.count!=0\"> {{item.count}}</span>\r\n                </a>\r\n                <a v-else v-on:click=\"textClick(index)\">\r\n                    {{item.text}}\r\n                </a>\r\n            </li>\r\n            <template v-if=\"selectall\">\r\n                <li role=\"presentation\" class=\"divider\"></li>\r\n                <li role=\"presentation\" class=\"bottom-link\">\r\n                    <a role=\"menuitem\" href=\"#\" v-on:click=\"filterAll\">所有{{title}}</a>\r\n                    <a role=\"menuitem\" href=\"#\" v-on:click=\"filterfun\" v-show=\"checkbox\">\r\n                        <span class=\"glyphicon glyphicon-search\"></span>搜索\r\n                    </a>\r\n                </li>\r\n            </template>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        props: {\r\n            filter: {\r\n                type: String,\r\n                default: \"\"\r\n            },\r\n            data: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: \"\"\r\n            },\r\n            checkbox: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            selectall: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            onclick: Function\r\n        },\r\n        data: function () {\r\n            let cks = [];\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                cks[i] = false;\r\n            }\r\n            return {\r\n                checkeds: cks,\r\n                listitle: this.title\r\n            }\r\n        },\r\n        methods: {\r\n            //返回筛选条件\r\n            filterBack: function () {\r\n                this.onclick && this.onclick();\r\n                this.filterstr = [];\r\n            },\r\n            initDrop: function () {\r\n                this.listitle = this.title;\r\n                for (var i = 0; i < this.data.length; i++) {\r\n                    this.$set(this.checkeds, i, false);\r\n                }\r\n            },\r\n            //获得下拉列表选中的项\r\n            getCheckeds: function () {\r\n                var arrays = [];\r\n                for (var i = 0; i < this.checkeds.length; i++) {\r\n                    if (this.checkeds[i]) {\r\n                        arrays.push({ text: this.data[i].text, value: this.data[i].value, index: i });\r\n                    }\r\n                }\r\n                return {\r\n                    filter: this.filter,\r\n                    data: arrays\r\n                };\r\n            },\r\n            checkAllDrop: function () {\r\n                this.listitle = \"所有\" + this.title;\r\n                for (var i = 0; i < this.data.length; i++) {\r\n                    this.$set(this.checkeds, i, true);\r\n                }\r\n            },\r\n            //Text点击事件\r\n            textClick: function (index) {\r\n                this.listitle = this.data[index].text;  \r\n                this.filterBack();\r\n            },\r\n\r\n            //设置checkbox的状态\r\n            checkClick: function (index) {\r\n                var ischek = this.checkeds[index]\r\n                this.$set(this.checkeds, index, ischek);\r\n            },\r\n            //搜索所有\r\n            filterAll: function () {\r\n                this.checkAllDrop();\r\n                this.filterBack();\r\n            },\r\n            //搜索\r\n            filterfun: function () {\r\n                var arrays = [];\r\n                for (var i = 0; i < this.checkeds.length; i++) {\r\n                    if (this.checkeds[i]) {\r\n                        arrays.push( this.data[i].text);\r\n                    }\r\n                }\r\n                var n = arrays.length;\r\n                if (n == 0) {\r\n                    this.filterAll();\r\n                    return;\r\n                }\r\n                else {\r\n                    if (n == 1)\r\n                        this.listitle = arrays[0];\r\n                    else\r\n                        this.listitle = \"选中\" + n + \"个\";\r\n                }\r\n                this.filterBack();\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    a {\r\n        cursor: pointer;\r\n    }\r\n    \r\n    input {\r\n        cursor: pointer;\r\n    }\r\n    \r\n    .dropdown {\r\n        left: 20px;\r\n    }\r\n    \r\n    .dropdown-toggle {\r\n        color: #898989;\r\n    }\r\n    \r\n    .dropdown .caret {\r\n        color: #898989;\r\n        margin: 0;\r\n    }\r\n    /* .bottom-link > a:nth-child(1) {\r\n    display: inline-block;\r\n    width: 57%;\r\n} */\r\n    \r\n    .bottom-link > a > span {\r\n        color: #ccc;\r\n        padding: 2px;\r\n    }\r\n    \r\n    .dropdown-menu .divider {\r\n        height: 1px;\r\n        margin: 5px 0;\r\n        overflow: hidden;\r\n        background-color: #e5e5e5;\r\n    }\r\n    /* .bottom-link > a:nth-child(2) {\r\n    display: inline-block;\r\n    width: 40%;\r\n    padding: 3px 1px;\r\n} */\r\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDropdown/SoDropDown.vue?11cc5a46","<template>\r\n    <div>\r\n        <div class=\"media\" v-for=\"item in data\">\r\n            <div class=\"media-heading\">\r\n                <h1>\r\n                    <img v-bind:src=\"getIcon(item.format)\"/>\r\n                    <a href=\"#\" @click=\"titleClick(item)\" :title=\"item.title\">\r\n                        <span v-html=\"tempLated(item)\"></span>\r\n                    </a>\r\n                </h1>\r\n               <template v-if=\"item.collectImg!=''\">\r\n                <a href=\"#\" style=\"padding-left:5px\" title=\"收藏\" @click=\"CollectClick(item)\">\r\n                    <img v-bind:src=\"getIcon(item.collectImg)\" />\r\n                </a>\r\n               </template>\r\n            </div>\r\n            <div class=\"media-left\">\r\n                <img class=\"media-object\" :src=\"item.imgStr\" alt=\"...\" v-if=\"item.imgStr!=''\">\r\n            </div>\r\n\r\n            <div class=\"media-body\">\r\n                <h2 class=\"media-heading\" v-if=\"item.source!=''\">\r\n                    <span style=\"color: green\">来源:</span>\r\n                    <span v-html=\"getHighLight(item.source)\"></span>\r\n                </h2>\r\n                <h2 class=\"media-heading\" v-if=\"item.author!=''\">\r\n                    <span style=\"color: green\">作者:</span>\r\n                    <span v-html=\"getHighLight(item.author)\"></span>\r\n                </h2>\r\n                <h2 class=\"media-heading\" v-if=\"item.createDate!=''\">\r\n                    <span style=\"color: green\">创建日期:</span>\r\n                    <span v-html=\"getHighLight(item.createDate)\"></span>\r\n\r\n                </h2>\r\n                <h2 class=\"media-heading\" v-if=\"item.summary!=''\">\r\n                    <span style=\"color: green\">摘要:</span>\r\n                    <span v-html=\"getHighLight(item.summary )\"></span>\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import   GetIcon from  \"../../ComonJs/formatIcon\"\r\n    import   high from \"../../ComonJs/highLight\"\r\n    import   analysis from \"../../ComonJs/formatAnalysis\"\r\n    export default {\r\n        props: {\r\n            data: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            highlight: Array,\r\n            titletemplate: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            oncollect:Function,\r\n            onclick: Function\r\n        },\r\n        data: function () {\r\n            return {\r\n                parentdata: [\"title\"]\r\n            }\r\n        },\r\n        methods: {\r\n            titleClick: function (value) {\r\n                this.onclick && this.onclick(value);\r\n            },\r\n            getIcon: function (str) {\r\n                return GetIcon(str);\r\n            },\r\n\r\n            CollectClick:function(item){\r\n                 this.oncollect && this.oncollect(item);\r\n                 item.collectImg=\"collect\";\r\n                for(let i in this.data){\r\n                    if(this.data[i][\"id\"]==item.id){\r\n                        this.$set(this.data,i,item);\r\n                    }\r\n                }\r\n              \r\n            },\r\n\r\n            getHighLight: function (str) {\r\n                if (!this.highlight) return str;\r\n                if (this.highlight.length == 0) return str;\r\n                var ht = new high();\r\n                ht.KeyWords = this.highlight;\r\n                ht.Text = str;\r\n                return ht.refreshContent(\"\");\r\n            },\r\n\r\n            tempLated: function (item) {\r\n                var tempstr = item.title;\r\n                if (this.titletemplate && this.titletemplate != \"\")\r\n                    tempstr = analysis(this.parentdata, item, this.titletemplate);\r\n                if (!this.highlight) return tempstr;\r\n                if (this.highlight.length == 0) return tempstr;\r\n                var ht = new high();\r\n                ht.KeyWords = this.highlight;\r\n                ht.Text = tempstr;\r\n                return ht.refreshContent(\"\");\r\n            }\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .media h1 {\r\n        display: inline-block;\r\n        font-size: 16px;\r\n        margin: 0;\r\n    }\r\n\r\n    .media h1 a:link,\r\n    .media h1 a:visited,\r\n    .media h1 a:hover,\r\n    .panel-body h2 {\r\n        color: #1024ee;\r\n    }\r\n\r\n    .media h1 a,\r\n    span.search,\r\n    .media-body h2 a:hover {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .media-heading a {\r\n        font-family: '微软雅黑', arial, verdana, sans-serif;\r\n        font-size: 14px;\r\n    }\r\n\r\n    a {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .media-object {\r\n        width: 120px;\r\n        height: 120px;\r\n        margin-left: 18px;\r\n    }\r\n\r\n    .media-body h2,\r\n    .noimg h3 {\r\n        font-size: 14px;\r\n        line-height: 21px;\r\n    }\r\n\r\n    .media-body {\r\n        padding-left: 7px;\r\n        padding-bottom: 20px;\r\n    }\r\n\r\n    .media-left {\r\n        padding-left: 18px;\r\n        padding-right: 10px;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDataList/SoDataList.vue?21a09e22","<template>\n    <div>\n        <div class=\"media\" v-for=\"item in data\">\n            <div class=\"media-heading\">\n                <h1>\n                    <img v-bind:src=\"getIcon(item.format)\" />\n                    <a href=\"#\" @click=\"titleClick(item)\" :title=\"item.title\">\n                        <span v-html=\"tempLated(item)\"></span>\n                    </a>\n                </h1>\n                <template v-if=\"item.collectImg!=''\">\n                    <a style=\"padding-left:5px\" title=\"收藏\" @click=\"CollectClick(item)\">\n                        <img v-bind:src=\"getIcon(item.collectImg)\" />\n                    </a>\n                </template>\n            </div>\n            <div class=\"media-left\">\n                <img class=\"media-object\" :src=\"item.imgStr\" alt=\"...\" v-if=\"item.imgStr!=''\">\n            </div>\n            <div class=\"media-body\">\n                <table v-for=\"i in item.items\">\n                    <tr v-if=\"i.value!=''\">\n                        <th> <span style=\"color: green\">{{i.title}}:</span></th>\n                        <td> <span v-html=\"getHighLight(i.value)\"></span></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import GetIcon from \"../../ComonJs/formatIcon\"\n    import high from \"../../ComonJs/highLight\"\n    import analysis from \"../../ComonJs/formatAnalysis\"\n    export default {\n        props: {\n            data: {\n                type: Array,\n                default: []\n            },\n            highlight: Array,\n            titletemplate: {\n                type: String,\n                default: ''\n            },\n            oncollect: Function,\n            onclick: Function\n        },\n        data: function () {\n            return {\n                parentdata: [\"title\"]\n            }\n        },\n        methods: {\n            titleClick: function (value) {\n                this.onclick && this.onclick(value);\n            },\n\n            getIcon: function (str) {\n                return GetIcon(str);\n            },\n            //点击收藏\n            CollectClick: function (item) {\n                this.oncollect && this.oncollect(item);\n            },\n\n            getHighLight: function (str) {\n                if (!this.highlight) return str;\n                if (this.highlight.length == 0) return str;\n                var ht = new high();\n                ht.KeyWords = this.highlight;\n                ht.Text = str;\n                return ht.refreshContent(\"\");\n            },\n\n            tempLated: function (item) {\n                var tempstr = item.title;\n                if (this.titletemplate && this.titletemplate != \"\")\n                    tempstr = analysis(this.parentdata, item, this.titletemplate);\n                if (!this.highlight) return tempstr;\n                if (this.highlight.length == 0) return tempstr;\n                var ht = new high();\n                ht.KeyWords = this.highlight;\n                ht.Text = tempstr;\n                return ht.refreshContent(\"\");\n            }\n        },\n    };\n\n</script>\n\n<style scoped>\n    .media h1 {\n        display: inline-block;\n        font-size: 16px;\n        margin: 0;\n    }\n\n    .media h1 a:link,\n    .media h1 a:visited,\n    .media h1 a:hover,\n    .panel-body h2 {\n        color: #1024ee;\n    }\n\n    .media h1 a,\n    span.search,\n    .media-body h2 a:hover {\n        text-decoration: underline;\n    }\n\n    .media-heading a {\n        font-family: '微软雅黑', arial, verdana, sans-serif;\n        font-size: 14px;\n    }\n\n    a {\n        cursor: pointer;\n    }\n\n    .media-object {\n        width: 120px;\n        height: 120px;\n        margin-left: 18px;\n    }\n\n    .media-body h2,\n    .noimg h3 {\n        font-size: 14px;\n        line-height: 21px;\n    }\n\n    .media-body {\n        padding-left: 7px;\n        padding-bottom: 20px;\n    }\n\n    .media-left {\n        padding-left: 18px;\n        padding-right: 10px;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDataList/SoDataList2.0.vue?55dd11d2","<!-- 表格分页组件 -->\n<!--suppress ALL -->\n<template>\n    <div>\n    <nav class=\"boot-nav\">\n        <ul  v-bind:class=\"classObj\">\n            <li v-if=\"firstShow\">\n                <a href=\"javascript:void(0)\" aria-label=\"Previous\" @click=\"onFirstClick\">\n                    <span aria-hidden=\"true\">首页</span>\n                </a>\n            </li>\n            <li v-if=\"firstShow\">\n                <a href=\"javascript:void(0)\" aria-label=\"Next\" @click=\"onPrevClick\">\n                    <span aria-hidden=\"true\">上一页</span>\n                </a>\n            </li>\n            <li v-for=\"page in pages\" v-bind:class=\"activeNum === page ? 'active' : ''\">\n                <a href=\"javascript:void(0)\" v-text=\"page\" @click=\"onPageClick(page)\"></a>\n            </li>\n            <li v-if=\"lastShow\">\n                <a href=\"javascript:void(0)\" aria-label=\"Next\" @click=\"onNextClick\">\n                    <span aria-hidden=\"true\">下一页</span>\n                </a>\n            </li>\n            <li v-if=\"lastShow\">\n                <a href=\"javascript:void(0)\" aria-label=\"Next\" @click=\"onLastClick\">\n                    <span aria-hidden=\"true\">末页</span>\n                </a>\n            </li>\n        </ul>\n    </nav>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            // 每页显示数据个数\n            size: {\n                type: Number,\n                default: 10\n            },\n            // 数据总大小\n            count: {\n                type: Number,\n                default: 1\n            },\n            // 显示分页标签个数\n            pagenum: {\n                type: Number,\n                default: 10\n            },\n            //点击分页返回 当前页码\n            onclick: Function,\n\n            //分页组件大小    lg大尺寸，   sm小尺寸\n            pagersize: {\n                type: String,\n                default: \"\"\n            }\n        },\n        data: function() {\n            let islast = this.count > this.size;\n            var isLg = this.pagersize == \"lg\" ? true : false;\n            var isSm = this.pagersize == \"sm\" ? true : false;\n            return {\n                activeNum: 1,\n                pages: [],\n                firstShow: false,\n                lastShow: islast,\n                maxPage: Math.ceil(this.count / this.size),\n                classObj: {\n                    'pagination': true,\n                    'boot-page': true,\n                    'pagination-lg': isLg,\n                    'pagination-sm': isSm\n                }\n            }\n        },\n\n        methods: {\n            // 点击页码刷新数据\n            onPageClick: function(page) {\n                this.activeNum = page;\n            },\n\n            // 上一页\n            onPrevClick: function() {\n                // 当前页是否为当前最小页码\n                if (this.activeNum > 1) {\n                    //this.activeNum = this.activeNum - 1\n                    if (this.activeNum == this.pages[0]) {\n                        this.pages = [];\n                        for (var i = this.activeNum - this.pagenum; i < this.activeNum; i++) {\n                            this.pages.push(i);\n                        }\n                    }\n                    this.activeNum = this.activeNum - 1;\n                }\n            },\n\n            // 下一页\n            onNextClick: function() {\n                // 当前页是否为当前最大页码\n                if (this.activeNum < this.maxPage) {\n                    if (this.activeNum == this.pages[this.pages.length - 1]) {\n                        this.pages = [];\n                        for (var i = this.activeNum + 1; i < this.activeNum + 1 + this.pagenum; i++) {\n                            if (i <= this.maxPage)\n                                this.pages.push(i);\n                        }\n                    }\n                    this.activeNum = this.activeNum + 1;\n                }\n            },\n\n            // 第一页\n            onFirstClick: function() {\n                if (this.pages[0] === 1) {\n                    this.activeNum = 1;\n                } else {\n                    this.pages = [];\n\n                    for (var i = 1; i <= this.pagenum; i++) {\n                        this.pages.push(i);\n                    }\n                    this.activeNum = 1;\n                }\n            },\n\n            // 最后一页\n            onLastClick: function() {\n                if (this.pages[this.pages.length - 1] == this.maxPage) {\n                    this.activeNum = this.maxPage;\n                } else {\n                    var lastPage = [];\n                    var num = this.maxPage % this.pagenum;\n                    if (num == 0) num = this.pagenum;\n                    for (num; num > 0; num--) {\n                        lastPage.push(this.maxPage - num + 1);\n                    }\n                    this.pages = lastPage;\n                    this.activeNum = this.maxPage;\n                }\n            },\n\n            // 获取页码\n            getPages: function() {\n                this.maxPage = Math.ceil(this.count / this.size);\n                this.lastShow = this.count > this.size;\n                this.pages = [];\n                // 比较总页码和显示页数\n                if (this.maxPage <= this.pagenum) {\n                    for (var i = 1; i <= this.maxPage; i++) {\n                        this.pages.push(i);\n                    }\n                } else {\n                    for (var i = 1; i <= this.pagenum; i++) {\n                        this.pages.push(i);\n                    }\n                }\n            },\n\n            // 页码变化获取数据\n            getData: function() {\n                this.onclick && this.onclick(this.activeNum);\n            }\n        },\n        mounted: function() {\n            this.getPages();\n        },\n\n        watch: {\n            // 监听显示数量\n            'size': function() {\n                this.getPages();\n                if (this.activeNum + 1 > this.pages.length) {\n                    this.activeNum = this.pages.length - 1;\n                }\n                this.getData();\n            },\n\n            'count': function() {\n                this.getPages();\n            },\n\n            // 监测当前页变化\n            'activeNum': function() {\n                if (this.activeNum == 1)\n                    this.firstShow = false;\n                else\n                    this.firstShow = true;\n\n                if (this.activeNum == this.maxPage)\n                    this.lastShow = false;\n                else\n                    this.lastShow = true;\n                this.getData();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .boot-select {\n        float: right;\n        width: 80px;\n    }\n    \n    .boot-nav {\n        float: left;\n    }\n    \n    .boot-page {\n        display: inline-block;\n        vertical-align: middle;\n    }\n    \n    .page-total {\n        display: inline-block;\n        vertical-align: middle;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoPage/SoPage.vue?30008a39","<template>\r\n    <div v-if=\"!hidden\">\r\n        <div id=\"imgContainer\" v-bind:style=\"style\">\r\n            <img @click=\"imgClick\" id=\"imageFullScreen\" :src=\"url\"/>\r\n            <div id=\"positionButtonDiv\" v-if=\"showtool\">\r\n                <p><span> <img id=\"zoomInButton\" class=\"zoomButton\" src=\"../../../Img/ZoomImage/zoomIn.png\"\r\n                               title=\"zoom in\"\r\n                               alt=\"zoom in\"/>\r\n                <img id=\"zoomOutButton\" class=\"zoomButton\" src=\"../../../Img/ZoomImage/zoomOut.png\" title=\"zoom out\"\r\n                     alt=\"zoom out\"/>\r\n                </span></p>\r\n                <p>\r\n                <span class=\"positionButtonSpan\">\r\n                    <map name=\"positionMap\" class=\"positionMapClass\">\r\n                        <area id=\"topPositionMap\" shape=\"rect\" coords=\"20,0,40,20\" title=\"move up\" alt=\"move up\"/>\r\n                        <area id=\"leftPositionMap\" shape=\"rect\" coords=\"0,20,20,40\" title=\"move left\" alt=\"move left\"/>\r\n                        <area id=\"rightPositionMap\" shape=\"rect\" coords=\"40,20,60,40\" title=\"move right\"\r\n                              alt=\"move right\"/>\r\n                        <area id=\"bottomPositionMap\" shape=\"rect\" coords=\"20,40,40,60\" title=\"move bottom\"\r\n                              alt=\"move bottom\"/>\r\n                    </map>\r\n                    <img src=\"../../../Img/ZoomImage/position.png\" usemap=\"#positionMap\"/>\r\n                </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    require('./lib/jqzoom.js');\r\n   import {Dialog} from 'element-ui'\r\n    export default {\r\n        props: {\r\n            id:{\r\n                type: String,\r\n                default: null\r\n            },\r\n            url: String,\r\n            showtool: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            onclick: Function,\r\n            style: {\r\n               type:String,\r\n               default:\"width:900px;height:\"+ (window.screen.availHeight/1.54)+\"px;margin:0;\"\r\n            },\r\n\r\n            hidden: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n      \r\n        mounted:function(){\r\n            if(!document.getElementById(\"imageFullScreen\")) return;\r\n            // if(document.getElementById(\"positionButtonDiv\")){\r\n            //     var left=document.getElementById(\"imgContainer\").offsetWidth;\r\n            //     document.getElementById(\"positionButtonDiv\").style.left=(left-70)+'px';\r\n            // }\r\n            $('#imageFullScreen').smartZoom({'containerClass': 'zoomableContainer'});\r\n            $('#topPositionMap,#leftPositionMap,#rightPositionMap,#bottomPositionMap').bind(\"click\", moveButtonClickHandler);\r\n            $('#zoomInButton,#zoomOutButton').bind(\"click\", zoomButtonClickHandler);\r\n            function zoomButtonClickHandler(e) {\r\n                var scaleToAdd = 0.8;\r\n                if (e.target.id == 'zoomOutButton')\r\n                    scaleToAdd = -scaleToAdd;\r\n                $('#imageFullScreen').smartZoom('zoom', scaleToAdd);\r\n            }\r\n\r\n            function moveButtonClickHandler(e) {\r\n                var pixelsToMoveOnX = 0;\r\n                var pixelsToMoveOnY = 0;\r\n                switch (e.target.id) {\r\n                    case \"leftPositionMap\":\r\n                        pixelsToMoveOnX = 50;\r\n                        break;\r\n                    case \"rightPositionMap\":\r\n                        pixelsToMoveOnX = -50;\r\n                        break;\r\n                    case \"topPositionMap\":\r\n                        pixelsToMoveOnY = 50;\r\n                        break;\r\n                    case \"bottomPositionMap\":\r\n                        pixelsToMoveOnY = -50;\r\n                        break;\r\n                }\r\n                $('#imageFullScreen').smartZoom('pan', pixelsToMoveOnX, pixelsToMoveOnY);\r\n            }\r\n        },\r\n        methods: {\r\n            imgClick: function () {\r\n            \r\n                if(this.id)\r\n                    this.onclick && this.onclick(soModels.getReturnModel(this.id,\"\"));\r\n                else\r\n                    this.onclick && this.onclick();\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    /*#pageContent {*/\r\n    /*width: 980px;*/\r\n    /*height: 500px;*/\r\n    /*overflow: hidden;*/\r\n    /*position: relative;*/\r\n    /*margin: 50px auto;*/\r\n    /*}*/\r\n\r\n  /*  #imgContainer {\r\n        width: 900px;\r\n        height: 500px;\r\n        margin:0;\r\n    }*/\r\n\r\n    #positionButtonDiv {\r\n        background: rgb(58, 56, 63);\r\n        background: rgba(58, 56, 63, 0.8);\r\n        border: solid 1px #100000;\r\n        color: #FFFFFF;\r\n        padding: 8px;\r\n        text-align: left;\r\n        position: absolute;\r\n        right: 60px;\r\n        top: 60px;\r\n    }\r\n\r\n    #positionButtonDiv .positionButtonSpan img {\r\n        float: right;\r\n        border: 0;\r\n    }\r\n\r\n    .positionMapClass area {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .zoomButton {\r\n        border: 0;\r\n        cursor: pointer;\r\n    }\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoImage/SoImage.vue?3c90cdf6","<template>\n    <div :id=\"defaultId\"   :style=\"style\" v-show=\"!hidden && data != null && data.length\" class=\"tree-default-style\"  ></div>\n    <!--<div id=\"{{defaultId}}\" :class=\"class\" :style=\"style\" v-show=\"!hidden && data != null && data.length\" class=\"tree-default-style\" selection=\"{{selection}}\"></div> -->\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            class: String,\n            style: String,\n            hidden: {\n                type: Boolean,\n                default: false\n            },\n            data: Array,\n            showcheckbox: {\n                type: Boolean,\n                default: false\n            },\n            enableedit: {\n                type: Boolean,\n                default: false\n            },\n            onloaded: Function,\n            onnodeselected: Function,\n            onadd: Function,\n            onupdate: Function,\n            ondelete: Function\n        },\n        data() {\n            return {\n                defaultId: \"tree-\" + Date.now(),\n                selection: \"\"\n            }\n        },\n        watch: {\n            data: function() {\n                this.loadData()\n            }\n        },\n        methods: {\n            loadData: function() {\n                if (this.data && this.data.length > 0) {\n                    try {\n                        this.fixTreeData() //fix jstree data setting bug\n                    } catch (e) {}\n                    this.treeInit()\n                }\n            },\n            fixTreeData: function() {\n                for (var i = 0; i < this.data.length; i++) {\n                    if (!((\"id\" in this.data[i]) && (\"parentId\" in this.data[i]))) { //rarely case but prevent error result, source data not include id, parentId then delete this\n                        this.data.splice(i, 1)\n                        i--\n                    }\n                }\n                for (var i = 0; i < this.data.length; i++) {\n                    var parentId = this.data[i].parentId\n                    if (isNaN(parentId)) {\n                        parentId = parentId.replace(/ /g, \"\")\n                    }\n                    var id = parentId == \"\" || parentId == null || parentId == \"#\" ? \"#\" : this.checkParentId(parentId) //set root node \"#\"\n                    delete this.data[i].parentId;\n                    this.data[i].parent = id //parentId->parent\n                }\n            },\n            checkParentId: function(pId) {\n                for (var j = 0; j < this.data.length; j++) {\n                    var id = this.data[j].id\n                    if (isNaN(id)) {\n                        id = id.replace(/ /g, \"\")\n                    }\n                    if (pId == id) {\n                        return pId\n                    }\n                }\n                return \"#\"\n            },\n            treeInit: function() {\n                var plugins = ['types', 'dnd']\n                if (this.showcheckbox) plugins.push(\"checkbox\")\n                $('#' + this.defaultId).jstree({\n                    'plugins': plugins,\n                    'types': {\n                        'default': {\n                            'icon': 'fa fa-folder'\n                        },\n                        'html': {\n                            'icon': 'fa fa-file-code-o'\n                        },\n                        'svg': {\n                            'icon': 'fa fa-file-picture-o'\n                        },\n                        'css': {\n                            'icon': 'fa fa-file-code-o'\n                        },\n                        'img': {\n                            'icon': 'fa fa-file-image-o'\n                        },\n                        'js': {\n                            'icon': 'fa fa-file-text-o'\n                        }\n                    },\n                    'core': {\n                        \"multiple\": this.showcheckbox ? true : false, // multiple select\n                        \"animation\": true,\n                        'data': this.data\n                    }\n                });\n            },\n            loadedEvent: function() {\n                if (this.data) {\n                    var selectedNodes = []\n                    for (var i in this.data) {\n                        var d = this.data[i]\n                        if (d && d.state) {\n                            var isSelected = d.state.selected ? d.state.selected : false\n                            if (isSelected) {\n                                var selectedNode = {\n                                    \"id\": d.id,\n                                    \"parentId\": d.parentId,\n                                    \"text\": d.text,\n                                    \"value\": d.value\n                                }\n                                selectedNodes.push(selectedNode)\n                            }\n                        }\n                    }\n                    var $detail = {\n                        \"selectedNodes\": selectedNodes\n                    }\n                    if (this.onloaded) {\n                        if (this.id) {\n                            this.onloaded(soModels.getReturnModel(this.defaultId, $detail))\n                        } else {\n                            this.onloaded($detail)\n                        }\n                    }\n                }\n            },\n            nodeSelectedEvent: function(obj) {\n                if (obj.selected) {\n                    this.selection = obj.selected // get selected node\n                }\n                if (obj.action == \"select_node\" || obj.action == \"deselect_node\") {\n                    var $detail = {}\n                    if (!!obj.node) {\n                        var $activeNode = obj.node\n                        $detail.activeNode = {\n                            \"id\": $activeNode.id,\n                            \"parentId\": $activeNode.parent == \"#\" ? null : $activeNode.parent,\n                            \"text\": $activeNode.text,\n                            \"value\": $activeNode.original.value,\n                            \"state\": {\n                                \"opened\": $activeNode.state.opened,\n                                \"selected\": $activeNode.state.selected\n                            }\n                        }\n                    }\n                    if (obj.selected) {\n                        var selectedID = obj.selected,\n                            selectedNodes = []\n                        for (var i in selectedID) {\n                            var id = selectedID[i]\n                            for (var j in this.data) {\n                                if (id.toString() == this.data[j].id.toString()) {\n                                    selectedNodes.push({\n                                        \"id\": this.data[j].id.toString(),\n                                        \"parentId\": this.data[j].parent.toString() == \"#\" ? null : this.data[j].parent.toString(),\n                                        \"text\": this.data[j].text,\n                                        \"value\": this.data[j].value,\n                                        \"state\": this.data[j].state ? {\n                                            \"opened\": this.data[j].state.opened,\n                                            \"selected\": true\n                                        } : null\n                                    })\n                                }\n                            }\n                        }\n                        $detail.selectedNodes = selectedNodes\n                    }\n                    if (this.onnodeselected) {\n                        if (this.id) {\n                            this.onnodeselected(soModels.getReturnModel(this.defaultId, $detail))\n                        } else {\n                            this.onnodeselected($detail)\n                        }\n                    }\n                }\n            }\n        },\n        created() {\n            if (this.id) {\n                this.defaultId = this.id\n            }\n        },\n        mounted: function() {\n            this.loadData()\n            this.$nextTick(function() { //tree dom load complete\n                var self = this\n                $('#' + this.defaultId).on('loaded.jstree', function(e, data) {\n                    self.loadedEvent()\n                })\n                $('#' + this.defaultId).on('changed.jstree', function(e, data) {\n                    self.nodeSelectedEvent(data)\n                })\n            })\n        }\n    }\n</script>\n\n<style scoped>\n    .tree-default-style {\n        font-size: 13px;\n        color: #676a6c;\n    }\n\n    .jstree-open>.jstree-anchor>.fa-folder:before {\n        content: \"\\f07c\";\n    }\n\n    .jstree-default .jstree-icon.none {\n        width: 0;\n    }\n\n    .fa {\n        display: inline-block;\n        font: normal normal normal 14px/1 FontAwesome;\n        font-size: inherit;\n        text-rendering: auto;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    .fa-folder:before {\n        content: \"\\f07b\";\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoTree/SoTree.vue?5df6da7d","<template>\r\n    <div v-bind:style=\"style\" v-if=\"!hidden\">\r\n        <!--         <form v-if=\"list.length>0\" class=\"form-horizontal\" role=\"form\">\r\n                    <span style=\"font-size:15px\">{{data.groupname}}</span>\r\n                    <form_row v-for=\"item in list\" :data=\"item\"  ref=\"form_row\"></form_row>\r\n                </form>\r\n                   <div class=\"form-group\"> \r\n                   <hr style=\"height:2px;border-color:rgb(102, 102, 102);\" />\r\n                 </div> -->\r\n\r\n                 <form v-if=\"list.length>0\" class=\"form-horizontal\" role=\"form\">\r\n                   <fieldset>\r\n                <legend>{{data.groupname}}</legend>\r\n                <div class=\"form-group\" style=\"margin:5px 0 5px 0\">\r\n                 <form_input v-for=\"item in list\" :data=\"item\"  ref=\"form_input\"></form_input>\r\n                 </div>\r\n                </fieldset>\r\n             </form>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import form_input from './FormInput.vue'\r\n    export default{\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            class: String,\r\n            style: String,\r\n            hidden: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            data: Object,\r\n            onFormData: Function\r\n        },\r\n        data: function () {\r\n            return {\r\n               // list: this.GetRow()\r\n               list:this.data.fields\r\n            }\r\n        },\r\n        methods: {\r\n            GetRow: function () {\r\n                let list = this.data.fields;\r\n                let rowlist = [];\r\n                let rowArray = [];\r\n                for (let i = 0; i < list.length; i++) {\r\n                    rowArray.push(list[i]);\r\n                    if (rowArray.length == 2 || i == list.length - 1) {\r\n                        rowlist.push(rowArray);\r\n                        rowArray = [];\r\n                    }\r\n                }\r\n                return rowlist;\r\n            },\r\n\r\n            getFormData: function () {\r\n                var _this = this;\r\n                var texts = [];\r\n                var rowtexts = [];\r\n                 for (let i = 0; i < this.$refs.form_input.length; i++) {\r\n                    texts.push( {text:this.$refs.form_input[i].inputText , name:this.$refs.form_input[i].name,\r\n                        isok:this.$refs.form_input[i].isok,title:this.$refs.form_input[i].title, uitype:this.$refs.form_input[i].uitype});\r\n                 }\r\n                return texts;\r\n            }\r\n\r\n            \r\n        },\r\n        components: {\r\n            form_input: form_input\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\nfieldset{\r\n    padding:.35em .62em 0em;margin:0 2px;border:1px solid silver\r\n}\r\n\r\nlegend{\r\n    padding:0.2em;\r\n    border:0;\r\n    width:auto;\r\n    margin-bottom: 0px;\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoForm/SoForm.vue?96ba6dcc","<template>\r\n    <div>\r\n        <!--日期-->\r\n        <template v-if=\"data.uitype.toLowerCase()==type_menu.date\">\r\n            <div class=\"col-xs-2\">\r\n                <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n              </label></div>\r\n            <div class=\"col-xs-4\" style=\"margin-bottom:5px\">\r\n<datepic v-model=\"inputText\" size=\"small\" type=\"date\" placeholder=\"选择日期\">\r\n</datepic>\r\n<!--<input type=\"date\" class=\"form-control\" v-bind:id=\"inputid\" v-model=\"inputText\">-->\r\n</div>\r\n</template>\r\n\r\n<!--日期时间-->\r\n<template v-if=\"data.uitype.toLowerCase()==type_menu.datetime\">\r\n    <div class=\"col-xs-2\">\r\n        <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n              </label></div>\r\n    <div class=\"col-xs-4\" style=\"margin-bottom:5px\">\r\n<datepic v-model=\"inputText\" type=\"datetime\" size=\"small\" placeholder=\"选择日期时间\">\r\n</datepic>\r\n<!--<input type=\"datetime-local\" class=\"form-control\" v-bind:id=\"inputid\" v-model=\"inputText\">-->\r\n</div>\r\n</template>\r\n\r\n<!--固定值 lable类型，实际上是 readonly的text-->\r\n<template v-if=\"data.uitype.toLowerCase()==type_menu.lable\">\r\n    <div class=\"col-xs-2\">\r\n        <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n        </label>\r\n    </div>\r\n    <div class=\"col-xs-4\">\r\n        <input type=\"text\" readonly=\"readonly\" class=\"form-control\" v-bind:id=\"inputid\" v-model=\"inputText\" @blur=\"InputBlur\">\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<!--下拉框-->\r\n<template v-if=\"data.uitype.toLowerCase()==type_menu.dropdownlist\">\r\n    <div class=\"col-xs-2\">\r\n        <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n              </label></div>\r\n    <div class=\"col-xs-4\" style=\"margin-bottom:5px\">\r\n<el-select v-model=\"inputText\" filterable clearable placeholder=\"请选择\" size=\"small\">\r\n    <el-option v-for=\"item in data.items\" :label=\"item.text\" :value=\"item.value\">\r\n    </el-option>\r\n</el-select>\r\n<!--<select class=\"form-control\" v-model=\"inputText\">-->\r\n<!--<template v-for=\"item in data.options\">-->\r\n<!--<option v-html=\"item.text\"></option>-->\r\n<!--</template>-->\r\n<!--</select>-->\r\n</div>\r\n</template>\r\n\r\n<!--文本框-->\r\n<template v-if=\"data.uitype.toLowerCase()==type_menu.text\">\r\n    <div v-bind:class=\"inputClass\">\r\n        <div class=\"col-xs-2\">\r\n            <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n              </label></div>\r\n        <div class=\"col-xs-4\">\r\n            <input type=\"text\" class=\"form-control\" v-bind:id=\"inputid\" v-model=\"inputText\" @blur=\"InputBlur\">\r\n            <template v-if=\"showOk\">\r\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\"></span>\r\n            </template>\r\n            <template v-if=\"showError\">\r\n                <span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>\r\n                <span style=\"color:#a94442\" v-html=\"errorStr\"></span>\r\n</template>\r\n</div>\r\n</div>\r\n</template>\r\n\r\n<!--文本域-->\r\n<template v-if=\"data.uitype.toLowerCase()==type_menu.textarea\">\r\n    <div v-bind:class=\"inputClass\">\r\n        <div class=\"col-xs-2\">\r\n            <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n              </label></div>\r\n        <div class=\"col-xs-4\">\r\n            <textarea class=\"form-control\" v-bind:id=\"inputid\" rows=\"2\" v-model=\"inputText\" @blur=\"InputBlur\">\r\n                </textarea>\r\n            <template v-if=\"showOk\">\r\n                <span class=\"glyphicon glyphicon-ok form-control-feedback\"></span>\r\n            </template>\r\n            <template v-if=\"showError\">\r\n                <span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>\r\n                <span style=\"color:#a94442\" v-html=\"errorStr\"></span>\r\n</template>\r\n\r\n</div>\r\n</div>\r\n</template>\r\n<!--数组编辑框-->\r\n<template v-if=\"data.uitype.toLowerCase()==type_menu.tageditor\">\r\n    <div class=\"col-xs-2\">\r\n        <label v-bind:for=\"inputid\" class=\"control-label\" v-html=\"GetTitle()\">\r\n              </label></div>\r\n    <div class=\"col-xs-4\">\r\n        <tag-editor :ongetvalue=\"GetTagValue\"></tag-editor>\r\n    </div>\r\n</template>\r\n</div>\r\n</template>\r\n<script>\r\n    import { DatePicker, Select, Option } from 'element-ui'\r\n    import tagEditor from '../SoTagEditor/SoTagEditor.vue'\r\n    export default {\r\n        props: {\r\n            data: Object\r\n        },\r\n        mounted: function () {\r\n            if (this.data.uitype.toLowerCase() == this.type_menu.lable) {\r\n                this.inputText = this.data.value;\r\n                this.isok = true;\r\n            }\r\n        },\r\n        data: function () {\r\n            return {\r\n                pickerOptions0: {\r\n                    disabledDate(time) {\r\n                        return time.getTime() < Date.now() - 8.64e7;\r\n                    }\r\n                },\r\n                title: this.data.title,\r\n                uitype: this.data.uitype,\r\n                isok: !(this.data.required),//判断组件是否通过验证，required为false,isok为true\r\n                showOk: false,\r\n                showError: false,\r\n                inputClass: {\r\n                    'has-feedback': true,\r\n                    'has-error': false,\r\n                    'has-success': false\r\n                },\r\n                name: this.data.name,\r\n                inputText: \"\",\r\n                errorStr: \"\",\r\n                inputid: this.data.uitype + '-' + this.GetId(),\r\n                type_menu: {\r\n                    lable: \"label\",\r\n                    text: \"text\",\r\n                    textarea: \"textarea\",\r\n                    date: \"date\",\r\n                    datetime: \"datetime\",\r\n                    dropdownlist: \"dropdownlist\",\r\n                    tageditor: \"tageditor\"\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            InputBlur: function () {\r\n                // 非空判断——>正则判断——>长度判断\r\n                var nullTest = true;\r\n                var lenthTest = true;\r\n                var regTest = true;\r\n                if (this.data.required == true && !this.inputText.trim())\r\n                    nullTest = false;\r\n\r\n                if (this.data.maxLength) {\r\n                    lenthTest = this.TestLenth();\r\n                }\r\n\r\n                if (this.data.regexp) {\r\n                    regTest = this.TestReg();\r\n                }\r\n                if (nullTest == false) {\r\n                    this.ShowError('此项不能为空！')\r\n                    return;\r\n                }\r\n                if (regTest == false) {\r\n                    this.ShowError('不符合验证要求！')\r\n                    return;\r\n                }\r\n\r\n                if (lenthTest == false) {\r\n                    this.ShowError('字数超过要求！')\r\n                    return;\r\n                }\r\n                this.ShowOk();\r\n            },\r\n            ShowError: function (str) {\r\n                this.inputClass['has-error'] = true;\r\n                this.inputClass['has-success'] = false;\r\n                this.showError = true;\r\n                this.showOk = false;\r\n                this.isok = false;\r\n                this.errorStr = '*  ' + str + '*';\r\n            },\r\n            ShowOk: function () {\r\n                this.inputClass['has-error'] = false;\r\n                this.inputClass['has-success'] = true;\r\n                this.showError = false;\r\n                this.errorStr = \"\";\r\n                this.showOk = true;\r\n                this.isok = true;\r\n            },\r\n            GetId: function () {\r\n                var guid = \"\";\r\n                for (var i = 1; i <= 32; i++) {\r\n                    var n = Math.floor(Math.random() * 16.0).toString(16);\r\n                    guid += n;\r\n                    if ((i == 8) || (i == 12) || (i == 16) || (i == 20))\r\n                        guid += \"-\";\r\n                }\r\n                return guid;\r\n            },\r\n\r\n            TestLenth: function () {\r\n                if (this.inputText.trim().length > this.data.maxLength)\r\n                    return false;\r\n                else\r\n                    return true;\r\n            },\r\n\r\n            GetTagValue: function (value) {\r\n                this.inputText = value;\r\n            },\r\n\r\n            TestReg: function () {\r\n                var reg = eval(this.data.regexp);\r\n                return reg.test(this.inputText.trim());\r\n            },\r\n\r\n            GetTitle: function () {\r\n                if (this.data.required == true) {\r\n                    return this.data.title + \"  \"+\"<span style=' color: rgb(187, 0, 0); font-size: 12px;font-family: \\\"Lucida Grande\\\", verdana, arial, helvetica, sans-serif;'>*</span> :\";\r\n                }\r\n                else {\r\n                    return this.data.title + ':';\r\n                }\r\n            }\r\n        },\r\n        components: {\r\n            \"datepic\": DatePicker,\r\n            \"el-select\": Select,\r\n            \"el-option\": Option,\r\n            \"tag-editor\": tagEditor\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/*    .control-label {\r\n        padding-right: 0;\r\n        margin-left: 0px;\r\n    }\r\n\r\n    .control-label {\r\n        padding-left: 0;\r\n        font-size: 14px;\r\n        line-height: 1.75;\r\n        margin-bottom: 1em;\r\n    }*/\r\n  .control-label{\r\n       padding-top: 5px;\r\n       float: right;\r\n  }\r\n    textarea {\r\n        resize:none;\r\n    }\r\n\r\n    input{\r\n        height: 27px;\r\n        margin-bottom: 10px;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoForm/FormInput.vue?35ac3e50","<template>\r\n    <div v-if=\"data &&data!=[]\">\r\n        <div class=\"detail\" v-bind:style=\"style\">\r\n            <div class=\"basicInfo\" style=\"clear: both;\">\r\n                <div  class=\"basicInfo_Pic\" style=\"float: left; width: 50%;height: 100%;\">\r\n                    <!--<img v-if=\"data.thumbnailUrl&&data.thumbnailUrl!=''\"-->\r\n                         <!--:src=\"data.thumbnailUrl\" alt=\"\" style=\"border: solid 1px #DDDDDD;\" v-on:click=\"showPic(data.id)\">-->\r\n                    <!--<img v-else :src=\"getIcon('thumbnail')\" alt=\"#\">-->\r\n                    <slot name=\"mySlot\"></slot>\r\n                </div>\r\n\r\n                <div class=\"basicInfo_data\" style=\"float: right; width: 45%;height: 100%;\">\r\n                    <table class=\"table table-bordered\" style=\"border-radius: 5px;\">\r\n                        <thead></thead>\r\n                        <tbody>\r\n                            <tr v-for=\"basicInfo in data.basicInfo\">\r\n                                <th style=\"width: 35%;\">{{basicInfo.key}}</th>\r\n                                <td style=\"width: 65%;\">{{basicInfo.value}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class=\"groups\" v-for=\"group in data.groups\" style=\"clear: both\" >\r\n                <h4 style=\"margin-bottom: 10px;\">{{group.name}}</h4>\r\n                <table class=\"table table-bordered\" v-if=\"group.items.length%2 == 0\" style=\"width: 100%;\">\r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr  v-for=\"n in Math.floor(group.items.length/2)\">\r\n                            <th style=\"width: 15%;\">{{group.items[2*n-2].key}}</th>\r\n                            <td style=\"width: 35%;\">{{group.items[2*n-2].value}}</td>\r\n                            <th style=\"width: 15%;\">{{group.items[2*n-1].key}}</th>\r\n                            <td style=\"width: 35%;\">{{group.items[2*n-1].value}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table class=\"table table-bordered\" v-if=\"group.items.length%2 != 0\">\r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr v-for=\"n in Math.floor(group.items.length/2)\" style=\"width: 100%;\">\r\n                            <th style=\"width: 15%;\">{{group.items[2*n-2].key}}</th>\r\n                            <td style=\"width: 35%;\">{{group.items[2*n-2].value}}</td>\r\n                            <th style=\"width: 15%;\">{{group.items[2*n-1].key}}</th>\r\n                            <td style=\"width: 35%;\">{{group.items[2*n-1].value}}</td>\r\n                        </tr>\r\n                        <tr style=\"width: 100%;\">\r\n                            <th style=\"width: 15%;\">{{group.items[group.items.length-1].key}}</th>\r\n                            <td style=\"width: 35%;\">{{group.items[group.items.length-1].value}}</td>\r\n                            <th style=\"width: 15%;\"></th>\r\n                            <td style=\"width: 35%;\"></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n    th{\r\n        background-color: #f5f5f5;\r\n    }\r\n    .groups th{width: 10%;}\r\n    .groups td{width:40%;}\r\n</style>\r\n<script>\r\n    import GetIcon from  \"../../ComonJs/formatIcon\"\r\n    export default {\r\n        props: {\r\n            id:String,\r\n            data: Object,\r\n            style:{\r\n                type:String,\r\n                default:\"\"\r\n            },\r\n            ischange:Number,\r\n            showpreview: {\r\n                type:Boolean,\r\n                default:true\r\n            },\r\n            showdownload:{\r\n                type:Boolean,\r\n                default:true\r\n            },\r\n            onshowtopic:Function\r\n        },\r\n        data:function () {\r\n          return{\r\n              defaultPhoto:\"\",\r\n              topdata:null\r\n          }\r\n        },\r\n        methods: {\r\n            getIcon: function (str) {\r\n                return GetIcon(str);\r\n            }\r\n//            showTopic:function () {\r\n//                alert('点击事件')\r\n//                var iiid=this.data.id;\r\n//                console.log(this.data);\r\n//                alert(iiid);\r\n//                if(this.id){\r\n//                    this.onshowtopic && this.onshowtopic(gtModels.getReturnModel(this.id, iiid));\r\n//                }\r\n//                else\r\n//                    this.onshowtopic && this.onshowtopic(iiid);\r\n//            },\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDetail/SoDetail.vue?4d794af4","<template>\r\n    <div v-if=\"data &&data!=[]\">\r\n        <div class=\"detail\" v-bind:style=\"style\">\r\n            <div class=\"basicInfo\" style=\"clear: both;\">\r\n                <div  class=\"basicInfo_Pic\" style=\"float: left; width: 75%;height: 100%;\"> \r\n                    <slot name=\"mySlot\"></slot>\r\n                </div> \r\n                <div style=\"float: right; width: 24%;height: 100%; margin-left:1%; margin-top: 2px;\">\r\n                    <div class=\"basicInfo_data\">\r\n                        <table class=\"table table-bordered\" style=\"border-radius: 5px;\">\r\n                            <thead></thead>\r\n                            <tbody>\r\n                                <tr v-for=\"basicInfo in data.basicInfo\" v-if=\"basicInfo.value&&basicInfo.key!='标题'&&basicInfo.key!='数据源名称'&&basicInfo.key!='摘要'\">\r\n                                    <th style=\"width: 35%;\">{{basicInfo.key}}</th>\r\n                                    <td style=\"width: 65%;\">{{basicInfo.value}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <div class=\"groups\" v-for=\"group in data.groups\">\r\n                            <table class=\"table table-bordered\" style=\"width: 100%;\">\r\n                                <thead></thead>\r\n                                <tbody>\r\n                                    <tr  v-for=\"n in group.items.length\" v-if=\"group.items[n-1].value&&group.items[n-1].key!='标题'&&group.items[n-1].key!='类型'&&group.items[n-1].key!='作者'&&group.items[n-1].key!='摘要'\">\r\n                                        <th style=\"width: 35%;\">{{group.items[n-1].key}}</th>\r\n                                        <td style=\"width: 65%;\">{{group.items[n-1].value}}</td> \r\n                                    </tr>\r\n                                </tbody>\r\n                            </table> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n    th{\r\n        background-color: #f5f5f5;\r\n    }\r\n    .groups th{width: 10%;}\r\n    .groups td{width:40%;}\r\n    .table { \r\n        margin-bottom: 0;\r\n    }\r\n</style>\r\n<script>\r\n    import GetIcon from  \"../../ComonJs/formatIcon\"\r\n    export default {\r\n        props: {\r\n            id:String,\r\n            data: Object,\r\n            style:{\r\n                type:String,\r\n                default:\"\"\r\n            },\r\n            ischange:Number,\r\n            showpreview: {\r\n                type:Boolean,\r\n                default:true\r\n            },\r\n            showdownload:{\r\n                type:Boolean,\r\n                default:true\r\n            },\r\n            onshowtopic:Function\r\n        },\r\n        data:function () {\r\n          return{\r\n              defaultPhoto:\"\",\r\n              topdata:null\r\n          }\r\n        },\r\n        methods: {\r\n            getIcon: function (str) {\r\n                return GetIcon(str);\r\n            }\r\n        },\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDetail/SoDetail2.vue?09c366f8","<template>\n    <div class=\"top\" v-bind:style=\"style\">\n        <div class=\"top_title\">\n            <h5 style=\"font-size: 16px;\">{{title}}</h5>\n            <!-- 刷新按钮 -->\n            <!-- <span ><img @click=\"imgClick\" :src=\"refresh | getIcon\" alt=\"#\"/></span> -->\n        </div>\n        <div class=\"top_content\" v-if=\"!hidden\" >\n            <table class=\"table table-hover\">\n                <thead>\n                <tr>\n                    <th style=\"width: 13%;\">排名</th>\n                    <th v-for=\"f in topdata.fields\" v-if=\"f.title=='名称'\" style=\"width:45%\">{{f.title}}</th>\n                    <th v-for=\"f in topdata.fields\" v-if=\"f.title!='名称'\">{{f.title}}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-if=\"data==null\">\n                    <td>没有任何数据</td>\n                </tr>\n                <tr v-for=\"(r,rindex) in topdata.records\">\n                    <td>\n                        <span v-if=\"rindex<=2\" class=\"ibx-hotTop-rank first\">{{rindex+1}}</span>\n                        <span v-else class=\"ibx-hotTop-rank bottom\">{{rindex+1}}</span>\n                    </td>\n                    <td v-for=\"(f,findex) in topdata.fields\">\n                        <a @click=\"tdClick(urlContainer[findex][rindex])\" v-if=\"f.url&&f.url!=''\">{{r[f[\"name\"]]}}</a>\n                        <span v-else>{{r[f[\"name\"]]}}</span>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<style scoped>\n    body{\n        font-family:\"Microsoft YaHei\";\n        font-weight: normal;\n        font-size: 10px;\n    }\n    .top .top_title{\n        background-color: white;\n        border-color: #e7eaec;\n        border-image: none;\n        border-style: solid solid none;\n        border-width: 4px 0px 0;\n        color: inherit;\n        margin-bottom: 0;\n        padding: 14px 15px 7px;\n        min-height: 52px;\n        border-bottom: solid 1px #E7EAEC;\n    }\n    .top .top_title h5{\n        font-weight: 600;\n        display: inline-block;\n        font-size: 16px;\n        margin: 0 0 11px;\n        padding: 0;\n        text-overflow: ellipsis;\n        float: left;\n    }\n    .top .top_title a{\n        display: block;\n        margin-bottom: 5px;\n    }\n    .top .top_title img{\n        display: block;\n        float: right;\n        text-align: center;\n        margin: 0 auto;\n        margin-right: 50px;\n        margin-top:-10px;\n    }\n    .top .top_content{\n        padding: 10px;\n        clear: both;\n        background-color: white;\n    }\n    thead{\n        vertical-align: middle;\n    }\n    table thead tr th{\n        line-height: 1.42857;\n        padding: 10px;\n        vertical-align: middle;\n        border-bottom: 2px solid #ddd;\n        font-weight: bold;\n    }\n    table tbody{\n        vertical-align: middle;\n    }\n    table tbody tr td{\n        border-top: 1px solid #e7eaec;\n        line-height: 1.42857;\n        padding: 10px;\n        vertical-align: middle;\n    }\n    .ibx-hotTop-rank {\n        float: left;\n        width: 16px;\n        height: 16px;\n        line-height: 16px;\n        color: #fff;\n        text-align: center;\n        margin: 10px 10px;\n        margin-left: 0;\n    }\n    tbody td .first {\n        background-color: #f44528;\n    }\n    tbody td .bottom{\n        background-color: #ff943e;\n    }\n    a :hover{\n        cursor: pointer;\n    }\n</style>\n<script>\n    import   analysis from \"../../ComonJs/formatAnalysis\"\n    import   getIcon from  \"../../ComonJs/formatIcon\"\n    export default {\n        props: {\n            id:{\n                type:String,\n                default:\"\"\n            },\n            data: Object,\n            title: String,\n            class:{\n                type:String,\n                default:\"\"\n            },\n            style:{\n                type:String,\n                default:\"\"\n            },\n            hidden:{\n                type:Boolean,\n                default:false\n            },\n            ischange:Number,\n            ontdclick:Function,\n            onrefresh:Function\n        },\n        data:function () {\n            return{\n                urlContainer:[],    //放置所有格式化之后的url\n                refresh:\"refresh\",\n                topdata:''\n            }\n        },\n//        mounted:function () {\n//            //如何只有一行数据可以跳转的时候\n//            //this.setData();\n//        },\n        methods: {\n            setData:function () {\n                this.topdata=this.data;\n                if(this.data&&this.data!=null) {\n                    if(this.data.fields&&this.data.fields!=[]){\n                        var field=this.data.fields;\n                        for(var i=0;i<field.length;i++){\n                            if(field[i].url&&field[i].url!=\"\") {\n                                var record = [];\n                                for (var j = 0; j < this.data.records.length; j++) {\n                                    var key = [{\"field\": \"id\"}]\n                                    var value = this.data.records[j]\n                                    var test = analysis(key, value, field[i].url);\n                                    record[j] = test;\n                                    this.urlContainer.push(record);\n                                }\n                                record = [];\n                            }\n                        }\n                    }\n                }\n            },\n            tdClick:function (url) {\n                this.ontdclick&&this.ontdclick(url);\n            },\n            imgClick: function () {\n                this.onrefresh&&this.onrefresh();\n            }\n        },\n        filters:{\n            getIcon: function (str) {\n                return getIcon(str);\n            }\n        },\n        watch:{\n            ischange:function () {\n                this.setData();\n                this.ischange=0;\n            }\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoTop/SoTop.vue?bcb58a3c","<template>\n    <div :id=\"id\" :className=\"classname\" :style=\"style\" v-show=\"!hidden\">\n        <replybox :onreply=\"onreplys\"></replybox>\n        <ul class=\"list-inline\">\n            <li>\n                <ul class=\"list-inline\">\n                    <li class=\"filter\" v-if=\"filters\" v-for='(filter,index) in filters' @click=\"onfilters(index)\">\n                        <span v-if=\"index!=0\">|</span>\n                        <a :class=\"{ 'btn btn-primary': filter.active }\">{{filter.name}}</a>\n                    </li>\n                </ul>\n            </li>\n            <li class=\"com-total-num pull-right\">总共<span class=\"com-num\">{{count}}</span>条评论</li>\n        </ul>\n        <ul class=\"comment-main cl\" id=\"com-list\">\n            <li class=\"item cl\" v-for='node in data'>\n                <review :user=\"user\" :remarkdata=\"node\" :ondeleteremark=\"deleteremark\" :onaddremark=\"onaddremark\"\n                        :onpraise=\"onPraiseFn\"></review>\n            </li>\n        </ul>\n        <div class=\"loadmore\" @click=\"onshowmore\">\n            <div v-if=\"showmoredata\">\n                <div class=\"text-center\">点击加载更多精彩评论&nbsp<span class=\"glyphicon glyphicon-arrow-down\"></span></div>\n            </div>\n            <div v-else>\n                <div class=\"text-center\">所有评论已加载完成</div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import review from './SoReview.vue';\n    import replybox from './SoReplyBox.vue';\n    export default{\n        data(){\n            return {\n                filters: [{\n                    name: \"最新评论\",\n                    text: \"Newest\",\n                    active: false\n                }, {\n                    name: \"我的评论\",\n                    text: \"My\",\n                    active: false\n                }, {\n                    name: \"所有评论\",\n                    text: \"All\",\n                    active: true\n                }],\n                filterOption: \"All\",\n                pageindex: 0,\n                showmoredata: true,\n            }\n        },\n        props: {\n            id:{\n                type:String,\n                default:null\n            },\n            classname:{\n                type:String,\n                default:\"remark\"\n            },\n            style:{\n                type:String,\n                default:\"width:100%;height:100%\"\n            },\n            hidden:{\n                type:Boolean,\n                default:false\n            },\n            data: Array,\n            count: {\n                type: Number,\n                default: 0\n            },\n            user: Object,\n            size: {\n                type: Number,\n                defulat:10\n            },\n            ondelete: Function,\n            onreply: Function,\n            onloadmore: Function,\n            onpraise: Function,\n            onfilter: Function\n        },\n        methods: {\n            //过滤\n            onfilters: function (index) {\n                // debugger;\n                if(this.filters[index].active) return;\n                this.filters.forEach(function(filter){\n                  if(filter.active) filter.active = false;\n                });\n                this.filters[index].active = true;\n                this.filterOption = this.filters[index].text;\n                if(this.onfilter){\n                    if(this.id==null){\n                        this.onfilter(this.filterOption)\n                    }else {\n                        this.onfilter(soModels.getReturnModel(this.id,this.filterOption))\n                    }\n                }\n                this.pageindex = 0;\n                this.showmoredata = true;\n            },\n            //发表评论\n            onreplys: function (data) {\n                var comm=[{\n                    userId: this.user.userId,\n                    userName: this.user.userName,\n                    text: data.text,\n                    remarkDate:new Date().toLocaleString()\n                }];\n                var newreplydata = {\n                    userId: this.user.userId,\n                    photoUrl: this.user.userPhotoUrl ? this.user.userPhotoUrl : \"\",\n                    comments:JSON.stringify(comm)\n                };\n                if(this.onreply){\n                    if(this.id==null){\n                        this.onreply(newreplydata)\n                    }else {\n                        this.onreply(soModels.getReturnModel(this.id,newreplydata))\n                    }\n                }\n                this.pageindex = 0;\n                this.showmoredata = true;\n                this.filterOption = \"All\";\n            },\n            //删除评论\n            deleteremark: function (data) {\n                if(this.ondelete){\n                    if(this.id==null){\n                        this.ondelete(data)\n                    }else {\n                        this.ondelete(soModels.getReturnModel(this.id,data))\n                    }\n                }\n                this.pageindex = 0;\n                this.showmoredata = true;\n                this.filterOption = \"All\";\n            },\n            //回复\n            onaddremark: function (data) {\n                if(this.onreply){\n                    if(this.id==null){\n                        this.onreply(data)\n                    }else {\n                        this.onreply(soModels.getReturnModel(this.id,data))\n                    }\n                }\n                this.pageindex = 0;\n                this.showmoredata = true;\n                this.filterOption = \"All\";\n            },\n            //加载更多方法\n            onshowmore: function () {\n                this.pageindex = this.data.length;\n                var loadprops = {\n                    pager: {\n                        pageSize: this.size,\n                        pageIndex: this.pageindex\n                    },\n                    filterOption: this.filterOption\n                }\n                var showdata;\n                if(this.onloadmore){\n                    if(this.id==null){\n                        showdata=this.onloadmore(loadprops)\n                    }else {\n                        showdata=this.onloadmore(soModels.getReturnModel(this.id,loadprops))\n                    }\n                }\n                var moreData = [];\n                if (showdata.length == 0) {\n                    this.showmoredata = false;\n                    return;\n                }\n                for (var j = 0; j < showdata.length; j++) {\n                    moreData.push(showdata[j])\n                }\n                for (var i = 0; i < moreData.length; i++) {\n                    this.data.push(moreData[i]);\n                }\n            },\n            //点赞\n            onPraiseFn: function (data) {\n                if(this.onpraise){\n                    if(this.id==null){\n                        this.onpraise(data)\n                    }else {\n                        this.onpraise(soModels.getReturnModel(this.id,data))\n                    }\n                }\n            }\n        },\n        components: {\n            review, replybox\n        },\n    }\n</script>\n\n<style scoped>\n    ul {\n        margin-bottom: 0px;\n    }\n\n    span, h3 {\n        color: dodgerblue;\n        font-size: small;\n    }\n\n    .remarknumber {\n        font-family: '微软雅黑', arial, verdana, sans-serif;\n        font-size: large;\n        margin-right: 5px;\n    }\n\n    li {\n        color: #2aabd2;\n    }\n\n    .list-group-item {\n        border: 0px !important;\n    }\n\n    .text-center {\n        font-family: '微软雅黑', arial, verdana, sans-serif;\n        color: darkgray;\n    }\n\n    .loadmore {\n        margin-top: 50px;\n        margin-bottom: 20px;\n        height: 40px;\n        background-color: gainsboro;\n        padding-top: 12px;\n        cursor: pointer;\n    }\n\n    .loadmore:hover {\n        background: #b9def0;\n    }\n\n    .filter {\n        cursor: pointer;\n    }\n\n    .glyphicon-arrow-down {\n        color: #9d9d9d;\n    }\n\n    hr {\n        margin-top: 0px;\n        margin-bottom: 0px;\n    }\n\n    .top {\n        margin-bottom: -5px;\n        position: relative;\n        top: -3px;\n\n    }\n\n    .list-group-item {\n        padding: 0px;\n\n    }\n\n    .topline {\n        margin-bottom: 15px;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoRemark/SoRemark.vue?659ac38e","<template>\n    <div :id=\"_id\" v-show=\"!hidden\">\n        <div v-if=\"!!_data\">\n            <table class=\"table table-bordered table-hover vue-table template-table\" style=\"table-layout:fixed;word-wrap:break-word;\">\n                <thead>\n                    <tr>\n                        <th v-show=\"showcheckbox\" class=\"vue-table-cell-icon\">\n                            <input type=\"checkbox\" @change.stop.prevent=\"mCheckboxChange($event)\" v-model=\"_mCheckboxChecked\"/>\n                        </th>\n                        <th v-for=\"(f, index) of _data.fields\" class=\"vue-table-th vue-table-cell-field\" @click=\"sort(index, $event)\" v-if=\"f.visible\">  \n                            <span v-html=\"f.title\"></span>\n                            <span v-if=\"f.sortable\">\n                                <div class=\"icon-sort\" :class=\"{'icon-sort-up':f.ascendingOrder,'icon-sort-down':f.ascendingOrder == false,'icon-sort-disabled':f.ascendingOrder == null}\"></div>\n                            </span> \n                            <span class=\"dropdown-icon\"><dropdowntemplate :itemlist=\"_data.fields\"></dropdowntemplate></span>\n                        </th> \n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"n in _pageSize\" v-if=\"(_pageIndex - 1) * _pageSize + n <= _count\" @click.stop=\"clickRow(n, $event)\">\n                        <td v-show=\"showcheckbox\" class=\"vue-table-cell-icon\">\n                            <checkboxtemplate :keys=\"_data.fields\" :values=\"_data.records[n-1]\" :selectedkeys=\"_data.selectedKeys\" :onselect=\"checkboxSelected\"></checkboxtemplate> \n                        </td>\n                        <td v-for=\"f of _data.fields\" class=\"vue-table-cell-record\" v-if=\"f.visible\">\n                            <div v-if=\"f.operationTemplate\"><strparsetemplate :strtemplate=\"f.operationTemplate\" :keys=\"_data.fields\" :values=\"_data.records[n-1]\"></strparsetemplate></div>\n                            <div v-else>{{_data.records[n-1][f.name]}}</div>\n                        </td>\n                    </tr>\n                </tbody>\n                <tfoot> \n                    <tr>\n                        <td :colspan=\"_footLength\" class=\"vue-table-cell-pager\">\n                            <div class=\"vue-table-count\" v-if=\"_count > 0\">共 {{_count}} 条</div>\n                            <div class=\"vue-table-pager\" v-if=\"_count > _pageSize\"><page :pagesize=\"_pageSize\" :count=\"_count\" :items=\"5\" :onselectitem=\"selectPage\" ref=\"page\"></page></div>\n                        </td>\n                    </tr>\n                </tfoot>\n            </table> \n        </div> \n    </div>\n</template>\n\n<script>\n    import page from '../SoPageTemplate/SoPageTemplate.vue'\n    import checkboxtemplate from '../SoCheckboxTemplate/SoCheckboxTemplate.vue'\n    import strparsetemplate from '../SoStrParseTemplate/SoStrParseTemplate.vue'\n    import dropdowntemplate from '../SoDropDownTemplate/SoDropDownTemplate.vue'\n\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            hidden: {\n                type: Boolean,\n                default: false\n            },\n            data: Object,\n            count: {\n                type: Number,\n                default: 0\n            },\n            pagesize: {\n                type: Number,\n                default: 0\n            },\n            showcheckbox: {\n                type: Boolean,\n                default: false\n            },\n            onsort: Function,\n            onclickrow: Function,\n            onselectpage: Function\n        },\n        computed: {\n            _data() {\n                return this.data\n            },\n            _count() {\n                let temp = 0\n                if (this.count) {\n                    temp = this.count\n                } else if (!!this.data && this.data.records && this.data.records.length) {\n                    temp = this.data.records.length\n                } else {\n                    temp = 0\n                }\n                return temp\n            },\n            _pageSize() {\n                let temp = 0\n                if (this.pagesize) {\n                    temp = this.pagesize\n                } else if (!!this.data && this.data.records && this.data.records.length) {\n                    temp = this.data.records.length\n                } else {\n                    temp = 0\n                }\n                return temp\n            },\n            _footLength() {\n                let temp = 0\n                if (!!this.data && this.data.fields) {\n                    let fields = this.data.fields,\n                        len = fields.length\n                    for (let value of fields) {\n                        if (!value.visible) {\n                            len = len - 1\n                        }\n                    }\n                    temp = this.showcheckbox ? len + 1 : len\n                }\n                return temp\n            }\n        },\n        watch: {\n            data() {\n                this.pageActiveItemReset() // set current page to page 1 \n                this.cacheDataRecords() // set records cache\n                this.selectionSetAttribute() // set arrtribute selection\n            }\n        },\n        methods: {\n            sort(fieldIndex, event) {\n                if (event.target.className == \"icon-reorder\") { // dropdown event not sort event\n                    return\n                }\n                this._pageIndex = 1\n                let hasSortField = false,\n                    fields = this._data.fields\n                if (!fields[fieldIndex].sortable) {\n                    return\n                }\n                fields.forEach((value, index) => {\n                    if (value.sortable) {\n                        if (index == fieldIndex) {\n                            if (value.ascendingOrder) {\n                                value.ascendingOrder = false\n                            } else {\n                                value.ascendingOrder = true\n                            }\n                        } else {\n                            value.ascendingOrder = null\n                        }\n                        hasSortField = true\n                    }\n                })\n                if (!hasSortField) {\n                    return\n                }\n                let $detail = {},\n                    sortField = fields[fieldIndex].name,\n                    ascendingOrder = fields[fieldIndex].ascendingOrder\n                $detail.sortField = sortField\n                $detail.ascendingOrder = ascendingOrder\n                $detail.selectedKeys = this._data.selectedKeys\n                if (this.onsort) {\n                    if (this.id) {\n                        let returnRecords = this.onsort(soModels.getReturnModel(this._id, $detail)) // invoke common function return additional info \n                        returnRecords && this.updateRecords(returnRecords)\n                    } else {\n                        this.onsort($detail)\n                    }\n                } else {\n                    let tempRecords = sessionStorage.getItem(this._id)\n                    if (tempRecords) {\n                        tempRecords = this.sortHelper(JSON.parse(tempRecords), sortField, ascendingOrder)\n                        this.updateRecords(tempRecords)\n                    }\n                }\n                this._mCheckboxChecked = false\n                this.pageActiveItemReset()\n            },\n            clickRow(n, event) {\n                if (event.target.tagName != \"TD\") { // other event not row event\n                    return\n                }\n                let index = n - 1\n                if (this.onclickrow) {\n                    let fields = this._data.fields,\n                        record = this._data.records[index],\n                        $detail = {},\n                        temp = []\n                    for (let field of fields) {\n                        let name = field.name\n                        if (record[name]) {\n                            $detail[name] = record[name]\n                        }\n                        if (field.key) {\n                            temp.push(record[name])\n                        }\n                    }\n                    $detail.key = temp.join('|')\n                    if (this.id) {\n                        this.onclickrow(soModels.getReturnModel(this._id, $detail))\n                    } else {\n                        this.onclickrow($detail)\n                    }\n                }\n            },\n            selectPage(pageIndex) {\n                this._pageIndex = pageIndex\n                let $detail = {}\n                $detail.pager = {\n                    \"pageSize\": this.pagesize,\n                    \"pageIndex\": pageIndex\n                }\n                let ascendingOrder, sortField\n                for (let value of this._data.fields) {\n                    let visible = value.visible,\n                        sortable = value.sortable\n                    ascendingOrder = value.ascendingOrder\n                    if (visible && sortable && ascendingOrder != null) {\n                        sortField = value.name\n                        break\n                    }\n                }\n                $detail.sortField = sortField\n                $detail.ascendingOrder = ascendingOrder\n                $detail.selectedKeys = this._data.selectedKeys\n                if (this.onselectpage) {\n                    if (this.id) {\n                        let returnRecords = this.onselectpage(soModels.getReturnModel(this._id, $detail))\n                        returnRecords && this.updateRecords(returnRecords)\n                    } else {\n                        this.onselectpage($detail)\n                    }\n                } else {\n                    let tempRecords = sessionStorage.getItem(this._id)\n                    if (tempRecords) {\n                        tempRecords = JSON.parse(tempRecords)\n                        if (sortField) {\n                            tempRecords = this.sortHelper(tempRecords, sortField, ascendingOrder)\n                        }\n                        let start = this.pagesize * (pageIndex - 1),\n                            end = this.pagesize * pageIndex,\n                            sliceRecords = tempRecords.slice(start, end)\n                        if (sliceRecords.length < 1) return\n                        this.updateRecords(sliceRecords)\n                    }\n                }\n                this._mCheckboxChecked = false\n            },\n            mCheckboxChange(event) { //select all  \n                let targets = event.currentTarget,\n                    fields = this._data.fields,\n                    records = this._data.records.slice(0, this._pageSize)\n                if (targets.checked) {\n                    for (let r of records) {\n                        let keyVal = \"\",\n                            temp = []\n                        for (let f of fields) {\n                            if (f.key) {\n                                let name = f.name\n                                temp.push(r[name])\n                            }\n                        }\n                        keyVal = temp.join('|')\n                        if (keyVal && this._data.selectedKeys.indexOf(keyVal) < 0) {\n                            this._data.selectedKeys.push(keyVal)\n                        }\n                    }\n                } else {\n                    for (let r of records) {\n                        let keyVal = \"\",\n                            temp = []\n                        for (let f of fields) {\n                            if (f.key) {\n                                let name = f.name\n                                temp.push(r[name])\n                            }\n                        }\n                        keyVal = temp.join('|')\n                        let index = this._data.selectedKeys.indexOf(keyVal)\n                        if (index > -1) {\n                            this._data.selectedKeys.splice(index, 1)\n                        }\n                    }\n                }\n                this.selectionSetAttribute()\n            },\n            checkboxSelected(key) {\n                if (this.showcheckbox) {\n                    let index = this._data.selectedKeys.indexOf(key)\n                    if (index > -1) {\n                        this._data.selectedKeys.splice(index, 1)\n                    } else {\n                        this._data.selectedKeys.push(key)\n                    }\n                    this.selectionSetAttribute()\n                }\n            },\n            sortHelper(arr, field, order) {\n                let refer = [],\n                    result = [],\n                    self = this\n                arr.forEach((value, index) => {\n                    let temp = (isNaN(value[field]) ? value[field] : self.padLeft(value[field], 15)) + ':' + index\n                    refer.push(temp)\n                })\n                refer.sort()\n                if (!order) {\n                    refer.reverse()\n                }\n                for (let value of refer) {\n                    let index = value.split(':')[1]\n                    result.push(arr[index])\n                }\n                return result\n            },\n            padLeft(field, width) {\n                let len = field.toString().length\n                while (len < width) {\n                    field = \"0\" + field\n                    len = len + 1\n                }\n                return field\n            },\n            pageActiveItemReset() {\n                if (this.$refs && this.$refs.page) {\n                    this.$refs.page.activeItem = 1\n                }\n            },\n            selectionSetAttribute() {\n                if (!!this._data && this._data.selectedKeys) {\n                    $(\"#\" + this._id)[0].setAttribute(\"selection\", this._data.selectedKeys)\n                }\n            },\n            cacheDataRecords() {\n                if (!!this.data && this.data.records) {\n                    sessionStorage.removeItem(this._id)\n                    sessionStorage.setItem(this._id, JSON.stringify(this.data.records))\n                }\n            },\n            updateRecords(newRecords) {\n                let fields = this._data.fields\n                this._data.records.forEach((record, index) => {\n                    if (index < newRecords.length) {\n                        fields.forEach(field => {\n                            let name = field.name\n                            record[name] = newRecords[index][name]\n                        })\n                    }\n                })\n            }\n        },\n        components: {\n            page,\n            checkboxtemplate,\n            strparsetemplate,\n            dropdowntemplate\n        },\n        beforeMount() {\n            if (this.id) {\n                this._id = this.id\n            } else {\n                this._id = \"grid-\" + Date.now()\n            }\n            this._pageIndex = 1\n            this._mCheckboxChecked = false\n        },\n        mounted() {\n            this.selectionSetAttribute()\n            this.cacheDataRecords()\n        }\n    }\n</script>\n\n<style scoped>\n    .vue-table-cell-pager {\n        text-align: right;\n        overflow: hidden;\n    }\n    \n    .vue-table-count {\n        float: left;\n        font-size: medium;\n        margin: 15px 0;\n    }\n    \n    .vue-table-pager {\n        float: right;\n    }\n    \n    .vue-table thead,\n    .vue-table tfoot {\n        background-color: #f8f8f8;\n    }\n    \n    .vue-table-cell-field {\n        text-align: center;\n    }\n    \n    .vue-table-cell-record {\n        text-align: left;\n    }\n    \n    .vue-table-cell-icon {\n        width: 35px;\n        text-align: center;\n        font-size: 17px;\n    }\n    \n    .vue-table-th {\n        cursor: pointer;\n        position: relative;\n    }\n    \n    .icon-sort-disabled {\n        color: #999;\n    }\n    \n    .vue-table-empty {\n        text-align: center;\n        line-height: 60px!important;\n    }\n    \n    .icon-sort:before,\n    .icon-sort-up:before,\n    .icon-sort-down:before {\n        font-size: 15px;\n        margin-left: 35px;\n    }\n    \n    .dropdown-icon {\n        float: right;\n        position: absolute;\n    }\n    \n    .table-bordered>thead>tr>td,\n    .table-bordered>thead>tr>th {\n        border-bottom-width: 0px !important;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDataGrid/SoDataGrid.vue?6e2d0ae4","<template>\n    <div>\n        <nav class=\"boot-nav\">\n            <ul class=\"pagination boot-item\">\n                <li v-if=\"_showFirstPrev\">\n                    <a href=\"##\" @click=\"onFirst\">\n                        <span aria-hidden=\"true\">首页</span>\n                    </a>\n                </li>\n                <li v-if=\"_showFirstPrev\">\n                    <a href=\"##\" @click=\"onPrev\">\n                        <span aria-hidden=\"true\">上一页</span>\n                    </a>\n                </li>\n                <li v-for=\"item in _items\" :class=\"activeItem === item ? 'active' : ''\">\n                    <a href=\"##\" v-text=\"item\" @click=\"onCurrent(item)\"></a>\n                </li>\n                <li v-if=\"_showNextLast\">\n                    <a href=\"##\" @click=\"onNext\">\n                        <span aria-hidden=\"true\">下一页</span>\n                    </a>\n                </li>\n                <li v-if=\"_showNextLast\">\n                    <a href=\"##\" @click=\"onLast\">\n                        <span aria-hidden=\"true\">末页</span>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            pagesize: {\n                type: Number,\n                default: 10\n            },\n            count: {\n                type: Number,\n                default: 1\n            },\n            items: {\n                type: Number,\n                default: 10\n            },\n            onselectitem: Function\n        },\n        data() {\n            return {\n                activeItem: 1\n            }\n        },\n        computed: {\n            _showFirstPrev() {\n                return this.activeItem > 1\n            },\n            _showNextLast() {\n                return this.activeItem < Math.ceil(this.count / this.pagesize)\n            },\n            _items() {\n                let temp = [],\n                    maxItem = Math.ceil(this.count / this.pagesize),\n                    len = maxItem > this.items ? this.items : maxItem,\n                    midIndex = this.items % 2 == 0 ? Math.ceil((this.items + 1) / 2) : Math.ceil(this.items / 2)\n                for (let i = 1; i <= len; i++) {\n                    temp.push(i)\n                }\n                if (this.activeItem > midIndex) {\n                    let span = this.activeItem - midIndex\n                    for (let i = 0; i < span && temp[temp.length - 1] < maxItem; i++) {\n                        temp.shift(temp[i])\n                        temp.push(len + 1 + i)\n                    }\n                }\n                return temp\n            }\n        },\n        watch: {\n            activeItem() {\n                this.selectItem()\n            }\n        },\n        methods: {\n            onFirst() {\n                this.activeItem = 1\n            },\n            onPrev() {\n                this.activeItem = this.activeItem - 1\n            },\n            onCurrent(item) {\n                this.activeItem = item\n            },\n            onNext() {\n                this.activeItem = this.activeItem + 1\n            },\n            onLast() {\n                this.activeItem = Math.ceil(this.count / this.pagesize)\n            },\n            selectItem() {\n                this.onselectitem && this.onselectitem(this.activeItem);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .boot-select {\n        float: right;\n        width: 80px;\n    }\n    \n    .pagination {\n        margin: 10px 0;\n    }\n    \n    .boot-nav {\n        float: left;\n    }\n    \n    .boot-item {\n        display: inline-block;\n        vertical-align: middle;\n    }\n    \n    .item-total {\n        display: inline-block;\n        vertical-align: middle;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoPageTemplate/SoPageTemplate.vue?15cce82a","<template>\r\n    <div class=\"dropdown\">\r\n        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\">\r\n            <span class=\"icon-reorder\"></span>\r\n        </a>\r\n        <ul class=\"dropdown-menu\" role=\"menu\">\r\n            <li role=\"presentation\" v-for=\"(item, index) in itemlist\">\r\n                <a><input type=\"checkbox\" v-model=\"item.visible\" @click.stop /><span class=\"item-title\">{{item.title}}</span></a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            itemlist: Array\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    a {\r\n        cursor: pointer;\r\n    }\r\n    \r\n    input {\r\n        cursor: pointer;\r\n    }\r\n    \r\n    .dropdown {\r\n        left: 25px;\r\n    }\r\n    \r\n    .dropdown-toggle {\r\n        color: #898989;\r\n    }\r\n    \r\n    .dropdown .icon-reorder {\r\n        color: #898989;\r\n        margin: 0;\r\n    }\r\n    \r\n    .item-title {\r\n        margin: 7px;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// webpack:///client/SoUI/src/js/components/SoDropDownTemplate/SoDropDownTemplate.vue?58732374","<template>\n    <div class=\"panel panel-default\" style=\"margin-top:2px\">\n        <div class=\"panel-heading\" v-if=\"istool\">\n            <h5 style=\"position:relative;\">\n                &nbsp;\n                <!-- 标题 -->\n                <!-- {{pram.title}} -->\n                <div style=\"float:left;\" class='text-overflow' :title=\"file.name || '未命名'\">\n                    {{(pram.title?(pram.title +\" - \"):\"\")+(file.name || \"未命名\")}}\n                </div>\n                <!--  文件切换 -->\n                <span style=\"position:absolute;left:44%;\">\n                    <!-- 左切 -->\n                   <a style=\"padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-if=\"fileIndex>0\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\" @click=\"left\"></a>\n                   <span disabled = 'true' style=\"color: #e8e8e8; padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n                <!-- 切换标识 -->\n                <span style=\"font-size: 12px;\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\">{{fileIndex+1}} / {{!paramlist[infoIndex]?1:paramlist[infoIndex].files.length}}</span>\n                <!-- 右切 -->\n                <a style=\"padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-if=\"paramlist[infoIndex] && (fileIndex < paramlist[infoIndex].files.length-1)\"\n                    v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\" @click=\"right\"></a>\n                    <span disabled='true' style=\"color: #e8e8e8;  padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n                    </span>\n                    <!-- 工具按钮 -->\n                    <span style=\"float:right;font-size: 16px;\">\n                    <!-- 评论 -->\n                    <template v-if=\"isremarks\">\n                        <a style=\"cursor:pointer\" class=\"glyphicon glyphicon-comment\" title=\"评论\" v-if=\"file.fileUrl != null\" target=\"_blank\" @click=\"gotoFunc('/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket))\"></a>\n                        <!-- <a class=\"glyphicon glyphicon-comment\" title=\"评论\" target=\"_blank\" :href=\"'/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket)\"></a> -->\n                        <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-comment\" v-else></span>\n</template>\n<!-- 下载 -->\n<template v-if=\"isdown\">\n    <a class=\"glyphicon glyphicon-save\" title=\"下载\" target=\"_blank\" v-if=\"file.fileUrl != null\" :href=\"file.fileUrl\"></a>\n    <span disabled='true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-save\" v-else></span>\n</template>\n<!-- 预览 -->\n<template v-if=\"isview\">\n    <a class=\"el-icon-view\" title=\"预览\" target=\"_blank\" v-if=\"file.url != null\" :href=\"'/Render/PtUrl?param='+encodeURIComponent(JSON.stringify(pram))+'&infoIndex='+infoIndex+'&fileIndex='+fileIndex\"></a>\n    <span disabled='true' style=\"color: #e8e8e8;\" class=\"el-icon-view\" v-else></span>\n</template>\n<!-- 提交 -->\n<template v-if=\"issubmit\">\n    <a class=\"el-icon-upload\" style=\"cursor:pointer\" title=\"提交\" target=\"_blank\" @click=\"gotoFunc('/Render/Submission?param='+JSON.stringify(goParam2(pram)))\"></a>\n</template>\n</span>\n</h5>\n</div>\n<div class=\"panel-body\" style=\"height:100%;width:100%;\">\n    <!-- 测试区域 -->\n    <!-- loading -->\n    <!-- losding有问题，先显示了没有成果 -->\n    <div v-if=\"isLoading\" :style=\"stylestr\">\n        <span class=\"el-icon-loading\" style=\"font-size: 45px;position:absolute;left:45%;top:45%;\"></span>\n    </div>\n    <!-- 内容 -->\n    <div v-else>\n        <div v-if=\"paramlist ==null || paramlist.length == 0\">\n            <div>\n                <h4>没有成果</h4>\n            </div>\n        </div>\n        <div v-else>\n            <component :is=\"mo\" :param=\"file\" keep-alive></component>\n        </div>\n    </div>\n</div>\n<div v-if=\"isfoottool\">\n    <!-- 成果切换 -->\n    <div v-if=\"paramlist.length > 1\">\n        <el-pagination small layout=\"prev, pager, next\" :page-size=\"1\" :total=\"paramlist.length\" :current-page=\"infoIndex+1\" :page-count=\"paramlist.length\"\n            @current-change=\"infoClick\">\n            </el-pagination>\n    </div>\n</div>\n<div :id=\"'iframe'+nodeId\">\n    <iframe style=\"position:absolute;left:0px;top:0px;\" src=\"about:blank\" width=\"100%\" height=\"100%\" scrolling=\"no\" frameborder=\"0\"></iframe>\n</div>\n<div :id=\"'ptrendermodel'+nodeId\" class=\"modal fade\" aria-hidden=\"true\" data-backdrop=\"static\">\n    <div class=\"modal-dialog\" style=\"width:70%;height:600px;\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\" style=\"background-color:#f8f8f8\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                <h5 class=\"modal-title\">{{pram.title}}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"embed-responsive embed-responsive-16by9\">\n                    <iframe class=\"embed-responsive-item\" :src=\"gotoUrl\"></iframe>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</template>\n\n<script>\n    //import  models from '../../utils/getCom'\n    import ajax from '../../utils/pollAjax'\n    import ao from \"../../utils/arrayandobjectoperation\"\n    import bo from \"../../utils/baseoperation\"\n    import { Pagination } from 'element-ui'\n    import model from \"../../utils/loadmodel\"\n    import MetadataDefOperation from \"./../../Utils/MetadataDefOperation\";\n    var renderModel = {\n        \"_rich\": require('../formatcom/gtrich.vue'),\n        \"_img\": require('../formatcom/gtimg.vue'),\n        \"_gdb\": require('../formatcom/gtgdb.vue'),\n        \"_chart\": require('../formatCom/gtpiechart.vue'),\n        \"_dataset\": require('../formatCom/gtdataset.vue'),\n        \"_noresults\": require('../formatCom/gtNoResults.vue')\n    };\n\n    //let loadingInstance;\n    export default {\n        props: {\n            pram: {\n                type: Object,\n                default: {}\n            },\n            global: {\n                type: Object,\n                default: null\n            },\n            heights: {\n                type: Number,\n                default: 0\n            },\n            infoindex: {\n                type: Number,\n                default: 0\n            },\n            fileindex: {\n                type: Number,\n                default: 0\n            },\n            istool: {\n                type: Boolean,\n                default: true\n            },\n            isremarks: {\n                type: Boolean,\n                default: true\n            },\n            isdown: {\n                type: Boolean,\n                default: true\n            },\n            isview: {\n                type: Boolean,\n                default: true\n            },\n            issubmit: {\n                type: Boolean,\n                default: true\n            },\n            isfoottool: {\n                type: Boolean,\n                default: true\n            },\n        },\n        data: function () {\n            return {\n                paramlist: [],\n                file: {},\n                infoIndex: this.infoindex,//0,\n                fileIndex: this.fileindex,//0,\n                metadataDefinition: [],\n                isLoading: false,\n                gotoUrl: \"\",\n                mo: null,\n                stylestr: {\n                    height: this.heights == 0 ? \"100%\" : this.heights + 'px'\n                },\n                nodeId: bo.getGuid()\n            }\n        },\n        created: function () {\n            this.init();\n        },\n        mounted: function () {\n            //不能放到init中，因为时机不同。\n            let _this = this;\n            $(\"#iframe\" + this.nodeId).hide();\n            $(\"#ptrendermodel\" + this.nodeId).on('hide.bs.modal', function (e) {\n                $(\"#iframe\" + _this.nodeId).hide();\n            })\n        },\n        // updated:function(){\n        // },\n        methods: {\n            gotoFunc: function (url) {\n                this.gotoUrl = url;\n                //this.isGotoModel = true;\n                $('#ptrendermodel' + this.nodeId).modal();\n                $(\"#iframe\" + this.nodeId).show();\n            },\n            infoClick: function (index) {\n                this.infoIndex = index - 1;\n                this.fileIndex = 0;\n                this.setFile(this.infoIndex, this.fileIndex);\n            },\n            left: function () {\n                if (this.fileIndex == 0) {\n                    gtUI.message({ message: \"前面没有了！\", type: 'info' });\n                    return;\n                }\n                this.fileIndex--;\n                this.setFile(this.infoIndex, this.fileIndex);\n            },\n            right: function () {\n                if (this.fileIndex == this.paramlist[this.infoIndex].files.length - 1) {\n                    gtUI.message({ message: \"后面没有了！\", type: 'info' });\n                    return;\n                }\n                this.fileIndex++;\n                this.setFile(this.infoIndex, this.fileIndex);\n            },\n            setFile: function (infoIndex, fileIndex) {\n                this.file = {};\n                this.mo = this.$options.components[\"_\" + model.getConfig(this.paramlist[infoIndex].files[fileIndex].format, \"ptrender\")];\n                let url = \"?id=\"+ MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"IIId\") +\n                    \"&title=\"+ escape(MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"FormalTitle\")) +\n                    \"&url=\"+ escape(this.paramlist[infoIndex].url)+\n                    \"&ticket=\" + escape(this.paramlist[infoIndex].files[fileIndex].ticket) +\n                    \"&format=\" + escape(this.paramlist[infoIndex].files[fileIndex].format);\n                this.file = {\n                    url: \"/FileInfo/GetStream\" + url,\n                    format: this.paramlist[infoIndex].files[fileIndex].format,\n                    heights: this.heights,\n                    fileUrl: \"/FileInfo/DownLoad\" + url + \"&name=\" + escape(this.paramlist[infoIndex].files[fileIndex].name),\n                    name: this.paramlist[infoIndex].files[fileIndex].name,\n                    ticket: this.paramlist[infoIndex].files[fileIndex].ticket\n                };\n            },\n            //初始方法， param数据改变时或者第一次进来是调用\n            init: function () {\n                this.paramlist = [];\n                this.infoIndex = 0;\n                this.fileIndex = 0;\n                this.file = {};//不能省略\n                this.mo = null;\n                this.getData();\n            },\n            getParam: function () {\n                if(this.metadataDefinition == null){\n                  MetadataDefOperation.init();\n                  this.metadataDefinition = MetadataDefOperation.metadataDefinition;\n                }\n            },\n            //转化参数，转换成match方法需要的kmd参数，并且替换全局变量。返回一个替换后的备份，不修改原始参数\n            goParam: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                let pa = ao.deepClone(this.pram.param);\n                //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                for (let i in pa.filter) {\n                    let newFilter = [];\n                    for (let j = 0; j < pa.filter[i].length; j++) {\n                        //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                        for (let z in pa.filter[i][j]) {\n                            let value = \"\";\n                            if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                value = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)];\n                            }\n                            else {\n                                value =  pa.filter[i][j][z] ;\n                            }\n                            newFilter = MetadataDefOperation.buildFilter(z, value);\n                        }\n                    }\n                    pa.filter[i] = newFilter;\n                }\n                return pa;\n            },\n            //替换全局变量，用于上传。返回一个替换后的备份，不修改原始参数。\n            goParam2: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if (this.metadataDefinition.length == 0) this.getParam();\n                //let result = this.metadataDefinition;\n                //pDic = result;\n                //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                for (let i in pa.filter) {\n                    for (let j = 0; j < pa.filter[i].length; j++) {\n                        //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                        for (let z in pa.filter[i][j]) {\n                            if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                pa.filter[i][j][z] = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)];\n                            }\n                        }\n                    }\n                }\n                return pa;\n            },\n            getData: function () {\n                this.isLoading = true;\n                //这里开始Loading。。。\n                //let param = this.goParam();\n                //这里需要深拷贝,目的是不改变原始的pram参数，这样可以递归使用PtRender。\n                // let param = ao.deepClone(this.goParam());\n                // delete param[\"viewtype\"];\n                //let _this = this;\n                this.Match();\n                //要是按异步获取数据走逻辑是没有问题，但是loading是有问题的，而且有出现文件数据获取不完整的情况。\n                //异步的情况会先显示没有成果，然后再出成果，在异步的时候这个要处理。\n                this.isLoading = false;\n            },\n            Match: function () {\n                //Match和Retrieve方法的异步会让Api调用出现调用失败，这里需要测试。\n                //PtRender的代码逻辑是完全支持异步执行的。\n                //let pmdata = this.pram.param;\n                let param = ao.deepClone(this.goParam());\n                let _this = this;\n                ajax({\n                    url: \"/SearchService/Match\",\n                    type: \"post\",\n                    contentType: \"application/json; charset=utf-8\",\n                    data: JSON.stringify(param),\n                    async: false,\n                    success: function (result) {\n                        for (let i = 0; i < result.metadatas.length; i++) {\n                         var metadata = result.metadatas[i];\n                           _this.Retrieve(metadata, metadata[\"source\"][\"url\"]);\n                        }\n                    }\n                });\n            },\n            Retrieve: function (metadata, urlstr) {\n                // this.paramlist = [];\n                let filesPa = [];\n                let _this = this;\n                ajax({\n                    url: \"/DataService/Retrieve\",\n                    type: \"get\",\n                    data: { url: urlstr },\n                    async: false,\n                    success: function (result) {\n                        console.log(JSON.stringify(result));\n                        //组织成果和文件结构\n                        for (let i = 0; i < result.length; i++) {\n                            filesPa.push({ ticket: result[i].ticket, format: result[i].format.toLowerCase(), name: result[i].name });\n                        }\n                        _this.paramlist.push({ kmd:metadata, url: urlstr, files: filesPa, fileCount: result.length });\n                        if (_this.paramlist.length == 1 && _this.paramlist[0].files.length >= 1) {\n                            _this.setFile(0, 0);\n                        } else {\n                            if (_this.paramlist.length == _this.infoindex + 1)\n                                _this.setFile(_this.infoindex, _this.fileindex);\n                        }\n                    }\n                });\n            }\n        },\n        watch: {\n            pram: function () {\n                this.init();\n            }\n        },\n        components: Object.assign(renderModel, {\n            //\"el-dialog\": Dialog,\n            \"el-pagination\": Pagination\n        })\n    }\n\n</script>\n<style scoped>\n    .text-overflow {\n        width: 40%;\n        /*    height:40%;\n    border:1px solid red;\n    border-top:4px solid red;\n    padding:3px;*/\n        overflow: hidden;\n        ;\n        /* 内容超出宽度时隐藏超出部分的内容 */\n        text-overflow: ellipsis;\n        ;\n        /* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/\n        white-space: nowrap;\n        /* 不换行 */\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/cellRender/GtPTRender2.0.vue?e4e22f14","<template>\n    <div class=\"panel panel-default\" style=\"margin-top:2px\">\n        <div class=\"panel-heading\" v-if=\"istool\">\n            <h5 style=\"position:relative;\">\n                &nbsp;\n                <!-- 标题 -->\n                <!-- {{pram.title}} -->\n                <div style=\"float:left;\" class='text-overflow' :title=\"file.name || '未命名'\">\n                    {{(pram.title?(pram.title +\" - \"):\"\")+(file.name || \"未命名\")}}\n                </div>\n               <!--  文件切换 -->\n               <span style=\"position:absolute;left:44%;\">\n                    <!-- 左切 -->\n                   <a style=\"padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-if=\"fileIndex>0\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\" @click=\"left\"></a>\n                   <span disabled = 'true' style=\"color: #e8e8e8; padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n                   <!-- 切换标识 -->\n                    <span style=\"font-size: 12px;\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\">{{fileIndex+1}} / {{!paramlist[infoIndex]?1:paramlist[infoIndex].files.length}}</span>\n                   <!-- 右切 -->\n                   <a style=\"padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-if=\"paramlist[infoIndex] && (fileIndex < paramlist[infoIndex].files.length-1)\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"  @click=\"right\"></a>\n                <span disabled = 'true' style=\"color: #e8e8e8;  padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n               </span>\n                <!-- 工具按钮 -->\n                <span style=\"float:right;font-size: 16px;\">\n                    <!-- 评论 -->\n                    <template v-if=\"isremarks\">\n                        <a style=\"cursor:pointer\" class=\"glyphicon glyphicon-comment\" title=\"评论\" v-if=\"file.fileUrl != null\" target=\"_blank\" @click=\"gotoFunc('/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket))\"></a>\n                        <!-- <a class=\"glyphicon glyphicon-comment\" title=\"评论\" target=\"_blank\" :href=\"'/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket)\"></a> -->\n                        <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-comment\" v-else></span>\n                    </template>\n                    <!-- 下载 -->\n                    <template v-if=\"isdown\">\n                        <a class=\"glyphicon glyphicon-save\" title=\"下载\" target=\"_blank\" v-if=\"file.fileUrl != null\" :href=\"file.fileUrl\"></a>\n                         <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-save\" v-else></span>\n                     </template>\n                     <!-- 预览 -->\n                     <template v-if=\"isview\">\n                        <a class=\"el-icon-view\" title=\"预览\" target=\"_blank\" v-if=\"file.url != null\" :href=\"'/Render/PtUrl?param='+encodeURIComponent(JSON.stringify(pram))+'&infoIndex='+infoIndex+'&fileIndex='+fileIndex+'&globle='+encodeURIComponent(JSON.stringify(global))\"></a>\n                        <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"el-icon-view\" v-else></span>\n                    </template>\n                    <!-- 提交 -->\n                    <template v-if=\"issubmit\">\n                        <a class=\"el-icon-upload\" style=\"cursor:pointer\" title=\"提交\" target=\"_blank\" @click=\"gotoFunc('/Render/Submission?param='+JSON.stringify(goParam2(pram)))\"></a>\n                        <!-- <a class=\"el-icon-upload\" target=\"_blank\" :href=\"'/Render/Submission?param='+JSON.stringify(pram)\"></a> -->\n                    </template>\n                </span>\n            </h5>\n            <!-- <a style=\"float:right;display:inline;\" href=\"/Render/Submition\">+ </a> -->\n        </div>\n        <div class=\"panel-body\" style=\"height:100%;width:100%;\">\n        <!-- 测试区域 -->\n<!--         <img :src=\"file.url\" />\n        <gt_img :param=\"file\">\n                    </gt_img> -->\n\n\n        <!-- 测试区域 -->\n            <!-- loading --> <!-- losding有问题，先显示了没有成果 -->\n          <div v-if=\"isLoading\" :style=\"stylestr\">\n            <span class=\"el-icon-loading\" style=\"font-size: 45px;position:absolute;left:45%;top:45%;\"></span>\n          </div>\n          <!-- 内容 -->\n          <div v-else>\n            <div v-if=\"paramlist ==null || paramlist.length == 0\">\n                <div>\n                    <h4>没有图件成果</h4>\n                </div>\n            </div>\n            <div v-else>\n                <component :is=\"mo\" :param=\"file\" keep-alive></component>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"isfoottool\">\n            <!-- 成果切换 -->\n            <div v-if=\"paramlist.length > 1\">\n                <el-pagination\n                  small\n                  layout=\"prev, pager, next\"\n                  :page-size=\"1\"\n                  :total=\"paramlist.length\"\n                  :current-page=\"infoIndex+1\"\n                  :page-count=\"paramlist.length\"\n                  @current-change=\"infoClick\">\n                </el-pagination>\n            </div>\n        </div>\n\n        <!-- 通用模态框 elemlet-->\n<!--         <el-dialog\n            :title=\"pram.title+' - '+(file.name || '未命名')\"\n            v-model=\"isGotoModel\"\n            top=\"12%\"\n            size=\"small\">\n          <div class=\"embed-responsive embed-responsive-16by9\">\n            <iframe class=\"embed-responsive-item\" :src=\"gotoUrl\"></iframe>\n          </div>\n        </el-dialog> -->\n        <!-- bootcss -->\n        <div :id=\"'iframe'+nodeId\">\n            <iframe style=\"position:absolute;left:0px;top:0px;\" src=\"about:blank\" width=\"100%\" height=\"100%\" scrolling=\"no\" frameborder=\"0\"></iframe>\n        </div>\n        <div :id=\"'ptrendermodel'+nodeId\" class=\"modal fade\" aria-hidden=\"true\" data-backdrop=\"static\">\n          <div class=\"modal-dialog\" style=\"width:70%;height:600px;\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\" style=\"background-color:#f8f8f8\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" @click=\"reloadPresentView()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                <h5 class=\"modal-title\">{{pram.title}}</h5>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"embed-responsive embed-responsive-16by9\">\n                    <iframe class=\"embed-responsive-item\" :src=\"gotoUrl\"></iframe>\n                </div>\n              </div>\n<!--               <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n              </div> -->\n            </div><!-- /.modal-content -->\n          </div><!-- /.modal-dialog -->\n        </div><!-- /.modal -->\n\n    </div>\n</template>\n\n<script>\n    //import  models from '../../utils/getCom'\n    import ajax from '../../utils/pollAjax'\n    import ao from \"../../utils/arrayandobjectoperation\"\n    import bo from \"../../utils/baseoperation\"\n    import MetadataDefOperation from \"./../../Utils/MetadataDefOperation\";\n    import {Pagination} from 'element-ui'\n    import model from \"../../utils/loadmodel\"\n    var renderModel = {\n        \"_rich\": require('../formatcom/gtrich.vue'),\n        \"_img\": require('../formatcom/gtimg.vue'),\n        \"_gdb\": require('../formatcom/gtgdb.vue'),\n        \"_chart\": require('../formatCom/gtpiechart.vue'),\n        \"_dataset\": require('../formatCom/gtdataset.vue'),\n        \"_noresults\": require('../formatCom/gtNoResults.vue')\n    };\n\n    //let loadingInstance;\n    export default {\n        props: {\n            pram: {\n                type: Object,\n                default: {}\n            },\n            global: {\n                type: Object,\n                default: null\n            },\n            heights: {\n                type: Number,\n                default: 0\n            },\n            infoindex: {\n                type: Number,\n                default: 0\n            },\n            fileindex: {\n                type: Number,\n                default: 0\n            },\n            istool: {\n                type: Boolean,\n                default: true\n            },\n            isremarks: {\n                type: Boolean,\n                default: true\n            },\n            isdown: {\n                type: Boolean,\n                default: true\n            },\n            isview: {\n                type: Boolean,\n                default: true\n            },\n            issubmit: {\n                type: Boolean,\n                default: true\n            },\n            isfoottool: {\n                type: Boolean,\n                default: true\n            },\n        },\n        data: function () {\n            return {\n                paramlist: [],\n                file:{},\n                infoIndex:this.infoindex,//0,\n                fileIndex:this.fileindex,//0,\n                metadataDefinition:[],\n                isLoading:false,\n                gotoUrl:\"\",\n                //isGotoModel:false,\n                mo : null,\n                stylestr:{\n                    height: this.heights == 0?\"100%\":this.heights+'px'\n                },\n                nodeId:bo.getGuid()\n            }\n        },\n        created:function(){\n            this.init();\n        },\n        mounted: function () {\n            //不能放到init中，因为时机不同。\n            let _this = this;\n            $(\"#iframe\"+this.nodeId).hide();\n            $(\"#ptrendermodel\"+this.nodeId).on('hide.bs.modal', function (e) {\n              $(\"#iframe\"+_this.nodeId).hide();\n            })\n        },\n        // updated:function(){\n        // },\n        methods:{\n            gotoFunc:function(url){\n                this.gotoUrl = url;\n                //this.isGotoModel = true;\n                $('#ptrendermodel'+this.nodeId).modal();\n                $(\"#iframe\"+this.nodeId).show();\n            },\n            reloadPresentView:function(){\n                // alert(\"点击了取消按钮！\");\n                this.init();\n            },\n            infoClick:function(index){\n                this.infoIndex = index-1;\n                this.fileIndex = 0;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            left:function(){\n                if(this.fileIndex == 0){\n                    gtUI.message({message: \"前面没有了！\",type: 'info'});\n                    return;\n                }\n                this.fileIndex--;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            right:function(){\n                if(this.fileIndex == this.paramlist[this.infoIndex].files.length-1){\n                    gtUI.message({message: \"后面没有了！\",type: 'info'});\n                    return;\n                }\n                this.fileIndex++;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            setFile:function(infoIndex,fileIndex){\n                this.file={};\n                this.mo = this.$options.components[\"_\"+model.getConfig(this.paramlist[infoIndex].files[fileIndex].format,\"ptrender\")];\n                let url = \"?id=\"+ MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"IIId\") +\n                    \"&title=\"+ escape(MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"FormalTitle\")) +\n                    \"&url=\"+ escape(this.paramlist[infoIndex].url)+\n                    \"&ticket=\"+escape(this.paramlist[infoIndex].files[fileIndex].ticket)+\n                    \"&format=\"+ escape(this.paramlist[infoIndex].files[fileIndex].format);\n                this.file={\n                    url: \"/FileInfo/GetStream\"+url,\n                    format:this.paramlist[infoIndex].files[fileIndex].format,\n                    heights: this.heights,\n                    fileUrl: \"/FileInfo/DownLoad\"+url+\"&name=\"+escape(this.paramlist[infoIndex].files[fileIndex].name),\n                    name:this.paramlist[infoIndex].files[fileIndex].name,\n                    ticket:this.paramlist[infoIndex].files[fileIndex].ticket\n                };\n            },\n            //初始方法， param数据改变时或者第一次进来是调用\n            init:function () {\n                this.paramlist = [];\n                this.infoIndex=0;\n                this.fileIndex=0;\n                this.file={};//不能省略\n                this.mo = null;\n                this.getData();\n                // if(this.file && this.file.format)\n                //     //\"_\"是为了动态加载的时候和原生组件区分。\n                    // this.mo = this.$options.components[\"_\"+model.getConfig(this.file.format,\"ptrender\")];\n                    // this.$options.components[\"render\"] = renderModel[model.getConfig(this.file.format,\"ptrender\")];\n            },\n            getParam: function(){\n                if(!this.metadataDefinition || this.metadataDefinition.length<1){\n                  MetadataDefOperation.init();\n                  this.metadataDefinition = MetadataDefOperation.metadataDefinition;\n                }\n            },\n            //转化参数，转换成match方法需要的kmd参数，并且替换全局变量。返回一个替换后的备份，不修改原始参数\n            goParam: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if(this.metadataDefinition.length==0)\n                this.getParam();\n                let result = this.metadataDefinition;\n                        //pDic = result;\n                        //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                        for (let i in pa.filter) {\n                            let ssParam = [];\n                            for (let j = 0; j < pa.filter[i].length; j++) {\n                                //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                                for (let z in pa.filter[i][j]) {\n                                    for (let k = 0; k < result.length; k++) {\n                                        if (result[k].name == z) {\n                                            for (let s = 0; s < result[k].mapping.set.length; s++) {\n                                                let sParam = {};\n                                                //sParam[]\n                                                //for (let l in result[k].mapping.set[s]) {\n                                                let _key = result[k].mapping.set[s].key.replace(/\\[.*\\]/g, \"\");\n                                                let _value;\n                                                if (result[k].mapping.set[s].value.substring(0, 1) == \"@\") {\n                                                    if (result[k].mapping.set[s].value == \"@value\") {\n                                                        if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                                            // start 更改参数过滤，针对数组型字符串 ex: 1,2,3 \n                                                            let tem = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)],\n                                                                _tem = tem.split(','),\n                                                                len = _tem.length\n                                                            if(len > 1){ \n                                                                let objtemp={}, \n                                                                    __arr=[]\n                                                                for(let m=0; m<len; m++){\n                                                                    let _a={},\n                                                                        _v={\"$eq\":_tem[m]}\n                                                                    _a[_key]=_v\n                                                                    __arr.push(_a)\n                                                                }\n                                                                objtemp[\"$or\"]=__arr\n                                                                ssParam.push(objtemp);\n                                                                continue\n                                                            // end \n                                                            }else{\n                                                                _value = tem\n                                                            }\n                                                            \n                                                            //_value = {\"$eq\": global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)]};\n                                                        } else {\n                                                            _value = {\"$eq\": pa.filter[i][j][z]};\n                                                        }\n                                                    }\n                                                } else {\n                                                    _value = {\"$eq\": result[k].mapping.set[s].value};\n                                                }\n                                                sParam[_key] = _value;\n                                                ssParam.push(sParam);\n                                                //}\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n\n                            //***筛选出GDB gdb GDBX gdbx图\n                            let isGDBType=global&&global[\"FilterType\"]&&global[\"FilterType\"].length>0&&global[\"FilterType\"]==\"GDBType\"\n                            if(isGDBType){ \n                            let temp={},\n                            _arr=[],\n                            _value1= {\"$regex\": \"GDB\"},\n                            _value2= {\"$regex\": \"gdb\"},\n                            _sParam1={},\n                            _sParam2={}\n                            _sParam1[\"dc.type\"]=_value1\n                            _sParam2[\"dc.type\"]=_value2\n                            _arr.push(_sParam1)\n                            _arr.push(_sParam2) \n                            temp[\"$or\"]=_arr \n                            ssParam.push(temp)\n                            }\n                            //***\n\n                            pa.filter[i] = ssParam;\n                        } \n                return pa;\n            },\n            //替换全局变量，用于上传。返回一个替换后的备份，不修改原始参数。\n            goParam2: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if(this.metadataDefinition.length==0) this.getParam();\n                //let result = this.metadataDefinition;\n                        //pDic = result;\n                        //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                        for (let i in pa.filter) {\n                            for (let j = 0; j < pa.filter[i].length; j++) {\n                                //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                                for (let z in pa.filter[i][j]) {\n                                    if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                            pa.filter[i][j][z] = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)];\n                                         }\n                                }\n                            }\n                        }\n                return pa;\n            },\n            getData: function () {\n                this.isLoading = true;\n                //这里开始Loading。。。\n                //let param = this.goParam();\n                //这里需要深拷贝,目的是不改变原始的pram参数，这样可以递归使用PtRender。\n                // let param = ao.deepClone(this.goParam());\n                // delete param[\"viewtype\"];\n                //let _this = this;\n                this.Match();\n                //要是按异步获取数据走逻辑是没有问题，但是loading是有问题的，而且有出现文件数据获取不完整的情况。\n                //异步的情况会先显示没有成果，然后再出成果，在异步的时候这个要处理。\n                this.isLoading = false;\n            },\n            Match: function () {\n                //Match和Retrieve方法的异步会让Api调用出现调用失败，这里需要测试。\n                //PtRender的代码逻辑是完全支持异步执行的。\n               //let pmdata = this.pram.param;\n               let param = ao.deepClone(this.goParam());\n               let _this = this;\n               ajax({\n                   url: \"/SearchService/Match\",\n                   type: \"post\",\n                   contentType: \"application/json; charset=utf-8\",\n                   data: JSON.stringify(param),\n                   async:false,\n                   success: function (result) {\n                       for (let i = 0; i < result.metadatas.length; i++) {\n                         var metadata = result.metadatas[i];\n                           _this.Retrieve(metadata, metadata[\"source\"][\"url\"]);\n                       }\n                   }\n               });\n           },\n            Retrieve: function (metadata, urlstr) {\n               // this.paramlist = [];\n               let filesPa = [];\n               let _this = this;\n               ajax({\n                   url: \"/DataService/Retrieve\",\n                   type: \"get\",\n                   data: {url: urlstr},\n                   async:false,\n                   success: function (result) {\n                    //console.log(JSON.stringify(result));\n                        //组织成果和文件结构\n                        for(let i=0;i<result.length;i++){\n                            filesPa.push({ticket:result[i].ticket,format:result[i].format.toLowerCase(),name:result[i].name});\n                        }\n                        _this.paramlist.push({kmd:metadata, url:urlstr,files:filesPa,fileCount:result.length});\n                        if(_this.paramlist.length==1 && _this.paramlist[0].files.length >= 1){\n                            _this.setFile(0,0);\n                        }else{\n                            if(_this.paramlist.length==_this.infoindex+1)\n                                _this.setFile(_this.infoindex,_this.fileindex);\n                        }\n                   }\n               });\n           }\n        },\n        watch:{\n            pram: function () {\n                this.init();\n            }\n        },\n        components: renderModel\n    }\n</script>\n<style scoped>\n.text-overflow{\n    width:40%;\n/*    height:40%;\n    border:1px solid red;\n    border-top:4px solid red;\n    padding:3px;*/\n    overflow:hidden;;/* 内容超出宽度时隐藏超出部分的内容 */\n    text-overflow:ellipsis;;/* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/\n    white-space:nowrap;/* 不换行 */\n}\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/cellRender/GtPTRender.vue?55ab931c","<template>\n    <div class=\"panel panel-default\" style=\"margin-top:2px\">\n        <div class=\"panel-body\" style=\"height:100%\">\n            <template v-if=\"isready\">\n                <!--<gt_list :param=\"paramdata\" :refresh=\"refresh\"></gt_list>-->\n                <component v-bind:is=\"currentptlist\" :param=\"paramdata\" :refresh=\"refresh\"></component>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\n    import models from '../../utils/getCom'\n    import ao from \"../../utils/arrayandobjectoperation\"\n    import matchfilter from \"../../utils/matchfilter\"\n\n    export default {\n        props: {\n            id: String,\n            pram: {\n                type: Object,\n                default: {}\n            },\n            global: {\n                type: Object,\n                default: null\n            },\n            useessearch: {\n                type: Boolean,\n                default: false\n            },\n            refresh: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data: function () {\n            let ptlist= this.useessearch ?\"gt_listes\":\"gt_list\";\n            return {\n                paramdata:this.pram.param,\n                isready:false,\n                currentptlist:ptlist\n            }\n        },\n        mounted: function () {\n            this.paramdata.filter = this.goParam().filter;\n            this.isready = true;\n        },\n\n        methods: {\n            //转化参数，转换成match方法需要的kmd参数，并且替换全局变量。返回一个替换后的备份，不修改原始参数\n            goParam: function () {\n                return matchfilter.getFilter(this.pram.param.filter, this.global);\n            }\n        },\n        computed: {\n            paramdata: function () {\n                return matchfilter.getFilter(this.pram.param.filter, this.global);\n            }\n        },\n        watch: {\n            // 'pram.param.filter.$and':function(){\n            //  this.paramdata=this.goParam();\n            // }\n            'refresh': function () {\n                this.paramdata.filter = this.goParam().filter;\n            }\n        },\n        components: {\n            gt_listes: models.listcomES ,\n            gt_list: models.listcom\n        }\n    }\n\n</script>\n<style scoped>\n    .text-overflow {\n        width: 40%;\n        /*    height:40%;\n    border:1px solid red;\n    border-top:4px solid red;\n    padding:3px;*/\n        overflow: hidden;\n        ;\n        /* 内容超出宽度时隐藏超出部分的内容 */\n        text-overflow: ellipsis;\n        /* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/\n        white-space: nowrap;\n        /* 不换行 */\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/cellRender/GTPTListRender.vue?b3f83a74","<template>\n    <div id=\".searchList\">\n        <searchlist :filters=\"filterlist\" :data=\"datalist\" :highlight=\"highlight\" :showfilter=\"showfilter\" :allowpaging=\"allowpaging\"\n            :size=\"size\" :count=\"count\" :onselectpage=\"Pager\" :onitemclick=\"TitleClick\" :oncollect=\"collectClick\" :onfilterclear=\"FilterClean\"\n            :onfilterclick=\"FilterClick\">\n        </searchlist>\n    </div>\n</template>\n<script>\n    import operation from \"./../../Utils/MetadataDefOperation\";\n    import jsonPath from '../../utils/jsonpath';\n    import date from \"../../utils/dateHelper\";\n    import array from '../../utils/arrayAndObjectOperation';\n    import soUI from '../../SoUI/soUI';\n    var defaultListModel = {\n        id: \"\",\n        title: \"\",\n        imgStr: \"\",\n        format: \"\",\n        items: []\n    };\n\n    var filterdata = {\n        \"title\": \"\",\n        \"filter\": \"\",\n        \"checkbox\": false,\n        \"droplist\": []\n    };\n\n    var ftitleModel = {\n        \"s:datasourcename\": \"来源\",\n        \"s:format\": \"格式\",\n        \"format\": \"文件类型\",\n        \"ep:o:organization\": \"单位\",\n        \"b:contributor\": \"作者\"\n    };\n    export default {\n        props: {\n            param: Object,\n            refresh:Boolean\n        },\n        data: function data() {\n            return {\n                allowpaging: false,\n                showfilter: false,\n                titletemplate: \"\",\n                filterlist: [],\n                filtertitle: \"筛选条件\",\n                tip: \"\",\n                pagenum: 10,\n                size: 10,\n                count: 1,\n                strTemplate: \"\",\n                datalist: [],\n                highlight: [],\n                collections: [],\n            }\n        },\n        mounted: function () {\n            var pagefilter = { \"from\": 0, \"size\": this.size };\n            this.SetParms(pagefilter);\n            this.getData();\n        },\n        methods: {\n            //石亚茹Match接口\n            getData: function () {\n                let pmdata = this.param;\n                delete pmdata[\"viewtype\"];\n                let _this = this;\n                $.ajax({\n                    url: _this.$store.state.siteUrl + \"/Document/GetMatchData\",\n                    data: { param: JSON.stringify(pmdata) },\n                    type: \"get\",\n                    cache: false,\n                    async: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        let data = JSON.parse(result);\n                        _this.count = data.count;\n                        _this.GetCollection();\n                        _this.GetListData(data.metadatas);\n                        if (data.count > _this.size) _this.allowpaging = true;\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n            },\n\n            Pager: function (pageIndex) {\n                var startIndex = (pageIndex - 1) * this.size;\n                var pagefilter = { \"from\": startIndex, \"size\": this.size };\n                this.SetParms(pagefilter);\n                this.getData();\n            },\n\n            TitleClick: function (value) {\n                window.open(\"/Render/PTDetail?iiid=\" + value.id)\n            },\n\n            //点击收藏\n            collectClick: function (item) {\n              var success = function(){\n                item.collectImg = (item.collectId > 0 ? 'collect' : 'save');\n              }\n              this.$store.dispatch('checkCollecting', {item: item, success: success, error: null});\n            },\n\n            FilterClick: function () { },\n            FilterClean: function () { },\n\n            GetCollection() {\n                let _this = this;\n                $.ajax({\n                    url: _this.$store.state.siteUrl + \"/UserBehavior/GetAllFavoriteMessByUserId\",\n                    data: {},\n                    type: \"get\",\n                    cache: false,\n                    async: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        _this.collections = result;\n                    },\n                    error: function (result) {\n                        console.log(result);\n                    }\n                });\n            },\n\n            //检查收藏\n            checkCollection: function (item) {\n              var matches = this.collections.filter(function(e){\n                if(e.JContent == null){\n                  e.JContent = JSON.parse(e.Content);\n                }\n                return e.JContent.id === item.id;\n              });\n              if(matches.length > 0) {\n                item.collectImg = \"collect\";\n                item.collectId = matches[0].Id;\n              } else {\n                item.collectImg = \"save\";\n                item.collectId = 0;\n              }\n            },\n\n            GetListData: function (data) {\n                this.datalist = [];\n                for (var i = 0; i < data.length; i++) {\n                    let listModel = array.deepClone(defaultListModel); //调用深度克隆\n                    var item = data[i];\n                    let _this = this;\n                    let showItems = [\"SourceName\", \"CreatedDate\", \"Author\", \"Abstract\"];\n                    showItems.forEach(function (i) {\n                        let title = operation.getTitle(i);\n                        let type = operation.getDataType(i);\n                        let value = _this.getValue(item, i);\n                        if (type === \"DateString\" && value!=\"\") {\n                            value = date.formatCSTDate(value,\"yyyy-MM-dd hh:mm:ss\");\n                        }\n                        listModel.items.push({ \"title\": title, \"value\": value });\n                    })\n                    listModel.id = this.getValue(item, \"IIId\");\n                    listModel.title = this.getValue(item, \"FormalTitle\");\n                    //检查是否收藏\n                    this.checkCollection(listModel);\n                    listModel.format = this.getValue(item, \"SourceFormat\");\n                    if (listModel.format != \"\")\n                        listModel.format = listModel.format.toLocaleLowerCase();\n                    listModel.imgStr = this.getValue(item, \"Thumbnail\");\n                    if (listModel.imgStr != \"\" && listModel.imgStr.indexOf('data:image') != 0)\n                        listModel.imgStr = \"data:image/gif;base64,\" + listModel.imgStr;\n\n                    this.datalist.push(listModel);\n                }\n            },\n            getValue: function (document, name) {\n                let path = \"$.\" + operation.getJsonPath(name);\n                let value = jsonPath(document, path);\n                return value[0] || \"\";\n            },\n\n            GetFilterData: function (data) {\n                this.filterlist = [];\n                this.filterlist.push(filterdata);\n                for (var title in ftitleModel) {\n                    if (data[title]) {\n                        let filterModel = [];\n                        filterModel.droplist = [];\n                        filterModel.checkbox = true;\n                        filterModel.filter = title;\n                        filterModel.title = ftitleModel[title];\n                        for (var name in data[title]) {\n                            filterModel.droplist.push({ text: name, value: \"\", count: \"\" });\n                        }\n                        this.filterlist.push(filterModel);\n                    }\n                }\n            },\n            SetParms: function (pagefilter) {\n                this.param.pager = pagefilter;\n                this.highlight = this.$store.state.SearchService.highlightWords;\n            }\n        },\n        watch:{\n            'refresh':function(){\n                var pagefilter = { \"from\": 0, \"size\": this.size };\n                this.SetParms(pagefilter);\n                this.getData();\n            }\n        },\n        components: {\n            searchlist: soUI.searchlist\n        }\n    };\n</script>\n\n<style scoped>\n    .searchList {\n        font-family: '微软雅黑', arial, verdana, sans-serif;\n        font-size: 14px;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/PTList/ptlist.vue?31554bfa","<template>\n    <div id=\".searchList\">\n        <searchlist :filters=\"filterlist\" :data=\"datalist\" :highlight=\"highlight\" :showfilter=\"showfilter\" :allowpaging=\"allowpaging\"\n            :size=\"size\" :count=\"count\" :onselectpage=\"Pager\" :onitemclick=\"TitleClick\" :oncollect=\"collectClick\" :onfilterclear=\"FilterClean\"\n            :onfilterclick=\"FilterClick\">\n            </searchlist>\n    </div>\n</template>\n<script>\n    import ajax from '../../utils/pollAjax'\n    import operation from \"./../../Utils/MetadataDefOperation\";\n    import jsonPath from '../../utils/jsonpath';\n    import date from \"../../utils/dateHelper\";\n    import array from '../../utils/arrayAndObjectOperation';\n    import soUI from '../../SoUI/soUI';\n    var defaultListModel = {\n        id: \"\",\n        title: \"\",\n        imgStr: \"\",\n        format: \"\",\n        items: []\n    };\n\n    var filterdata = {\n        \"title\": \"时间\",\n        \"filter\": \"CreatedDate\",\n        \"checkbox\": false,\n        \"droplist\": [{ text: \"最近一天\", value: date.getYesterday(new Date()), count: 0 },\n        { text: \"最近一月\", value: date.getLastMonth(new Date()), count: 0 },\n        { text: \"最近一年\", value: date.getLastYear(new Date()), count: 0 }]\n    };\n    let filterItems = [\"SourceName\", \"SourceFormat\", \"Author\"];\n\n    export default {\n        props: {\n            param: Object,\n            refresh: Boolean\n        },\n        data: function data() {\n            return {\n                allowpaging: false,\n                showfilter: true,\n                titletemplate: \"\",\n                filterlist: [],\n                filtertitle: \"筛选条件\",\n                tip: \"\",\n                pagenum: 10,\n                size: 10,\n                count: 1,\n                strTemplate: \"\",\n                datalist: [],\n                collections: [],\n                research: false,\n                currentParam: {}\n            }\n        },\n        computed: {\n            highlight: function () {\n                if (typeof (this.param.sentence) != \"undefined\")\n                    return this.param.sentence.split(\"\");\n                else return [];\n            }\n        },\n        mounted: function () {\n            var pagefilter = { \"from\": 0, \"size\": this.size };\n            let gfield = [];\n            for (let item of filterItems) {\n                gfield.push(operation.removeSubscript(operation.getJsonPath(item)));\n            }\n            var grouprule = {\n                \"Top\": -1,\n                \"GFields\": gfield\n            }\n            this.param.grouprule = grouprule;\n            this.SetParms(pagefilter);\n            this.getData();\n        },\n        methods: {\n            getData: function () {\n                let pmdata = this.currentParam;\n                delete pmdata[\"viewtype\"];\n                let _this = this;\n                let defaultUrl = \"/SearchService/Search\";\n                ajax({\n                    url: defaultUrl,\n                    data: JSON.stringify(pmdata),\n                    contentType: \"application/json\",\n                    type: \"post\",\n                    cache: false,\n                    async: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        // let data = JSON.parse(result);\n                        _this.count = result.count;\n                        _this.GetCollection();\n                        _this.GetListData(result.metadatas);\n                        if (!_this.research) {\n                            _this.GetFilterData(result.groups);\n                        }\n                        if (result.count > _this.size) _this.allowpaging = true;\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n            },\n\n            Pager: function (pageIndex) {\n                var startIndex = (pageIndex - 1) * this.size;\n                var pagefilter = { \"from\": startIndex, \"size\": this.size };\n                this.SetParms(pagefilter);\n                this.research = true;\n                this.getData();\n            },\n\n            TitleClick: function (value) {\n                window.open(\"/Render/PTDetail?iiid=\" + value.id)\n            },\n\n            //点击收藏\n            collectClick: function (item) {\n                var success = function () {\n                    item.collectImg = (item.collectId > 0 ? 'collect' : 'save');\n                }\n                this.$store.dispatch('checkCollecting', { item: item, success: success, error: null });\n            },\n            FilterClick: function (checkedfilters) {\n                let filters = []\n                for (let j in checkedfilters) {\n                    let checkedfilter = checkedfilters[j];\n                    let field = checkedfilter.filter;\n                    let filter = [];\n                    for (let i in checkedfilter.data) {\n                        let value = checkedfilter.data[i].value;\n                        let filterItems = operation.buildFilter(field, value);\n                        let filterAnd =this.getFilter(filterItems, \"$and\");\n                        filter.push(filterAnd);\n                    }\n                    //一个dropdown过滤器 filter参数\n                    if (filter.length > 0) {\n                        let filterOr = this.getFilter(filter, \"$or\");// filter.length > 1 ? { \"$or\": filter } : filter[0];\n                        filters.push(filterOr);\n                    }\n                }\n                //多个dropdown过滤器 filter参数\n                let dropdownFilter = this.getFilter(filters, \"$and\");// filters.length > 1 ? { \"$and\": filters } : filters[0];\n                //搜索 filter参数\n                let searchFilter = this.param.filter;\n                //合并过滤条件\n                let filterCombine = [];\n                filterCombine.push(dropdownFilter);\n                if (searchFilter != null && JSON.stringify(searchFilter) != \"{}\") {\n                    filterCombine.push(searchFilter);\n                }\n                this.currentParam.filter = this.getFilter(filterCombine, \"$and\");// { \"$and\": filterCombine };\n\n                console.log(JSON.stringify(this.currentParam.filter));\n                this.research = true;\n                this.getData();\n            },\n            getFilter: function (filters, op) {\n                let resultFilter = {};\n                if (filters.length > 1) {\n                    resultFilter[op] = filters\n                }\n                else if (filters.length == 1) {\n                    resultFilter = filters[0];\n                }\n                return resultFilter;\n            },\n            FilterClean: function () {\n                this.research = true;\n                this.currentParam.filter = array.deepClone(this.param.filter);\n                this.getData();\n            },\n\n            GetCollection() {\n                let _this = this;\n                $.ajax({\n                    url: _this.$store.state.siteUrl + \"/UserBehavior/GetAllFavoriteMessByUserId\",\n                    data: {},\n                    type: \"get\",\n                    cache: false,\n                    async: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        _this.collections = result;\n                    },\n                    error: function (result) {\n                        console.log(result);\n                    }\n                });\n            },\n\n            //检查收藏\n            checkCollection: function (item) {\n                var matches = this.collections.filter(function (e) {\n                    if (e.JContent == null) {\n                        e.JContent = JSON.parse(e.Content);\n                    }\n                    return e.JContent.id === item.id;\n                });\n                if (matches.length > 0) {\n                    item.collectImg = \"collect\";\n                    item.collectId = matches[0].Id;\n                } else {\n                    item.collectImg = \"save\";\n                    item.collectId = 0;\n                }\n            },\n\n            GetListData: function (data) {\n                this.datalist = [];\n                for (var i = 0; i < data.length; i++) {\n                    let listModel = array.deepClone(defaultListModel); //调用深度克隆\n                    var item = data[i];\n                    let _this = this;\n                    let showItems = [\"SourceName\", \"CreatedDate\", \"Author\", \"Abstract\"];\n                    showItems.forEach(function (i) {\n                        let title = operation.getTitle(i);\n                        let type = operation.getDataType(i);\n                        let value = _this.getValue(item, i);\n                        if (type === \"DateString\" && value != \"\") {\n                            value = date.formatCSTDate(value, \"yyyy-MM-dd hh:mm:ss\");\n                        }\n                        listModel.items.push({ \"title\": title, \"value\": value });\n                    })\n                    listModel.id = this.getValue(item, \"IIId\");\n                    listModel.title = this.getValue(item, \"FormalTitle\");\n                    //检查是否收藏\n                    this.checkCollection(listModel);\n                    listModel.format = this.getValue(item, \"SourceFormat\");\n                    if (listModel.format != \"\")\n                        listModel.format = listModel.format.toLocaleLowerCase();\n                    listModel.imgStr = this.getValue(item, \"Thumbnail\");\n                    if (listModel.imgStr != \"\" && listModel.imgStr.indexOf('data:image') != 0)\n                        listModel.imgStr = \"data:image/gif;base64,\" + listModel.imgStr;\n\n                    this.datalist.push(listModel);\n                }\n            },\n            getValue: function (document, name) {\n                let path = \"$.\" + operation.getJsonPath(name);\n                let value = jsonPath(document, path);\n                return value[0] || \"\";\n            },\n\n            GetFilterData: function (data) {\n                this.filterlist = [];\n                this.filterlist.push(filterdata);\n                for (var item of filterItems) {\n                    let title = operation.removeSubscript(operation.getJsonPath(item));//获得实际的字段名称\n                    if (data[title]) {\n                        let filterModel = [];\n                        filterModel.droplist = [];\n                        filterModel.checkbox = true;\n                        filterModel.filter = item;\n                        filterModel.title = operation.getTitle(item);\n                        for (var name in data[title]) {\n                            filterModel.droplist.push({ text: name, value: name, count: data[title][name] });\n                        }\n                        this.filterlist.push(filterModel);\n                    }\n                }\n            },\n            SetParms: function (pagefilter) {\n                this.param.pager = pagefilter;\n                this.currentParam = array.deepClone(this.param);\n            }\n        },\n        watch: {\n            'refresh': function () {\n                var pagefilter = { \"from\": 0, \"size\": this.size };\n                this.SetParms(pagefilter);\n                this.getData();\n            }\n        },\n        components: {\n            searchlist: soUI.searchlist\n        }\n    };\n\n</script>\n\n<style scoped>\n    .searchList {\n        font-family: '微软雅黑', arial, verdana, sans-serif;\n        font-size: 14px;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/PTList/ptlist2.0.vue?4d95c6f6","<template>\n    <div>\n        <div style=\"margin:20px\">\n<div class=\"panel panel-default\" :style=\"style\">\n    <div class=\"panel-body\" style=\"height:auto\">\n        <div v-if=\"isForm\" style=\"margin-bottom:5px\">\n<template v-for=\"item in formModel\">\n    <soform :data=\"item\" :style=\"style\" ref=\"soform\"></soform>\n</template>\n</div>\n<!--action=\"http://192.168.1.152:8077/API/SubmissionService/Upload\" 田泽玉-->\n<!--action=\"http://192.168.1.152:8089/API/Submission/Upload\" 汪敏-->\n<el-upload :action=\"uploadapi\" type=\"drag\" :multiple=\"true\" :on-preview=\"handlePreview\" :on-remove=\"handleRemove\" :on-success=\"handleSuccess\"\n    :on-error=\"handleError\" :default-file-list=\"fileList\">\n    <i class=\"el-icon-upload\"></i>\n    <div class=\"el-dragger__text\">点击上传</em></div>\n    <div class=\"el-upload__tip\" slot=\"tip\"></div>\n</el-upload>\n<div class=\"submitList\">\n    <button id=\"btnSubmit\" class=\"btn btn-info\" @click=\"Submit\">提交</button>\n    <button id=\"btnUpdate\" class=\"btn btn-warning disabled\" @click=\"Update\">修改</button>\n    <button id=\"btnDelete\" class=\"btn btn-danger disabled\" @click=\"Delete\">删除</button>\n</div>\n</div>\n</div>\n</div>\n</div>\n</template>\n<script>\n    import soUI from '../../SoUI/soUI';\n    import {Upload} from 'element-ui';\n    export default {\n        props: {\n            uploadapi: String,\n            metadataapi: String,\n            style: String,\n            param: Object\n        },\n        mounted: function () {\n            this.GetDataMeta();\n        },\n        data: function () {\n            return {\n                isForm: false,\n                formModel: [\n                    {\n                        \"groupname\": \"\",\n                        \"fields\": [\n                            {}\n                        ]\n                    }\n                ],\n                fileList: [],\n                subnum: 1,\n                fileInfo: {\n                    action: \"\",\n                    naturekey: \"\",\n                    fileIDs: [],\n                    formList: []\n                }\n            }\n        },\n        methods: {\n            handleSuccess(result, file, fileList) {\n                this.fileInfo.fileIDs = [];\n                if (fileList.length > 0) {\n                    for (let i in fileList) {\n                        //let data = JSON.parse(fileList[i][\"response\"]);\n                        let data = fileList[i][\"response\"]; //7.31\n                        this.fileInfo.fileIDs.push(data.fileID);\n                    }\n                }\n                gtUI.message({ message: \"上传成功！\", type: 'success' });\n            },\n            handleError(result) {\n                gtUI.message({ message: \"上传失败！\", type: 'warning' });\n            },\n            handleRemove(file, fileList) {\n                this.fileInfo.fileIDs = [];\n                if (fileList.length > 0) {\n                    for (let i in fileList) {\n                        //let data = JSON.parse(fileList[i][\"response\"]);\n                        let data = fileList[i][\"response\"]; //7.31\n                        this.fileInfo.fileIDs.push(data.fileID);\n                    }\n                }\n            },\n\n            //            Upload: function () {\n            //                alert(\"确定上传吗？\")\n            //                var _this=this;\n            //                var data = new FormData();\n            //                var files = $(\"#fileUpload\").get(0).files;\n            //                if (files.length > 0) {\n            //                    for (var i = 0; i < files.length; i++) {\n            //                        data.append(i.toString(), files[i]);\n            //                    }\n            //                }\n            //                else{\n            //                    alert(\"请选择文件\")\n            //                }\n            //                $.ajax({\n            //                    type: \"post\",\n            //                    url: \"http://192.168.1.152:8077/API/SubmissionService/Upload\",\n            //                    contentType: false,\n            //                    cache: false,\n            //                    currentType: false,\n            //                    processData: false,\n            //                    data: data,\n            //                    success: function (result) {\n            //                        alert(1);\n            //                       var data=  JSON.parse(result);\n            //                         _this.param.fileIDs.push(data.fileID);\n            //                       // _this.AddHtml();\n            //                    }\n            //                });\n            //            },\n            Submit: function () {\n                if (this.fileInfo.naturekey != \"\") return;\n                var r = confirm(\"确定提交吗？\")\n                if (r == true)\n                    this.PostData(\"submit\");\n                else\n                    return;\n            },\n\n            Delete: function () {\n                if (this.fileInfo.naturekey == \"\") return;\n                var r = confirm(\"确定删除吗？\")\n                if (r == true)\n                    this.PostData(\"delete\");\n                else\n                    return;\n                // _this.PostData(\"delete\");\n            },\n\n            Update: function () {\n                if (this.fileInfo.naturekey == \"\") return;\n                var r = confirm(\"确定更新吗？\")\n                if (r == true)\n                    this.PostData(\"update\");\n                else\n                    return;\n                //_this.PostData(\"update\");\n            },\n\n            GetDataMeta: function () { \n                let _this = this;\n                $.ajax({\n                    url: _this.metadataapi, //\"/API/SearchService/GetMetadataDefinition\",\n                    type: \"post\",\n                    data: {},\n                    success: function (result) { \n                        let groupnames = [];\n                        let arrays = [];\n                        let paramData = [];\n                        let items = [];\n                        if (_this.param)\n                            paramData = _this.param[\"filter\"][\"$and\"];\n                        //1：替换传过来的参数，放在value属性里面\n                        for (let i = 0; i < result.length; i++) {\n                            if (result[i][\"innertag\"] == false) {\n                                for (let j = 0; j < paramData.length; j++) {\n                                    for (let pname in paramData[j]) {\n                                        if (result[i][\"name\"] && pname == result[i][\"name\"]) {\n                                            result[i][\"uitype\"] = \"label\";\n                                            result[i].value = paramData[j][pname];\n                                        }\n                                    }\n                                }\n                                let temp=result[i][\"groupname\"]\n                                if(groupnames.indexOf(temp)<0){\n                                    groupnames.push(temp) //去重复 得到分组信息，形成数组\n                                }\n\n                                arrays.push(temp)\n                                items.push(result[i]);\n                            }\n                        }\n\n                        //2：得到分组信息，形成数组\n                        //groupnames = Array.from(new Set(arrays));  //去重复\n                        \n                        items = _this.Sort(items, \"itemorder\");  //排序元数据items\n                        groupnames = _this.OrderGroup(items, groupnames); //排列group\n                        _this.formModel = [];\n                        for (let i = 0; i < groupnames.length; i++) { \n                            _this.formModel.push({\n                                \"groupname\": groupnames[i][\"groupname\"],\n                                \"order\": groupnames[i][\"order\"], \"fields\": []\n                            });\n                        }\n\n                        //3:将元数据装进不同分组的数组里面\n                        for (let i = 0; i < items.length; i++) {\n                            for (let j = 0; j < _this.formModel.length; j++) {\n                                if (items[i][\"groupname\"] == _this.formModel[j][\"groupname\"]) {\n                                    _this.formModel[j].fields.push(items[i]);\n                                }\n                            }\n                        }\n                        _this.isForm = true;\n                    },\n                    error: function (result) {\n                        console.log(result);\n                    }\n                })\n            },\n\n            //冒泡排序 得到分组后的group数组\n            OrderGroup: function (items, groups) {\n                let order_group = [];\n                for (let i = 0; i < groups.length; i++) {\n                    for (let j = 0; j < items.length; j++) {\n                        if (groups[i] == items[j][\"groupname\"]) {\n                            order_group.push({ \"groupname\": groups[i], \"order\": items[j][\"grouporder\"] });\n                            break;\n                        }\n                    }\n                }\n                return this.Sort(order_group, \"order\");\n            },\n\n            Sort: function (array, orderStr) {\n                var temp = {};\n                for (var i = 0; i < array.length; i++) {\n                    for (var j = 0; j < array.length - i; j++) {\n                        if (array[j] && array[j + 1]) {\n                            if (array[j][orderStr] > array[j + 1][orderStr]) {\n                                temp = array[j];\n                                array[j] = array[j + 1];\n                                array[j + 1] = temp;\n                            }\n                        }\n                    }\n                }\n                return array\n            },\n\n            PostData: function (value) {\n                var _this = this;\n                this.fileInfo.action = value;\n                var forms = _this.$refs.soform;\n                var formData;\n                _this.fileInfo.formList = [];\n                for (let i = 0; i < forms.length; i++) {\n                    formData = forms[i].getFormData();\n                    for (let j = 0; j < formData.length; j++) {\n                        if (formData[j].isok == false) {\n                            gtUI.message({ message: '[' + formData[j].title + ']有错误！', type: 'warning' });\n                            return;\n                        }\n                    }\n                    _this.fileInfo.formList.push(forms[i].getFormData());\n                }\n                if(_this.fileInfo.fileIDs == null || _this.fileInfo.fileIDs.length < 1){\n                        gtUI.message({ message: '请至少上传一个文件！', type: 'warning' });\n                        return;\n                }\n                $.ajax({\n                    type: \"post\",\n                    url: \"/Submit/Submited\",\n                    data: { param: JSON.stringify(_this.fileInfo) },\n                    success: function (result) {\n                        let resultObj = JSON.parse(result);\n                        _this.fileInfo.naturekey = resultObj.naturekey;\n                        if (_this.fileInfo.action == \"submit\") {\n                            gtUI.message({ message: \"提交成功！\", type: 'success' });\n                            $(\"#btnSubmit\").addClass(\"disabled\");\n                            $(\"#btnUpdate\").removeClass(\"disabled\");\n                            $(\"#btnDelete\").removeClass(\"disabled\");\n                        } else if (_this.fileInfo.action == \"update\") {\n                            gtUI.message({ message: \"更新成功！\", type: 'success' });\n                        } else if (_this.fileInfo.action == \"delete\") {\n                            gtUI.message({ message: \"删除成功！\", type: 'success' });\n                            _this.fileInfo.naturekey = \"\";\n                            $(\"#btnSubmit\").removeClass(\"disabled\");\n                            $(\"#btnUpdate\").addClass(\"disabled\");\n                            $(\"#btnDelete\").addClass(\"disabled\");\n                        }\n                    },\n                    error: function (result) {\n                        if (_this.fileInfo.action == \"submit\") {\n                            gtUI.message({ message: \"提交失败！\", type: 'warning' });\n                        } else if (_this.fileInfo.action == \"update\") {\n                            gtUI.message({ message: \"更新失败！\", type: 'warning' });\n                        } else if (_this.fileInfo.action == \"delete\") {\n                            gtUI.message({ message: \"删除失败！\", type: 'warning' });\n                        }\n                    }\n                });\n            }\n        },\n\n        components: {\n            \"soform\": soUI.soform,\n            \"el-upload\": Upload,\n        },\n    }\n</script>\n<style scoped>\n    #uploadList {\n        margin: 10px;\n    }\n\n    .subadd {\n        margin-left: 15px;\n    }\n\n    /*这个属性要在实例页面设置 写在这里并没有什么卵用*/\n    input[type=file] {\n        display: none;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/ptsubmit/ptsubmit.vue?dbadf136","<template>\n    <div>\n        <div class=\"panel panel-default\" style=\"margin-top:2px\">\n            <div class=\"panel-heading\" v-if=\"istool\">\n                <h5 style=\"position:relative;\">\n                    &nbsp; \n                    <!-- 标题 -->\n                    <div style=\"float:left;\" class='text-overflow' :title=\"file.name || '未命名'\">\n                        {{(pram.title?(pram.title +\" - \"):\"\")+(file.name || \"未命名\")}} \n                    </div>\n                    <!-- 摘要 -->\n                    <div style=\"float:left;\" :title=\"abstract\" class='text-overflow2'>\n                        {{abstract}}\n                    </div>\n                    <!--  文件切换 -->\n                    <span style=\"position:absolute;left:44%;\">\n                            <!-- 左切 -->\n                        <a style=\"padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-if=\"fileIndex>0\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\" @click=\"left\"></a>\n                        <span disabled = 'true' style=\"color: #e8e8e8; padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n                        <!-- 切换标识 -->\n                            <span style=\"font-size: 12px;\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\">{{fileIndex+1}} / {{!paramlist[infoIndex]?1:paramlist[infoIndex].files.length}}</span>\n                        <!-- 右切 -->\n                        <a style=\"padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-if=\"paramlist[infoIndex] && (fileIndex < paramlist[infoIndex].files.length-1)\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"  @click=\"right\"></a>\n                        <span disabled = 'true' style=\"color: #e8e8e8;  padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n                    </span>\n                    <!-- 工具按钮 -->\n                    <span style=\"float:right;font-size: 16px;\">\n                        <!-- 评论 -->\n                        <template v-if=\"isremarks\">\n                            <a style=\"cursor:pointer\" class=\"glyphicon glyphicon-comment\" title=\"评论\" v-if=\"file.fileUrl != null\" target=\"_blank\" @click=\"gotoFunc('/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket))\"></a>\n                            <!-- <a class=\"glyphicon glyphicon-comment\" title=\"评论\" target=\"_blank\" :href=\"'/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket)\"></a> -->\n                            <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-comment\" v-else></span>\n                        </template>\n                        <!-- 下载 -->\n                        <template v-if=\"isdown\">\n                            <a class=\"glyphicon glyphicon-save\" title=\"下载\" target=\"_blank\" v-if=\"file.fileUrl != null\" :href=\"file.fileUrl\"></a>\n                            <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-save\" v-else></span>\n                        </template>\n                        <!-- 预览 -->\n                        <template v-if=\"isview\">\n                            <a class=\"el-icon-view\" title=\"预览\" target=\"_blank\" v-if=\"file.url != null\" :href=\"'/Render/PtUrl?param='+encodeURIComponent(JSON.stringify(pram))+'&infoIndex='+infoIndex+'&fileIndex='+fileIndex+'&globle='+encodeURIComponent(JSON.stringify(global))\"></a>\n                            <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"el-icon-view\" v-else></span>\n                        </template>\n                        <!-- 提交 -->\n                        <template v-if=\"issubmit\">\n                            <a class=\"el-icon-upload\" style=\"cursor:pointer\" title=\"提交\" target=\"_blank\" @click=\"gotoFunc('/Render/Submission?param='+JSON.stringify(goParam2(pram)))\"></a>\n                            <!-- <a class=\"el-icon-upload\" target=\"_blank\" :href=\"'/Render/Submission?param='+JSON.stringify(pram)\"></a> -->\n                        </template>\n                    </span>\n                </h5> \n            </div>\n            <div class=\"panel-body\" style=\"height:100%;width:100%;\"> \n            <div v-if=\"isLoading\" :style=\"stylestr\">\n                <span class=\"el-icon-loading\" style=\"font-size: 45px;position:absolute;left:45%;top:45%;\"></span>\n            </div>\n            <!-- 内容 -->\n            <div v-else>\n                <div v-if=\"paramlist ==null || paramlist.length == 0\">\n                    <div>\n                        <h4>没有成果</h4>\n                    </div>\n                </div>\n                <div v-else>\n                    <component :is=\"mo\" :param=\"file\" keep-alive></component>\n                </div>\n            </div>\n            </div>\n            <div v-if=\"isfoottool\">\n                <!-- 成果切换 -->\n                <div v-if=\"paramlist.length > 1\">\n                    <el-pagination\n                    small\n                    layout=\"prev, pager, next\"\n                    :page-size=\"1\"\n                    :total=\"paramlist.length\"\n                    :current-page=\"infoIndex+1\"\n                    :page-count=\"paramlist.length\"\n                    @current-change=\"infoClick\">\n                    </el-pagination>\n                </div>\n            </div> \n            <div :id=\"'iframe'+nodeId\">\n                <iframe style=\"position:absolute;left:0px;top:0px;\" src=\"about:blank\" width=\"100%\" height=\"100%\" scrolling=\"no\" frameborder=\"0\"></iframe>\n            </div>\n            <div :id=\"'ptrendermodel'+nodeId\" class=\"modal fade\" aria-hidden=\"true\" data-backdrop=\"static\">\n            <div class=\"modal-dialog\" style=\"width:70%;height:600px;\">\n                <div class=\"modal-content\">\n                <div class=\"modal-header\" style=\"background-color:#f8f8f8\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" @click=\"reloadPresentView()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                    <h5 class=\"modal-title\">{{pram.title}}</h5>\n                </div>\n                <div class=\"modal-body\">\n                    <div class=\"embed-responsive embed-responsive-16by9\">\n                        <iframe class=\"embed-responsive-item\" :src=\"gotoUrl\"></iframe>\n                    </div>\n                </div> \n                </div><!-- /.modal-content -->\n            </div><!-- /.modal-dialog -->\n            </div><!-- /.modal --> \n        </div>\n    </div>\n</template>\n\n<script>\n    //import  models from '../../utils/getCom'\n    import ajax from '../../utils/pollAjax'\n    import ao from \"../../utils/arrayandobjectoperation\"\n    import bo from \"../../utils/baseoperation\"\n    import MetadataDefOperation from \"./../../Utils/MetadataDefOperation\";\n    import {Pagination} from 'element-ui'\n    import model from \"../../utils/loadmodel\"\n    var renderModel = {\n        \"_rich\": require('../formatcom/gtrich.vue'),\n        \"_img\": require('../formatcom/gtimg.vue'),\n        \"_gdb\": require('../formatcom/gtgdb.vue'),\n        \"_chart\": require('../formatCom/gtpiechart.vue'),\n        \"_dataset\": require('../formatCom/gtdataset.vue'),\n        \"_noresults\": require('../formatCom/gtNoResults.vue')\n    };\n\n    //let loadingInstance;\n    export default {\n        props: {\n            pram: {\n                type: Object,\n                default: {}\n            },\n            global: {\n                type: Object,\n                default: null\n            },\n            heights: {\n                type: Number,\n                default: 0\n            },\n            infoindex: {\n                type: Number,\n                default: 0\n            },\n            fileindex: {\n                type: Number,\n                default: 0\n            },\n            istool: {\n                type: Boolean,\n                default: true\n            },\n            isremarks: {\n                type: Boolean,\n                default: true\n            },\n            isdown: {\n                type: Boolean,\n                default: true\n            },\n            isview: {\n                type: Boolean,\n                default: true\n            },\n            issubmit: {\n                type: Boolean,\n                default: true\n            },\n            isfoottool: {\n                type: Boolean,\n                default: true\n            },\n            jsondetail:{\n                type:Object,\n                default:null\n            }\n        },\n        data: function () {\n            return {\n                paramlist: [],\n                file:{},\n                infoIndex:this.infoindex,//0,\n                fileIndex:this.fileindex,//0,\n                metadataDefinition:[],\n                isLoading:false,\n                gotoUrl:\"\",\n                //isGotoModel:false,\n                mo : null,\n                stylestr:{\n                    height: this.heights == 0?\"100%\":this.heights+'px'\n                },\n                nodeId:bo.getGuid(),\n                abstract:\"\"\n             }\n        },\n        created:function(){\n            this.init();\n        },\n        mounted: function () {\n            //不能放到init中，因为时机不同。\n            let _this = this;\n            $(\"#iframe\"+this.nodeId).hide();\n            $(\"#ptrendermodel\"+this.nodeId).on('hide.bs.modal', function (e) {\n              $(\"#iframe\"+_this.nodeId).hide();\n            })\n        }, \n        methods:{\n            getAbstract(){ \n                if (this.jsondetail && this.jsondetail.basicInfo) { \n                    let info = this.jsondetail.basicInfo\n                    for (let i=0; i<info.length; i++) {\n                        let key=info[i].key\n                        if (key==\"摘要\") {\n                            this.abstract = info[i].value\n                            break\n                        }\n                    }  \n                } \n            },\n            gotoFunc:function(url){\n                this.gotoUrl = url;\n                //this.isGotoModel = true;\n                $('#ptrendermodel'+this.nodeId).modal();\n                $(\"#iframe\"+this.nodeId).show();\n            },\n            reloadPresentView:function(){\n                // alert(\"点击了取消按钮！\");\n                this.init();\n            },\n            infoClick:function(index){\n                this.infoIndex = index-1;\n                this.fileIndex = 0;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            left:function(){\n                if(this.fileIndex == 0){\n                    gtUI.message({message: \"前面没有了！\",type: 'info'});\n                    return;\n                }\n                this.fileIndex--;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            right:function(){\n                if(this.fileIndex == this.paramlist[this.infoIndex].files.length-1){\n                    gtUI.message({message: \"后面没有了！\",type: 'info'});\n                    return;\n                }\n                this.fileIndex++;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            setFile:function(infoIndex,fileIndex){\n                this.file={};\n                this.mo = this.$options.components[\"_\"+model.getConfig(this.paramlist[infoIndex].files[fileIndex].format,\"ptrender\")];\n                let url = \"?id=\"+ MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"IIId\") +\n                    \"&title=\"+ escape(MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"FormalTitle\")) +\n                    \"&url=\"+ escape(this.paramlist[infoIndex].url)+\n                    \"&ticket=\"+escape(this.paramlist[infoIndex].files[fileIndex].ticket)+\n                    \"&format=\"+ escape(this.paramlist[infoIndex].files[fileIndex].format);\n                this.file={\n                    url: \"/FileInfo/GetStream\"+url,\n                    format:this.paramlist[infoIndex].files[fileIndex].format,\n                    heights: this.heights,\n                    fileUrl: \"/FileInfo/DownLoad\"+url+\"&name=\"+escape(this.paramlist[infoIndex].files[fileIndex].name),\n                    name:this.paramlist[infoIndex].files[fileIndex].name,\n                    ticket:this.paramlist[infoIndex].files[fileIndex].ticket\n                };\n            },\n            //初始方法， param数据改变时或者第一次进来是调用\n            init:function () {\n                this.paramlist = [];\n                this.infoIndex=0;\n                this.fileIndex=0;\n                this.file={};//不能省略\n                this.mo = null;\n                this.getData();\n                this.getAbstract();\n                // if(this.file && this.file.format)\n                //     //\"_\"是为了动态加载的时候和原生组件区分。\n                    // this.mo = this.$options.components[\"_\"+model.getConfig(this.file.format,\"ptrender\")];\n                    // this.$options.components[\"render\"] = renderModel[model.getConfig(this.file.format,\"ptrender\")];\n            },\n            getParam: function(){\n                if(!this.metadataDefinition || this.metadataDefinition.length<1){\n                  MetadataDefOperation.init();\n                  this.metadataDefinition = MetadataDefOperation.metadataDefinition;\n                }\n            },\n            //转化参数，转换成match方法需要的kmd参数，并且替换全局变量。返回一个替换后的备份，不修改原始参数\n            goParam: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if(this.metadataDefinition.length==0)\n                this.getParam();\n                let result = this.metadataDefinition;\n                        //pDic = result;\n                        //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                        for (let i in pa.filter) {\n                            let ssParam = [];\n                            for (let j = 0; j < pa.filter[i].length; j++) {\n                                //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                                for (let z in pa.filter[i][j]) {\n                                    for (let k = 0; k < result.length; k++) {\n                                        if (result[k].name == z) {\n                                            for (let s = 0; s < result[k].mapping.set.length; s++) {\n                                                let sParam = {};\n                                                //sParam[]\n                                                //for (let l in result[k].mapping.set[s]) {\n                                                let _key = result[k].mapping.set[s].key.replace(/\\[.*\\]/g, \"\");\n                                                let _value;\n                                                if (result[k].mapping.set[s].value.substring(0, 1) == \"@\") {\n                                                    if (result[k].mapping.set[s].value == \"@value\") {\n                                                        if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                                            // start 更改参数过滤，针对数组型字符串 ex: 1,2,3 \n                                                            let tem = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)],\n                                                                _tem = tem.split(','),\n                                                                len = _tem.length\n                                                            if(len > 1){ \n                                                                let objtemp={}, \n                                                                    __arr=[]\n                                                                for(let m=0; m<len; m++){\n                                                                    let _a={},\n                                                                        _v={\"$eq\":_tem[m]}\n                                                                    _a[_key]=_v\n                                                                    __arr.push(_a)\n                                                                }\n                                                                objtemp[\"$or\"]=__arr\n                                                                ssParam.push(objtemp);\n                                                                continue\n                                                            // end \n                                                            }else{\n                                                                _value = tem\n                                                            }\n                                                            \n                                                            //_value = {\"$eq\": global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)]};\n                                                        } else {\n                                                            _value = {\"$eq\": pa.filter[i][j][z]};\n                                                        }\n                                                    }\n                                                } else {\n                                                    _value = {\"$eq\": result[k].mapping.set[s].value};\n                                                }\n                                                sParam[_key] = _value;\n                                                ssParam.push(sParam);\n                                                //}\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n\n                            //***筛选出GDB gdb GDBX gdbx图\n                            let isGDBType=global&&global[\"FilterType\"]&&global[\"FilterType\"].length>0&&global[\"FilterType\"]==\"GDBType\"\n                            if(isGDBType){ \n                            let temp={},\n                            _arr=[],\n                            _value1= {\"$regex\": \"GDB\"},\n                            _value2= {\"$regex\": \"gdb\"},\n                            _sParam1={},\n                            _sParam2={}\n                            _sParam1[\"dc.type\"]=_value1\n                            _sParam2[\"dc.type\"]=_value2\n                            _arr.push(_sParam1)\n                            _arr.push(_sParam2) \n                            temp[\"$or\"]=_arr \n                            ssParam.push(temp)\n                            }\n                            //***\n\n                            pa.filter[i] = ssParam;\n                        } \n                return pa;\n            },\n            //替换全局变量，用于上传。返回一个替换后的备份，不修改原始参数。\n            goParam2: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if(this.metadataDefinition.length==0) this.getParam();\n                //let result = this.metadataDefinition;\n                        //pDic = result;\n                        //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                        for (let i in pa.filter) {\n                            for (let j = 0; j < pa.filter[i].length; j++) {\n                                //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                                for (let z in pa.filter[i][j]) {\n                                    if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                            pa.filter[i][j][z] = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)];\n                                         }\n                                }\n                            }\n                        }\n                return pa;\n            },\n            getData: function () {\n                this.isLoading = true;\n                //这里开始Loading。。。\n                //let param = this.goParam();\n                //这里需要深拷贝,目的是不改变原始的pram参数，这样可以递归使用PtRender。\n                // let param = ao.deepClone(this.goParam());\n                // delete param[\"viewtype\"];\n                //let _this = this;\n                this.Match();\n                //要是按异步获取数据走逻辑是没有问题，但是loading是有问题的，而且有出现文件数据获取不完整的情况。\n                //异步的情况会先显示没有成果，然后再出成果，在异步的时候这个要处理。\n                this.isLoading = false;\n            },\n            Match: function () {\n                //Match和Retrieve方法的异步会让Api调用出现调用失败，这里需要测试。\n                //PtRender的代码逻辑是完全支持异步执行的。\n               //let pmdata = this.pram.param;\n               let param = ao.deepClone(this.goParam());\n               let _this = this;\n               ajax({\n                   url: \"/SearchService/Match\",\n                   type: \"post\",\n                   contentType: \"application/json; charset=utf-8\",\n                   data: JSON.stringify(param),\n                   async:false,\n                   success: function (result) {\n                       for (let i = 0; i < result.metadatas.length; i++) {\n                         var metadata = result.metadatas[i];\n                           _this.Retrieve(metadata, metadata[\"source\"][\"url\"]);\n                       }\n                   }\n               });\n           },\n            Retrieve: function (metadata, urlstr) {\n               // this.paramlist = [];\n               let filesPa = [];\n               let _this = this;\n               ajax({\n                   url: \"/DataService/Retrieve\",\n                   type: \"get\",\n                   data: {url: urlstr},\n                   async:false,\n                   success: function (result) {\n                    //console.log(JSON.stringify(result));\n                        //组织成果和文件结构\n                        for(let i=0;i<result.length;i++){\n                            filesPa.push({ticket:result[i].ticket,format:result[i].format.toLowerCase(),name:result[i].name});\n                        }\n                        _this.paramlist.push({kmd:metadata, url:urlstr,files:filesPa,fileCount:result.length});\n                        if(_this.paramlist.length==1 && _this.paramlist[0].files.length >= 1){\n                            _this.setFile(0,0);\n                        }else{\n                            if(_this.paramlist.length==_this.infoindex+1)\n                                _this.setFile(_this.infoindex,_this.fileindex);\n                        }\n                   }\n               });\n           }\n        },\n        watch:{\n            pram: function () {\n                this.init();\n            }\n        },\n        components: renderModel\n    }\n</script>\n<style scoped>\n.text-overflow{\n    width:30%;\n/*    height:40%;\n    border:1px solid red;\n    border-top:4px solid red;\n    padding:3px;*/\n    overflow:hidden;/* 内容超出宽度时隐藏超出部分的内容 */\n    text-overflow:ellipsis;/* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/\n    white-space:nowrap;/* 不换行 */\n}\n\n.text-overflow2{\n    width:50%; \n    overflow:hidden;/* 内容超出宽度时隐藏超出部分的内容 */\n    text-overflow:ellipsis;/* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/\n    white-space:nowrap;/* 不换行 */\n}\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/cellRender/gtPTRenderForDetail.vue?55579423","<template>\n    <div class=\"panel panel-default\" style=\"margin-top:2px\">\n        <div class=\"panel-heading\" v-if=\"istool\">\n            <h5 style=\"position:relative;\">\n                &nbsp;\n                <!-- 标题 -->\n                <!-- {{pram.title}} -->\n                <div style=\"float:left;\" class='text-overflow' :title=\"file.name || '未命名'\">\n                    {{(pram.title?(pram.title +\" - \"):\"\")+(file.name || \"未命名\")}}\n                </div>\n               <!--  文件切换 -->\n               <span style=\"position:absolute;left:44%;\">\n                    <!-- 左切 -->\n                   <a style=\"padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-if=\"fileIndex>0\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\" @click=\"left\"></a>\n                   <span disabled = 'true' style=\"color: #e8e8e8; padding-right: 20px;font-size: 18px;\" class=\"el-icon-arrow-left\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n                   <!-- 切换标识 -->\n                    <span style=\"font-size: 12px;\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\">{{fileIndex+1}} / {{!paramlist[infoIndex]?1:paramlist[infoIndex].files.length}}</span>\n                   <!-- 右切 -->\n                   <a style=\"padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-if=\"paramlist[infoIndex] && (fileIndex < paramlist[infoIndex].files.length-1)\" v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"  @click=\"right\"></a>\n                <span disabled = 'true' style=\"color: #e8e8e8;  padding-left: 20px;font-size: 18px;\" class=\"el-icon-arrow-right\" v-else v-show=\"paramlist[infoIndex] && paramlist[infoIndex].files.length>1\"></span>\n               </span>\n                <!-- 工具按钮 -->\n                <span style=\"float:right;font-size: 16px;\">\n                    <!-- 评论 -->\n                    <template v-if=\"isremarks\">\n                        <a style=\"cursor:pointer\" class=\"glyphicon glyphicon-comment\" title=\"评论\" v-if=\"file.fileUrl != null\" target=\"_blank\" @click=\"gotoFunc('/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket))\"></a>\n                        <!-- <a class=\"glyphicon glyphicon-comment\" title=\"评论\" target=\"_blank\" :href=\"'/Render/Remarks?scoap=ptfile&key='+encodeURIComponent(file.ticket)\"></a> -->\n                        <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-comment\" v-else></span>\n                    </template>\n                    <!-- 下载 -->\n                    <template v-if=\"isdown\">\n                        <a class=\"glyphicon glyphicon-save\" title=\"下载\" target=\"_blank\" v-if=\"file.fileUrl != null\" :href=\"file.fileUrl\"></a>\n                         <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"glyphicon glyphicon-save\" v-else></span>\n                     </template>\n                     <!-- 预览 -->\n                     <template v-if=\"isview\">\n                        <a class=\"el-icon-view\" title=\"预览\" target=\"_blank\" v-if=\"file.url != null\" :href=\"'/Render/PtUrl?param='+encodeURIComponent(JSON.stringify(pram))+'&infoIndex='+infoIndex+'&fileIndex='+fileIndex+'&globle='+encodeURIComponent(JSON.stringify(global))\"></a>\n                        <span disabled = 'true' style=\"color: #e8e8e8;\" class=\"el-icon-view\" v-else></span>\n                    </template>\n                    <!-- 提交 -->\n                    <template v-if=\"issubmit\">\n                        <a class=\"el-icon-upload\" style=\"cursor:pointer\" title=\"提交\" target=\"_blank\" @click=\"gotoFunc('/Render/Submission?param='+JSON.stringify(goParam2(pram)))\"></a>\n                        <!-- <a class=\"el-icon-upload\" target=\"_blank\" :href=\"'/Render/Submission?param='+JSON.stringify(pram)\"></a> -->\n                    </template>\n                </span>\n            </h5>\n            <!-- <a style=\"float:right;display:inline;\" href=\"/Render/Submition\">+ </a> -->\n        </div>\n        <div class=\"panel-body\" style=\"height:100%;width:100%;\">\n        <!-- 测试区域 -->\n<!--         <img :src=\"file.url\" />\n        <gt_img :param=\"file\">\n                    </gt_img> -->\n\n\n        <!-- 测试区域 -->\n            <!-- loading --> <!-- losding有问题，先显示了没有成果 -->\n          <div v-if=\"isLoading\" :style=\"stylestr\">\n            <span class=\"el-icon-loading\" style=\"font-size: 45px;position:absolute;left:45%;top:45%;\"></span>\n          </div>\n          <!-- 内容 -->\n          <div v-else>\n            <div v-if=\"paramlist ==null || paramlist.length == 0\">\n                <div>\n                    <h4>没有图件成果</h4>\n                </div>\n            </div>\n            <div v-else>\n                <component :is=\"mo\" :param=\"file\" keep-alive></component>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"isfoottool\">\n            <!-- 成果切换 -->\n            <div v-if=\"paramlist.length > 1\">\n                <el-pagination\n                  small\n                  layout=\"prev, pager, next\"\n                  :page-size=\"1\"\n                  :total=\"paramlist.length\"\n                  :current-page=\"infoIndex+1\"\n                  :page-count=\"paramlist.length\"\n                  @current-change=\"infoClick\">\n                </el-pagination>\n            </div>\n        </div>\n\n        <!-- 通用模态框 elemlet-->\n<!--         <el-dialog\n            :title=\"pram.title+' - '+(file.name || '未命名')\"\n            v-model=\"isGotoModel\"\n            top=\"12%\"\n            size=\"small\">\n          <div class=\"embed-responsive embed-responsive-16by9\">\n            <iframe class=\"embed-responsive-item\" :src=\"gotoUrl\"></iframe>\n          </div>\n        </el-dialog> -->\n        <!-- bootcss -->\n        <div :id=\"'iframe'+nodeId\">\n            <iframe style=\"position:absolute;left:0px;top:0px;\" src=\"about:blank\" width=\"100%\" height=\"100%\" scrolling=\"no\" frameborder=\"0\"></iframe>\n        </div>\n        <div :id=\"'ptrendermodel'+nodeId\" class=\"modal fade\" aria-hidden=\"true\" data-backdrop=\"static\">\n          <div class=\"modal-dialog\" style=\"width:70%;height:600px;\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\" style=\"background-color:#f8f8f8\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" @click=\"reloadPresentView()\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n                <h5 class=\"modal-title\">{{pram.title}}</h5>\n              </div>\n              <div class=\"modal-body\">\n                <div class=\"embed-responsive embed-responsive-16by9\">\n                    <iframe class=\"embed-responsive-item\" :src=\"gotoUrl\"></iframe>\n                </div>\n              </div>\n<!--               <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n              </div> -->\n            </div><!-- /.modal-content -->\n          </div><!-- /.modal-dialog -->\n        </div><!-- /.modal -->\n\n    </div>\n</template>\n\n<script>\n    //import  models from '../../utils/getCom'\n    import ajax from '../../utils/pollAjax'\n    import ao from \"../../utils/arrayandobjectoperation\"\n    import bo from \"../../utils/baseoperation\"\n    import MetadataDefOperation from \"./../../Utils/MetadataDefOperation\";\n    import {Pagination} from 'element-ui'\n    import model from \"../../utils/loadmodel\"\n    var renderModel = {\n        \"_rich\": require('../formatcom/gtrich.vue'),\n        \"_img\": require('../formatcom/gtimg.vue'),\n        \"_gdb\": require('../formatcom/gtgdb.vue'),\n        \"_chart\": require('../formatCom/gtpiechart.vue'),\n        \"_dataset\": require('../formatCom/gtdataset.vue'),\n        \"_noresults\": require('../formatCom/gtNoResults.vue')\n    };\n\n    //let loadingInstance;\n    export default {\n        props: {\n            pram: {\n                type: Object,\n                default: {}\n            },\n            global: {\n                type: Object,\n                default: null\n            },\n            heights: {\n                type: Number,\n                default: 0\n            },\n            infoindex: {\n                type: Number,\n                default: 0\n            },\n            fileindex: {\n                type: Number,\n                default: 0\n            },\n            istool: {\n                type: Boolean,\n                default: true\n            },\n            isremarks: {\n                type: Boolean,\n                default: true\n            },\n            isdown: {\n                type: Boolean,\n                default: true\n            },\n            isview: {\n                type: Boolean,\n                default: true\n            },\n            issubmit: {\n                type: Boolean,\n                default: true\n            },\n            isfoottool: {\n                type: Boolean,\n                default: true\n            },\n        },\n        data: function () {\n            return {\n                paramlist: [],\n                file:{},\n                infoIndex:this.infoindex,//0,\n                fileIndex:this.fileindex,//0,\n                metadataDefinition:[],\n                isLoading:false,\n                gotoUrl:\"\",\n                //isGotoModel:false,\n                mo : null,\n                stylestr:{\n                    height: this.heights == 0?\"100%\":this.heights+'px'\n                },\n                nodeId:bo.getGuid()\n            }\n        },\n        created:function(){\n            this.init();\n        },\n        mounted: function () {\n            //不能放到init中，因为时机不同。\n            let _this = this;\n            $(\"#iframe\"+this.nodeId).hide();\n            $(\"#ptrendermodel\"+this.nodeId).on('hide.bs.modal', function (e) {\n              $(\"#iframe\"+_this.nodeId).hide();\n            })\n        },\n        // updated:function(){\n        // },\n        methods:{\n            gotoFunc:function(url){\n                this.gotoUrl = url;\n                //this.isGotoModel = true;\n                $('#ptrendermodel'+this.nodeId).modal();\n                $(\"#iframe\"+this.nodeId).show();\n            },\n            reloadPresentView:function(){\n                // alert(\"点击了取消按钮！\");\n                this.init();\n            },\n            infoClick:function(index){\n                this.infoIndex = index-1;\n                this.fileIndex = 0;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            left:function(){\n                if(this.fileIndex == 0){\n                    gtUI.message({message: \"前面没有了！\",type: 'info'});\n                    return;\n                }\n                this.fileIndex--;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            right:function(){\n                if(this.fileIndex == this.paramlist[this.infoIndex].files.length-1){\n                    gtUI.message({message: \"后面没有了！\",type: 'info'});\n                    return;\n                }\n                this.fileIndex++;\n                this.setFile(this.infoIndex,this.fileIndex);\n            },\n            setFile:function(infoIndex,fileIndex){\n                this.file={};\n                this.mo = this.$options.components[\"_\"+model.getConfig(this.paramlist[infoIndex].files[fileIndex].format,\"ptrender\")];\n                let url = \"?id=\"+ MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"IIId\") +\n                    \"&title=\"+ escape(MetadataDefOperation.getValue(this.paramlist[infoIndex].kmd, \"FormalTitle\")) +\n                    \"&url=\"+ escape(this.paramlist[infoIndex].url)+\n                    \"&ticket=\"+escape(this.paramlist[infoIndex].files[fileIndex].ticket)+\n                    \"&format=\"+ escape(this.paramlist[infoIndex].files[fileIndex].format);\n                this.file={\n                    url: \"/FileInfo/GetStream\"+url,\n                    format:this.paramlist[infoIndex].files[fileIndex].format,\n                    heights: this.heights,\n                    fileUrl: \"/FileInfo/DownLoad\"+url+\"&name=\"+escape(this.paramlist[infoIndex].files[fileIndex].name),\n                    name:this.paramlist[infoIndex].files[fileIndex].name,\n                    ticket:this.paramlist[infoIndex].files[fileIndex].ticket\n                };\n            },\n            //初始方法， param数据改变时或者第一次进来是调用\n            init:function () {\n                this.paramlist = [];\n                this.infoIndex=0;\n                this.fileIndex=0;\n                this.file={};//不能省略\n                this.mo = null;\n                this.getData();\n                // if(this.file && this.file.format)\n                //     //\"_\"是为了动态加载的时候和原生组件区分。\n                    // this.mo = this.$options.components[\"_\"+model.getConfig(this.file.format,\"ptrender\")];\n                    // this.$options.components[\"render\"] = renderModel[model.getConfig(this.file.format,\"ptrender\")];\n            },\n            getParam: function(){\n                if(!this.metadataDefinition || this.metadataDefinition.length<1){\n                  MetadataDefOperation.init();\n                  this.metadataDefinition = MetadataDefOperation.metadataDefinition;\n                }\n            },\n            //转化参数，转换成match方法需要的kmd参数，并且替换全局变量。返回一个替换后的备份，不修改原始参数\n            goParam: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if(this.metadataDefinition.length==0)\n                this.getParam();\n                let result = this.metadataDefinition;\n                        //pDic = result;\n                        //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                        for (let i in pa.filter) {\n                            let ssParam = [];\n                            for (let j = 0; j < pa.filter[i].length; j++) {\n                                //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                                for (let z in pa.filter[i][j]) {\n                                    for (let k = 0; k < result.length; k++) {\n                                        if (result[k].name == z) {\n                                            for (let s = 0; s < result[k].mapping.set.length; s++) {\n                                                let sParam = {};\n                                                //sParam[]\n                                                //for (let l in result[k].mapping.set[s]) {\n                                                let _key = result[k].mapping.set[s].key.replace(/\\[.*\\]/g, \"\");\n                                                let _value;\n                                                if (result[k].mapping.set[s].value.substring(0, 1) == \"@\") {\n                                                    if (result[k].mapping.set[s].value == \"@value\") {\n                                                        if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                                            // start 更改参数过滤，针对数组型字符串 ex: 1,2,3 \n                                                            let tem = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)],\n                                                                _tem = tem.split(','),\n                                                                len = _tem.length\n                                                            if(len > 1){ \n                                                                let objtemp={}, \n                                                                    __arr=[]\n                                                                for(let m=0; m<len; m++){\n                                                                    let _a={},\n                                                                        _v={\"$eq\":_tem[m]}\n                                                                    _a[_key]=_v\n                                                                    __arr.push(_a)\n                                                                }\n                                                                objtemp[\"$or\"]=__arr\n                                                                ssParam.push(objtemp);\n                                                                continue\n                                                            // end \n                                                            }else{\n                                                                _value = tem\n                                                            }\n                                                            \n                                                            //_value = {\"$eq\": global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)]};\n                                                        } else {\n                                                            _value = {\"$eq\": pa.filter[i][j][z]};\n                                                        }\n                                                    }\n                                                } else {\n                                                    _value = {\"$eq\": result[k].mapping.set[s].value};\n                                                }\n                                                sParam[_key] = _value;\n                                                ssParam.push(sParam);\n                                                //}\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n\n                            //***筛选出GDB gdb GDBX gdbx图\n                            let isGDBType=global&&global[\"FilterType\"]&&global[\"FilterType\"].length>0&&global[\"FilterType\"]==\"GDBType\"\n                            if(isGDBType){ \n                            let temp={},\n                            _arr=[],\n                            _value1= {\"$regex\": \"GDB\"},\n                            _value2= {\"$regex\": \"gdb\"},\n                            _sParam1={},\n                            _sParam2={}\n                            _sParam1[\"dc.type\"]=_value1\n                            _sParam2[\"dc.type\"]=_value2\n                            _arr.push(_sParam1)\n                            _arr.push(_sParam2) \n                            temp[\"$or\"]=_arr \n                            ssParam.push(temp)\n                            }\n                            //***\n\n                            pa.filter[i] = ssParam;\n                        } \n                return pa;\n            },\n            //替换全局变量，用于上传。返回一个替换后的备份，不修改原始参数。\n            goParam2: function () {\n                if (!this.pram.param || !this.pram.param.filter) return this.pram.param;\n                var global = this.global || {};\n                // let pa = this.pram.param;\n                let pa = ao.deepClone(this.pram.param);\n                if(this.metadataDefinition.length==0) this.getParam();\n                //let result = this.metadataDefinition;\n                        //pDic = result;\n                        //按层次级别遍历，不区分$and或者$or，保留一定扩展性.\n                        for (let i in pa.filter) {\n                            for (let j = 0; j < pa.filter[i].length; j++) {\n                                //这层默认只有一条对象，这里要做替换处理，所以不太好处理太复杂的逻辑。\n                                for (let z in pa.filter[i][j]) {\n                                    if (pa.filter[i][j][z].substring(0, 1) == \"@\") {\n                                            pa.filter[i][j][z] = global[pa.filter[i][j][z].substring(1, pa.filter[i][j][z].length)];\n                                         }\n                                }\n                            }\n                        }\n                return pa;\n            },\n            getData: function () {\n                this.isLoading = true;\n                //这里开始Loading。。。\n                //let param = this.goParam();\n                //这里需要深拷贝,目的是不改变原始的pram参数，这样可以递归使用PtRender。\n                // let param = ao.deepClone(this.goParam());\n                // delete param[\"viewtype\"];\n                //let _this = this;\n                this.Match();\n                //要是按异步获取数据走逻辑是没有问题，但是loading是有问题的，而且有出现文件数据获取不完整的情况。\n                //异步的情况会先显示没有成果，然后再出成果，在异步的时候这个要处理。\n                this.isLoading = false;\n            },\n            Match: function () {\n                //Match和Retrieve方法的异步会让Api调用出现调用失败，这里需要测试。\n                //PtRender的代码逻辑是完全支持异步执行的。\n               //let pmdata = this.pram.param;\n               let param = ao.deepClone(this.goParam());\n               let _this = this;\n               ajax({\n                   url: \"/SearchService/Match\",\n                   type: \"post\",\n                   contentType: \"application/json; charset=utf-8\",\n                   data: JSON.stringify(param),\n                   async:false,\n                   success: function (result) {\n                       for (let i = 0; i < result.metadatas.length; i++) {\n                         var metadata = result.metadatas[i];\n                           _this.Retrieve(metadata, metadata[\"source\"][\"url\"]);\n                       }\n                   }\n               });\n           },\n            Retrieve: function (metadata, urlstr) {\n               // this.paramlist = [];\n               let filesPa = [];\n               let _this = this;\n               ajax({\n                   url: \"/DataService/Retrieve\",\n                   type: \"get\",\n                   data: {url: urlstr},\n                   async:false,\n                   success: function (result) {\n                    //console.log(JSON.stringify(result));\n                        //组织成果和文件结构\n                        for(let i=0;i<result.length;i++){\n                            filesPa.push({ticket:result[i].ticket,format:result[i].format.toLowerCase(),name:result[i].name});\n                        }\n                        _this.paramlist.push({kmd:metadata, url:urlstr,files:filesPa,fileCount:result.length});\n                        if(_this.paramlist.length==1 && _this.paramlist[0].files.length >= 1){\n                            _this.setFile(0,0);\n                        }else{\n                            if(_this.paramlist.length==_this.infoindex+1)\n                                _this.setFile(_this.infoindex,_this.fileindex);\n                        }\n                   }\n               });\n           }\n        },\n        watch:{\n            pram: function () {\n                this.init();\n            }\n        },\n        components: renderModel\n    }\n</script>\n<style scoped>\n.text-overflow{\n    width:40%;\n/*    height:40%;\n    border:1px solid red;\n    border-top:4px solid red;\n    padding:3px;*/\n    overflow:hidden;;/* 内容超出宽度时隐藏超出部分的内容 */\n    text-overflow:ellipsis;;/* 当对象内文本溢出时显示省略标记(...) ；需与overflow:hidden;一起使用。*/\n    white-space:nowrap;/* 不换行 */\n}\n</style>\n\n\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/CellRender/GtPTRender.vue?55ab931c","<template>\n  <div class=\"tabs\">\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"tab in tabs\" v-bind:label=\"tab.name\">\n        <div v-for=\"item in getData(tab.filter)\">\n            <a v-if=\"item.title!==null\" v-bind:id=\"item.iiid\" href=\"javascript:void(0);\" @click=\"titleclick(item.iiid)\">{{item.title}}</a>\n            <br v-if=\"item.title===null\" />\n        </div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\n  import {Tabs,TabPane} from 'element-ui'\n  import ajax from \"../../utils/pollAjax\"\n  import jsonPath from \"../../utils/jsonpath\"\n  import modelmapping from \"./../../Utils/MetadataDefOperation\"\n  export default{\n    props: {\n        id: String,\n        showtab: {\n            type: Boolean,\n            default:false\n        },\n        itemsize: {\n            type: Number,\n            default:5\n        },\n        displayfield: Array,\n        tabs: Array,\n        onitemclick: Function\n    },\n    data: function(){\n      return {\n\n      };\n    },\n    methods: {\n        getData: function (filter) {\n          let searlist = [];\n          for(let i = 0; i < this.itemsize; i++){\n            searlist.push({title:null, iiid:\"#\"});\n          }\n          let _this = this; //use for ajax\n           let defaultUrl = \"/SearchService/Match\";\n          ajax({\n            type: \"post\",\n            url: defaultUrl,\n            data: JSON.stringify(filter),\n            contentType: \"application/json\",\n            cache: false,\n            async: false,\n            dataType: 'json',\n            success: function (result) {\n              if (result.count > 0) {\n                let size = result.metadatas.length;\n                if(size > _this.itemsize){\n                  size = _this.itemsize;\n                }\n\n                for (let i = 0; i < size; i++) {\n                    let iiid = _this.getMetadataByName(result.metadatas[i], _this.displayfield[0]);\n                    let title = _this.getMetadataByName(result.metadatas[i], _this.displayfield[1]);\n                    let format = _this.getMetadataByName(result.metadatas[i], _this.displayfield[2]);\n                    searlist[i] = {iiid: iiid, title: title, format: format};\n                }\n              }\n            },\n            error: function (err) {\n              console.log(err);\n            }\n          });\n\n          return searlist;\n        },\n        getMetadataByName: function (metadata, name) {\n          let defPath = modelmapping.getJsonPath(name);\n          let values = jsonPath(metadata, \"$.\" + defPath);\n          if(values!==null&&values.length>0){\n              return values[0];\n          }else {\n              return null;\n          }\n        },\n        titleclick: function (value) {\n            this.onitemclick(value);\n      },\n\n    },\n    components: {\n        \"el-tabs\": Tabs,\n        \"el-tab-pane\": TabPane\n    }\n  }\n\n</script>\n\n<style scoped>\n  a {\n    line-height:normal;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/gtrecommend/gtrcmdtabs.vue?6aa665ff","<template>\n  <div class=\"semantics\" style=\"width: 300px\">\n    <el-popover ref=\"popoverset\" placement=\"top-end\" trigger=\"click\">\n      <div class=\"popovercontent\">\n        <div>目标叙词：\n          <el-radio-group v-model=\"selectTerm\" v-for=\"term in terms\" size=\"small\">\n            <el-radio :label=\"term\">{{term}}</el-radio>\n          </el-radio-group>\n        </div>\n      </div>\n    </el-popover>\n    <el-card :body-style=\"{ padding: '0px'}\"  v-if=\"show\">\n      <div class=\"header\">\n        <span style=\"font-size: 15px\"> {{name}} </span>\n        <el-button v-popover:popoverset style=\"float:right;background-color:#d3dce6\" type=\"primary\" size=\"mini\" :plain=\"true\" icon=\"setting\">设置</el-button>\n      </div>\n      <div class=\"content\">\n        <el-tree :data=\"semanticstree\" :props=\"defaultProps\" :node-key=\"id\" accordion @node-click=\"handleNodeClick\"></el-tree>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\n  import ajax from '../../utils/pollAjax'\n  import listToTree from \"../../utils/listToTree\"\n  import { Popover, Button, Tree, RadioGroup, Radio, Card } from 'element-ui'\n  export default {\n    props: {\n      id: String,\n      name: String,\n      terms: { type: Array, default: function () { return [] } },\n      relation: Object,\n      semanticstree: { type: Array, default: function () { return [] } },\n      defaultProps: {\n        type: Object,\n        default: function () {\n          return {\n            children: 'children',\n            label: 'text'\n          }\n        }\n      },\n      onclick: Function\n    },\n    data: function () {\n      let select = \"\";\n      let isshow=false;\n      if (this.terms.length) {\n          select = this.terms[0];\n          isshow=true;\n        }\n      return {\n        selectTerm: select,\n        show:isshow,\n        parentid: null\n      };\n    },\n    mounted: function () {\n      this.getSematicsTree();\n    },\n    methods: {\n      handleNodeClick: function (term) {\n        this.onclick(term.text);\n      },\n      getSematicsTree: function () {\n        this.semanticstree = [];\n        let pathterm = this.selectTerm;\n        //获得当前选中叙词信息（支持pathterm、term过滤）\n        let current = this.getCurrent(pathterm);\n        let term = current.term;\n        let nodes = [];\n        for (let r in this.relation) {\n          let sr = this.relation[r].sr;\n          let direction = this.relation[r].direction;\n          let param = \"?term=\" + term + \"&sr=\" + sr + \"&direction=\" + direction;\n          let pid = \"\";\n          switch (r) {\n            case \"parent\":\n              pid = null;\n              break;\n            case \"brother\"://定义 brother的参数是获得父亲的\n              let parent = this.getParent(param);\n              //改变direction方向获得兄弟\n              direction = (direction) == \"forward\" ? \"backward\" : \"forward\";\n              param = \"?term=\" + parent.pterm + \"&sr=\" + sr + \"&direction=\" + direction;\n              pid = parent.pid;\n              break;\n            case \"child\":\n              pid = current.id; break;\n            default: break;\n          }\n          this.getNodes(param, pid).forEach(function (node) { nodes.push(node); });\n        }\n        this.semanticstree = listToTree(nodes);\n      },\n      getParent: function (pparam) {\n        let result = this.getSemanticsResult(pparam);\n        let pid = result[0].termclassid;\n        let pterm = result[0].term;\n        return { \"pid\": pid, \"pterm\": pterm };//[id, pterm];\n      },\n      getNodes: function (param, pid) {\n        let result = this.getSemanticsResult(param);\n        let nodes = [];\n        for (let i = 0; i < result.length; i++) {\n          let bo = { \"parentId\": pid, \"id\": result[i].termclassid, \"name\": result[i].term }\n          nodes.push(bo);\n        }\n        return nodes;\n      },\n      getCurrent: function (term) {\n        let defaultUrl = \"/SemanticsService/GetTermInfo\";\n        let param = { \"term\": [term], \"cc\": \"\" };\n        let currentid = \"\";\n        let currentterm = \"\";\n        ajax({\n          url: defaultUrl,\n          data: JSON.stringify(param),\n          contentType: \"application/json\",\n          type: \"post\",\n          async: false,\n          cache: false,\n          dataType: 'json',\n          success: function (result) {\n            currentid = result[0].termclassid;\n            currentterm = result[0].term;\n          },\n          error: function (err) {\n            console.log(err);\n          }\n        });\n        return { \"id\": currentid, \"term\": currentterm };\n      },\n      getSemanticsResult: function (param) {\n        let defaultUrl = \"/SemanticsService/Semantics\";\n        let result = [];\n        ajax({\n          url: defaultUrl + param,\n          type: \"get\",\n          async: false,\n          cache: false,\n          dataType: 'json',\n          success: function (data) {\n            result = data;\n          },\n          error: function (err) {\n            console.log(err);\n          }\n        });\n        return result;\n      }\n    },\n    watch: {\n      selectTerm: function () {\n        this.getSematicsTree();\n      }\n    },\n    components: {\n      \"el-radio\": Radio,\n      \"el-radio-group\": RadioGroup,\n      \"el-card\": Card,\n      \"el-tree\": Tree,\n      \"el-button\": Button,\n      \"el-popover\": Popover\n    }\n  }\n\n</script>\n\n<style scoped>\n  a {\n    padding: 10px;\n  }\n\n  .header {\n    padding: 5px;\n    background-color: #d3dce6;\n    height: 30px;\n    border-bottom: 1px solid lightgrey\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/gtrecommend/gtRcmdSemantics.vue?52d18020","<template>\n    <div class=\"nearbo\" style=\"width: 300px\">\n        <el-popover ref=\"popoverset\" placement=\"top-end\" trigger=\"click\">\n            <div class=\"popovercontent\">\n                <div>目标对象：\n                <el-radio-group v-model=\"selectBO\" v-for=\"bo in bos\" size=\"small\">\n                    <el-radio :label=\"bo.value\">{{bo.value}}</el-radio>\n                </el-radio-group>\n                </div>\n                <p style=\"cursor:pointer;margin-top:8px;margin-bottom:8px;\">\n                    查询范围：相邻\n                    <input class=\"inputdistance\" type=\"number\" v-model=\"distance\"></input> 米的 <span style=\"color: red;\">{{getBOType()}}</span>\n                </p>\n            </div>\n        </el-popover>\n        <el-card :body-style=\"{ padding: '0px'}\"  v-if=\"show\">\n            <div class=\"header\">\n                <span style=\"font-size: 15px\"> {{name}} </span>\n                <el-button v-popover:popoverset style=\"float:right;background-color:#d3dce6\" type=\"primary\" size=\"mini\" :plain=\"true\" icon=\"setting\">设置</el-button>\n            </div>\n            <div class=\"content\">\n                <el-carousel :autoplay=false arrow=\"hover\" height=\"100px\" indicator-position=\"none\">\n                    <el-carousel-item v-for=\"item in carouselItemCount\">\n                        <el-row v-for=\"r in row\">\n                            <a href=\"#\" @click=\"itemclick(nearbo)\" v-for=\"nearbo in getPatialNearBOs(item,r)\">{{nearbo}}</a>\n                        </el-row>\n                    </el-carousel-item>\n                </el-carousel>\n            </div>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\n    import ajax from '../../utils/pollAjax'\n    import { Popover, Button, CarouselItem, Carousel, Row, RadioGroup, Radio, Card } from 'element-ui'\n    export default {\n        props: {\n            id: String,\n            name: String,\n            bos:  { type: Array, default: function () { return [] } },\n            distance: {\n                type: Number,\n                default: 1000\n            },\n            onclick: Function\n        },\n        data: function () {\n            let select = \"\";\n            let isshow=false;\n            if (this.bos.length) {\n                select = this.bos[0].value\n                isshow=true;\n            }\n            return {\n                selectBO:select,\n                show:isshow,\n                nearBOs: [],\n                row: 4,\n                col: 4\n            };\n        },\n        mounted: function () {\n            this.getNearBO();\n        },\n        computed: {\n            total: function () {\n                return this.row * this.col;\n            },\n            carouselItemCount: function () {\n                if (this.nearBOs.length > this.total) {\n                    return Math.ceil(this.nearBOs.length / this.total);\n                }\n                return 1;\n            }\n        },\n        methods: {\n            getPatialNearBOs: function (item, row) {\n                let start = (item - 1) * this.total + (row - 1) * this.col;\n                let end = start + this.col;\n                let patialBOs = this.nearBOs.slice(start, end);\n                return patialBOs;\n            },\n            getBOType: function () {\n                for (var i = 0; i < this.bos.length; i++) {\n                    if (this.bos[i].value == this.selectBO)\n                        return this.bos[i].type;\n                }\n            },\n            itemclick: function (boname) {\n                this.onclick(boname);\n            },\n            getNearBO: function () {\n                let botype = this.getBOType();\n                let nearbonames = [];\n                let param = { \"botype\": botype, \"boname\": this.selectBO, \"distance\": this.distance, \"bot\": botype }\n                let defaultUrl = \"/BOService/GetNearBOByName\";\n                ajax({\n                    url: defaultUrl,\n                    data: param,\n                    type: \"post\",\n                    cache: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        if (result != null && result.length > 0) {\n                            result.forEach(function (value) {\n                                nearbonames.push(value.name);\n                            })\n                        }\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n                this.nearBOs = nearbonames;\n            }\n        },\n        watch: {\n            selectBO: function () {\n                this.getNearBO();\n            },\n            distance: function () {\n                this.getNearBO();\n            }\n        },\n        components: {\n            \"el-radio\": Radio,\n            \"el-radio-group\": RadioGroup,\n            \"el-card\": Card,\n            \"el-carousel\": Carousel,\n            \"el-carousel-item\": CarouselItem,\n            \"el-row\": Row,\n            \"el-button\": Button,\n            \"el-popover\": Popover\n        }\n    }\n\n</script>\n\n<style scoped>\n    a {\n        padding: 10px;\n    }\n\n    .header {\n        padding: 5px;\n        background-color: #d3dce6;\n        height: 30px;\n        border-bottom: 1px solid lightgrey\n    }\n\n    p .inputdistance {\n        color: red;\n        width: 50px\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/GtRecommend/gtRcmdBONear.vue?cda08c9a","<template>\n    <div class=\"similarbo\" style=\"width: 300px\">\n        <el-popover ref=\"popoverset\" placement=\"top-end\" trigger=\"click\">\n            <div class=\"popovercontent\">\n                <div>\n                    目标对象：\n                    <el-radio-group v-model=\"selectBO\" v-for=\"bo in bos\" size=\"small\">\n                        <el-radio :label=\"bo.value\">{{bo.value}}</el-radio>\n                    </el-radio-group>\n                </div>\n                <div>\n                    应用场景：\n                    <el-radio-group v-model=\"selectScene\" v-for=\"s in scene\" size=\"small\">\n                        <el-radio :label=\"s\">{{s}}</el-radio>\n                    </el-radio-group>\n                </div>\n                <div v-for=\"(property,index) in propertySchema\">\n                    {{property.name}}：\n                    <template v-if=\"property.datatype=='String'\">\n                        <el-select v-model=\"selectProperty[index]\" clearable placeholder=\"请选择\" size=\"mini\" @change=\"selectPropertyChange()\">\n                            <el-option v-for=\"value in property.values\" :label=\"value\" :value=\"value\">\n                            </el-option>\n                        </el-select>\n                    </template>\n                    <template v-else-if=\"property.datatype=='Decimal'\">\n                        <input class=\"minNum\" type=\"number\" @keyup=\"validMin(index)\" v-model=\"selectProperty[index].min\" @change=\"selectPropertyChange()\"></input>\n                        <span>——</span>\n                        <input class=\"maxNum\" type=\"number\" @keyup=\"validMax(index)\" v-model=\"selectProperty[index].max\" @change=\"selectPropertyChange()\"></input>\n                    </template>\n                    <template v-else-if=\"property.datatype=='Date'\">\n                        <el-date-picker v-model=\"property.values\" type=\"datetimerange\" placeholder=\"选择时间范围\">\n                        </el-date-picker>\n                    </template>\n                </div>\n            </div>\n        </el-popover>\n        <el-card :body-style=\"{ padding: '0px'}\"  v-if=\"show\">\n            <div class=\"header\">\n                <span style=\"font-size: 15px\"> {{name}} </span>\n                <el-button v-popover:popoverset style=\"float:right;background-color:#d3dce6\" type=\"primary\" size=\"mini\" :plain=\"true\" icon=\"setting\">设置</el-button>\n            </div>\n            <div class=\"content\">\n                <el-carousel :autoplay=false arrow=\"hover\" height=\"100px\" indicator-position=\"none\">\n                    <el-carousel-item v-for=\"item in carouselItemCount\">\n                        <el-row v-for=\"r in row\">\n                            <a href=\"#\" @click=\"itemclick(similarbo)\" v-for=\"similarbo in getPatialSimilarBOs(item,r)\">{{similarbo}}</a>\n                        </el-row>\n                    </el-carousel-item>\n                </el-carousel>\n            </div>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\n    import ajax from '../../utils/pollAjax'\n    import str from \"../../utils/stringHelper\";\n    import { Popover, Button, CarouselItem, Carousel, DatePicker, InputNumber, Row, RadioGroup, Radio, Card } from 'element-ui'\n    export default {\n        props: {\n            id: String,\n            name: String,\n            bos: { type: Array, default: function () { return [] } },\n            scene: { type: Array, default: function () { return [] } },\n            onclick: Function\n        },\n        data: function () {\n            let select = \"\";\n            let isshow=false;\n            if (this.bos.length) {\n                select = this.bos[0].value\n                isshow=true;\n            }\n            return {\n                selectBO:select,\n                show:isshow,\n                selectScene: \"\",\n                similarBOs: [],\n                propertySchema: [],\n                selectProperty: [],\n                boProperty: [],\n                row: 4,\n                col: 4,\n                isStr: false\n            };\n        },\n        mounted: function () {\n            this.getAppdomain();\n            this.selectScene = this.scene[0];\n            this.get3GXByFilter();\n            this.getPropertySchema();\n            this.getSimilarBO();\n        },\n        computed: {\n            //用于相似对象展示结果的排列\n            total: function () {\n                return this.row * this.col;\n            },\n            carouselItemCount: function () {\n                if (this.similarBOs.length > this.total) {\n                    return Math.ceil(this.similarBOs.length / this.total);\n                }\n                return 1;\n            }\n        },\n        methods: {\n            //获得过滤条件\n            getFilter: function () {\n                let filters = [];\n                for (let i = 0; i < this.selectProperty.length; i++) {\n                    let value = this.selectProperty[i];\n                    let name = this.propertySchema[i].name\n                    let field = this.selectScene + \".\" + name;\n                    //匹配过滤\n                    if (name != \"\" && typeof (value) === \"string\") {\n                        let strValue = { \"$eq\": value };\n                        filters.push(this.getFilterBase(field, strValue));\n                    }\n                    //范围过滤\n                    else if (name != \"\" && value != null && value instanceof Object) {\n                        let minValue = { \"$gte\": value.min };\n                        let maxValue = { \"$lte\": value.max };\n                        filters.push(this.getFilterBase(field, minValue));\n                        filters.push(this.getFilterBase(field, maxValue));\n                    }\n                }\n                return filters.length > 0 ? { \"$and\": filters } : {};\n            },\n            getFilterBase: function (field, value) {\n                let filter = {};\n                filter[field] = value;\n                return filter;\n            },\n            //获得选中的属性\n            getSelectProperty: function () {\n                let result = [];\n                for (let i = 0; i < this.propertySchema.length; i++) {\n                    result[i] = null;\n                    for (let j = 0; j < this.boProperty.length; j++) {\n                        let type = str.trim(this.propertySchema[i].datatype);\n                        let schemaName = str.trim(this.propertySchema[i].name);\n                        let propertyName = str.trim(this.boProperty[j].name);\n                        if (schemaName === propertyName) {\n                            if (type === \"String\") {\n                                result[i] = str.trim(this.boProperty[j].value);\n                                break;\n                            }\n                            else if (type === \"Decimal\") {\n                                result[i] = { max: 0, min: 0 }\n                                let numValue = parseFloat(str.trim(this.boProperty[j].value)) || 0;\n                                result[i] = { max: numValue, min: numValue }\n                                break;\n                            }\n                        }\n                    }\n                }\n                this.selectProperty = result;\n            },\n            //选中的属性发生变化时刷新\n            selectPropertyChange: function () {\n                this.getSimilarBO();\n            },\n            validMin: function (index) {\n                if (this.selectProperty[index].min > this.selectProperty[index].max) {\n                    gtUI.message({ message: \"不能大于最大值！\", type: 'warning' });\n                    this.selectProperty[index].min = this.selectProperty[index].max;\n                }\n            },\n            validMax: function (index) {\n                if (this.selectProperty[index].max < this.selectProperty[index].min) {\n                    gtUI.message({ message: \"不能小于最小值！\", type: 'warning' });\n                    this.selectProperty[index].max = this.selectProperty[index].min;\n                }\n            },\n            //获得分页展示结果\n            getPatialSimilarBOs: function (item, row) {\n                let start = (item - 1) * this.total + (row - 1) * this.col;\n                let end = start + this.col;\n                let patialBOs = this.similarBOs.slice(start, end);\n                return patialBOs;\n            },\n            //获得当前选中对象的类型\n            getBOType: function () {\n                for (var i = 0; i < this.bos.length; i++) {\n                    if (this.bos[i].value === this.selectBO)\n                        return this.bos[i].type;\n                }\n            },\n            itemclick: function (boname) {\n                this.onclick(boname);\n            },\n            getSimilarBO: function () {\n                this.similarBOs = [];\n                let _this = this;\n                let bot = this.getBOType();\n                let filter = this.getFilter();\n                let param = { \"bot\": bot, \"filter\": filter };\n                console.log(\"GetBOListByFilter的参数：\" + JSON.stringify(param));\n                let defaultUrl = \"/BOService/GetBOListByFilter\";\n                ajax({\n                    url: defaultUrl,\n                    data: JSON.stringify(param),\n                    contentType: \"application/json\",\n                    type: \"post\",\n                    cache: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        if (result != null && result.length > 0) {\n                            result.forEach(function (value) {\n                                _this.similarBOs.push(value.name);\n                            })\n                        }\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n            },\n            getAppdomain: function () {\n                let domains = [];\n                let bot = this.getBOType();\n                let defaultUrl = \"/BOService/GetCapabilities\";\n                ajax({\n                    url: defaultUrl,\n                    type: \"get\",\n                    cache: false,\n                    async: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        let appdomain = result.appdomains;\n                        if (appdomain != null && appdomain.length > 0) {\n                            for (let i = 0; i < appdomain.length; i++) {\n                                if (appdomain[i].bot === bot) {\n                                    domains = appdomain[i].appdomain;\n                                    break;\n                                }\n                            }\n                        }\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n                this.scene = domains;\n            },\n            getPropertySchema: function () {\n                this.propertySchema = [];\n                let _this = this;\n                let appdomain = this.selectScene;\n                let bot = this.getBOType();\n                let param = { \"bot\": bot, \"appdomain\": appdomain }\n                let defaultUrl = \"/BOService/GetPropertySchema\";\n                ajax({\n                    url: defaultUrl,\n                    data: param,\n                    type: \"post\",\n                    cache: false,\n                    async: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        for (let i = 0; i < result.length; i++) {\n                            let property = result[i];\n                            for (let j = 0; j < result[i].values.length; j++) {\n                                property.values[j] = str.trim(result[i].values[j]);\n                            }\n                            _this.propertySchema.push(property);\n                        }\n                        _this.getSelectProperty();//更新当前选中的属性项\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n            },\n            get3GXByFilter: function () {\n                this.boProperty = [];\n                let _this = this;\n                let bo = this.selectBO;\n                let bot = this.getBOType();\n                let param = { \"bot\": bot, \"bos\": [bo], \"category\": \"P\" }\n                let defaultUrl = \"/BOService/Get3GXByFilter\";\n                ajax({\n                    url: defaultUrl,\n                    data: param,\n                    type: \"post\",\n                    cache: false,\n                    async: false,\n                    dataType: 'xml',\n                    success: function (result) {\n                        let propertyset = $(result).find(\"PropertySet\");\n                        if (propertyset != undefined) {\n                            propertyset.each(function (ps) {\n                                let name = $(this).attr(\"name\");\n                                let propertys = $(this).find(\"P\").each(function (p) {\n                                    let n = $(this).attr(\"n\");\n                                    let t = $(this).attr(\"t\");\n                                    let r = $(this).attr(\"r\");\n                                    let value = $(this).text();\n                                    _this.boProperty.push({ \"ns\": name, \"name\": n, \"op\": r, \"value\": value })\n                                })\n                            })\n\n                        }\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n            }\n        },\n        watch: {\n            //当目标对象变化时 重新读取 对应的应用场景以及该目标对应属性集\n            selectBO: function () {\n                this.getAppdomain();\n                let lastScene = this.selectScene;\n                this.selectScene = this.scene[0]\n                this.get3GXByFilter();\n                if (lastScene === this.scene[0]) {\n                    this.selectProperty = [];\n                    this.getPropertySchema();\n                }\n            },\n            //当应用场景变化时，读取对应的属性集合\n            selectScene: function () {\n                this.selectProperty = [];\n                this.getPropertySchema();\n                this.getSimilarBO();\n            },\n            selectProperty: {\n                handler: function () {\n                    this.getSimilarBO();\n                },\n                deep: true\n            }\n        },\n        components: {\n            \"el-radio\": Radio,\n            \"el-radio-group\": RadioGroup,\n            \"el-card\": Card,\n            \"el-carousel\": Carousel,\n            \"el-carousel-item\": CarouselItem,\n            \"el-row\": Row,\n            \"el-button\": Button,\n            \"el-popover\": Popover,\n            \"el-date-picker\": DatePicker,\n            \"el-input-number\": InputNumber\n        }\n    }\n\n</script>\n\n<style scoped>\n    a {\n        padding: 10px;\n    }\n\n    .header {\n        padding: 5px;\n        background-color: #d3dce6;\n        height: 30px;\n        border-bottom: 1px solid lightgrey\n    }\n\n    input {\n        width: 50px\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/GtRecommend/gtRcmdBOSimilar.vue?fd94b87e","<template>\n    <div class=\"associatebo\" style=\"width: 300px\">\n        <el-popover ref=\"popoverset\" placement=\"top-end\" trigger=\"click\">\n            <div class=\"popovercontent\">\n                <div>目标对象：\n                    <el-radio-group v-model=\"selectBO\" v-for=\"bo in bos\" size=\"small\">\n                        <el-radio :label=\"bo.value\">{{bo.value}}</el-radio>\n                    </el-radio-group>\n                </div>\n            </div>\n        </el-popover>\n        <el-card :body-style=\"{ padding: '0px'}\"  v-if=\"show\">\n            <div class=\"header\">\n                <span style=\"font-size: 15px\"> {{name}} </span>\n                <el-button v-popover:popoverset style=\"float:right;background-color:#d3dce6\" type=\"primary\" size=\"mini\" :plain=\"true\" icon=\"setting\">设置</el-button>\n            </div>\n            <div class=\"content\">\n                <el-tree :data=\"botree\" :props=\"defaultProps\" :node-key=\"id\" accordion @node-click=\"handleNodeClick\"></el-tree>\n            </div>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\n    import ajax from '../../utils/pollAjax'\n    import listToTree from \"../../utils/listToTree\"\n    export default {\n        props: {\n            id: String,\n            name: String,\n            bos:  { type: Array, default: function () { return [] } },\n            botreetemplate: Array,\n            botree: {\n                type: Array,\n                default: function () { return [] }\n            },\n            defaultProps: {\n                type: Object,\n                default: function () {\n                    return {\n                        children: 'children',\n                        label: 'text'\n                    }\n                }\n            },\n            // show: { type: String, default: 'All' }, //P：上级 C：下级 B：同级 All：所有\n            onclick: Function\n        },\n        data: function () {\n            let select = \"\";\n            let isshow=false;\n            if (this.bos.length) {\n                select = this.bos[0].value\n                isshow=true;\n            }\n            return {\n                selectBO:select,\n                show:isshow\n            };\n        },\n        mounted: function () {\n            this.getBOTree();\n        },\n        methods: {\n            getBOType: function () {\n                for (var i = 0; i < this.bos.length; i++) {\n                    if (this.bos[i].value == this.selectBO)\n                        return this.bos[i].type;\n                }\n            },\n            handleNodeClick: function (bo) {\n                this.onclick(bo.text);\n            },\n            getBOTree: function () {\n                let _this = this;\n                let botype = this.getBOType();\n                let param = botreetemplate;\n                let defaultUrl = \"/BOService/GetBOTree\";\n                ajax({\n                    url: defaultUrl,\n                    data: JSON.stringify(param),\n                    contentType: \"application/json\",\n                    type: \"post\",\n                    cache: false,\n                    dataType: 'json',\n                    success: function (result) {\n                        let nodes = [];\n                        for (let i = 0; i < result.length; i++) {\n                            let bo = { \"parentId\": result[i].pid, \"id\": result[i].boid, \"name\": result[i].name }\n                            nodes.push(bo);\n                        }\n                        _this.botree = listToTree(nodes);\n                    },\n                    error: function (err) {\n                        console.log(err);\n                    }\n                });\n            }\n        },\n        watch: {\n            selectBO: function () {\n                this.getBOTree();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .associatebo a {\n        padding: 10px;\n    }\n\n    .associatebo .header {\n        padding: 5px;\n        background-color: #d3dce6;\n        height: 30px;\n        border-bottom: 1px solid lightgrey\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// webpack:///client/components/GtRecommend/gtRcmdBOAssociate.vue?141e220d"],"sourceRoot":""}